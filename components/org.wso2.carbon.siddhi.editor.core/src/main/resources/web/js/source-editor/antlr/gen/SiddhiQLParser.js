// Generated from SiddhiQL.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('../../antlr4-js-runtime/index');

var SiddhiQLListener = require('./SiddhiQLListener').SiddhiQLListener;

//import org.wso2.siddhi.query.compiler.exception.SiddhiParserException;

var grammarFileName = "SiddhiQL.g4";

var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\3r\u0668\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4",
    "\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t",
    "\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27",
    "\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4",
    "\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t",
    "\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t",
    "\61\4\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t",
    "8\49\t9\4:\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC",
    "\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4",
    "O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z",
    "\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4`\t`\4a\ta\4b\tb\4c\tc\4d\td\4",
    "e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\tk\4l\tl\4m\tm\4n\tn\4o\to\4p",
    "\tp\4q\tq\4r\tr\4s\ts\4t\tt\4u\tu\4v\tv\4w\tw\4x\tx\4y\ty\4z\tz\4{\t",
    "{\4|\t|\4}\t}\4~\t~\4\177\t\177\4\u0080\t\u0080\4\u0081\t\u0081\4\u0082",
    "\t\u0082\4\u0083\t\u0083\4\u0084\t\u0084\4\u0085\t\u0085\4\u0086\t\u0086",
    "\4\u0087\t\u0087\3\2\3\2\3\2\3\3\3\3\3\4\3\4\7\4\u0116\n\4\f\4\16\4",
    "\u0119\13\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0122\n\4\3\4\3\4\3\4\3",
    "\4\3\4\3\4\3\4\3\4\5\4\u012c\n\4\7\4\u012e\n\4\f\4\16\4\u0131\13\4\3",
    "\4\3\4\3\4\5\4\u0136\n\4\7\4\u0138\n\4\f\4\16\4\u013b\13\4\3\4\5\4\u013e",
    "\n\4\3\5\3\5\5\5\u0142\n\5\3\6\3\6\5\6\u0146\n\6\3\6\3\6\3\7\7\7\u014b",
    "\n\7\f\7\16\7\u014e\13\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\7\7",
    "\u015a\n\7\f\7\16\7\u015d\13\7\3\7\3\7\3\b\3\b\5\b\u0163\n\b\3\b\3\b",
    "\3\t\7\t\u0168\n\t\f\t\16\t\u016b\13\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3",
    "\t\3\t\3\t\7\t\u0177\n\t\f\t\16\t\u017a\13\t\3\t\3\t\3\n\3\n\5\n\u0180",
    "\n\n\3\n\3\n\3\13\7\13\u0185\n\13\f\13\16\13\u0188\13\13\3\13\3\13\3",
    "\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\7\13\u0194\n\13\f\13\16\13\u0197",
    "\13\13\3\13\3\13\3\13\3\13\5\13\u019d\n\13\3\f\3\f\5\f\u01a1\n\f\3\f",
    "\3\f\3\r\3\r\3\r\5\r\u01a8\n\r\3\16\3\16\3\16\5\16\u01ad\n\16\3\16\3",
    "\16\5\16\u01b1\n\16\3\16\3\16\3\16\5\16\u01b6\n\16\3\17\3\17\5\17\u01ba",
    "\n\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3",
    "\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\5\24\u01d0\n\24\3\24\3\24\3\25",
    "\3\25\3\25\3\25\3\25\3\25\3\25\5\25\u01db\n\25\3\26\3\26\3\27\3\27\5",
    "\27\u01e1\n\27\3\27\3\27\3\30\7\30\u01e6\n\30\f\30\16\30\u01e9\13\30",
    "\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u01f4\n\30\3\30\3",
    "\30\3\30\3\31\3\31\3\32\3\32\5\32\u01fd\n\32\3\33\3\33\3\34\3\34\3\34",
    "\3\34\3\35\3\35\3\35\7\35\u0208\n\35\f\35\16\35\u020b\13\35\3\36\3\36",
    "\3\36\3\36\3\36\5\36\u0212\n\36\3\36\3\36\3\36\5\36\u0217\n\36\7\36",
    "\u0219\n\36\f\36\16\36\u021c\13\36\3\36\3\36\5\36\u0220\n\36\3\37\3",
    "\37\3\37\3\37\3\37\3\37\3\37\3\37\7\37\u022a\n\37\f\37\16\37\u022d\13",
    "\37\3\37\3\37\5\37\u0231\n\37\3 \3 \3 \5 \u0236\n \3 \3 \3!\7!\u023b",
    "\n!\f!\16!\u023e\13!\3!\3!\3!\3!\3!\3!\7!\u0246\n!\f!\16!\u0249\13!",
    "\3!\3!\3!\3!\5!\u024f\n!\3!\3!\3!\5!\u0254\n!\7!\u0256\n!\f!\16!\u0259",
    "\13!\3!\5!\u025c\n!\3!\3!\3\"\3\"\5\"\u0262\n\"\3\"\3\"\3#\3#\3#\3#",
    "\3#\3#\3#\3#\5#\u026e\n#\3$\3$\3$\7$\u0273\n$\f$\16$\u0276\13$\3%\3",
    "%\3%\3%\3&\3&\5&\u027e\n&\3&\3&\3\'\7\'\u0283\n\'\f\'\16\'\u0286\13",
    "\'\3\'\3\'\3\'\5\'\u028b\n\'\3\'\5\'\u028e\n\'\3\'\3\'\3(\3(\3(\3(\3",
    "(\5(\u0297\n(\3)\3)\5)\u029b\n)\3)\5)\u029e\n)\3)\5)\u02a1\n)\3*\3*",
    "\3*\3*\5*\u02a7\n*\3*\3*\3*\3*\5*\u02ad\n*\3*\3*\5*\u02b1\n*\3*\3*\3",
    "*\5*\u02b6\n*\3+\3+\5+\u02ba\n+\3+\5+\u02bd\n+\3+\3+\5+\u02c1\n+\3,",
    "\3,\5,\u02c5\n,\3-\3-\3-\3-\3-\5-\u02cc\n-\3-\3-\3-\3-\3-\5-\u02d3\n",
    "-\3-\3-\3-\3-\5-\u02d9\n-\5-\u02db\n-\3-\3-\3-\7-\u02e0\n-\f-\16-\u02e3",
    "\13-\3.\3.\3.\3.\3.\5.\u02ea\n.\3.\3.\5.\u02ee\n.\5.\u02f0\n.\3.\3.",
    "\3.\7.\u02f5\n.\f.\16.\u02f8\13.\3/\5/\u02fb\n/\3/\3/\3/\3/\5/\u0301",
    "\n/\3/\3/\3/\5/\u0306\n/\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u030e\n",
    "\60\3\60\3\60\3\60\3\60\5\60\u0314\n\60\3\60\3\60\3\60\3\60\5\60\u031a",
    "\n\60\3\60\3\60\3\60\3\60\3\60\3\60\7\60\u0322\n\60\f\60\16\60\u0325",
    "\13\60\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u032d\n\61\3\61\3\61\3\61",
    "\3\61\5\61\u0333\n\61\3\61\3\61\3\61\3\61\5\61\u0339\n\61\3\61\3\61",
    "\3\61\3\61\3\61\3\61\7\61\u0341\n\61\f\61\16\61\u0344\13\61\3\62\3\62",
    "\3\62\3\62\5\62\u034a\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\5",
    "\63\u0354\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64",
    "\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3",
    "\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64",
    "\5\64\u037c\n\64\3\65\5\65\u037f\n\65\3\65\3\65\3\66\3\66\3\66\3\66",
    "\3\67\3\67\3\67\3\67\3\67\38\38\38\58\u038f\n8\38\38\39\39\59\u0395",
    "\n9\3:\6:\u0398\n:\r:\16:\u0399\3;\3;\5;\u039e\n;\3<\3<\5<\u03a2\n<",
    "\3=\5=\u03a5\n=\3=\3=\5=\u03a9\n=\3=\3=\3=\3>\5>\u03af\n>\3>\3>\5>\u03b3",
    "\n>\3>\3>\3>\3>\5>\u03b9\n>\3>\3>\5>\u03bd\n>\3>\3>\3>\5>\u03c2\n>\3",
    "?\3?\3?\3?\5?\u03c8\n?\3?\3?\3?\5?\u03cd\n?\3@\3@\3@\3@\3@\3@\3@\3@",
    "\3@\5@\u03d8\n@\3@\3@\3@\3@\5@\u03de\n@\3@\3@\3@\3@\3@\3@\7@\u03e6\n",
    "@\f@\16@\u03e9\13@\3A\3A\3A\3A\3A\3A\3A\3A\3A\5A\u03f4\nA\3A\3A\3A\3",
    "A\5A\u03fa\nA\3A\3A\3A\3A\3A\3A\7A\u0402\nA\fA\16A\u0405\13A\3B\3B\3",
    "B\3B\3B\5B\u040c\nB\3B\3B\5B\u0410\nB\5B\u0412\nB\3B\3B\3B\7B\u0417",
    "\nB\fB\16B\u041a\13B\3C\3C\3C\3C\5C\u0420\nC\3D\3D\3D\3D\3D\3D\3D\3",
    "D\5D\u042a\nD\3E\3E\3E\3E\3E\3E\3E\5E\u0433\nE\3E\5E\u0436\nE\3E\3E",
    "\5E\u043a\nE\5E\u043c\nE\3F\5F\u043f\nF\3F\3F\3F\3F\3G\3G\3G\3H\3H\3",
    "H\3H\3H\3I\3I\3I\3I\3I\7I\u0452\nI\fI\16I\u0455\13I\5I\u0457\nI\3I\5",
    "I\u045a\nI\3J\3J\3J\3J\3J\7J\u0461\nJ\fJ\16J\u0464\13J\5J\u0466\nJ\3",
    "J\5J\u0469\nJ\3J\5J\u046c\nJ\3J\5J\u046f\nJ\3J\5J\u0472\nJ\3K\3K\3K",
    "\3K\3K\7K\u0479\nK\fK\16K\u047c\13K\3L\3L\3L\3M\3M\3M\3M\3M\7M\u0486",
    "\nM\fM\16M\u0489\13M\3N\3N\5N\u048d\nN\3O\3O\3P\3P\3P\3Q\3Q\5Q\u0496",
    "\nQ\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u049e\nQ\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u04aa",
    "\nQ\3Q\5Q\u04ad\nQ\3Q\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u04b6\nQ\3Q\5Q\u04b9\nQ\3",
    "Q\3Q\3Q\3Q\3Q\5Q\u04c0\nQ\5Q\u04c2\nQ\3R\3R\3R\3R\7R\u04c8\nR\fR\16",
    "R\u04cb\13R\3S\3S\3S\3S\3T\3T\3T\3T\3T\5T\u04d6\nT\3T\5T\u04d9\nT\3",
    "U\3U\5U\u04dd\nU\3U\3U\3U\3U\5U\u04e3\nU\3U\3U\3U\3U\5U\u04e9\nU\3V",
    "\3V\3W\3W\3W\3X\3X\3X\3Y\3Y\3Y\3Y\5Y\u04f7\nY\3Z\3Z\3Z\3[\3[\3[\3[\3",
    "[\5[\u0501\n[\3\\\3\\\3]\3]\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^\5^\u0512",
    "\n^\3^\3^\3^\3^\5^\u0518\n^\3^\3^\3^\3^\5^\u051e\n^\3^\3^\3^\3^\3^\3",
    "^\5^\u0526\n^\3^\3^\3^\3^\5^\u052c\n^\3^\3^\3^\3^\3^\3^\3^\3^\3^\3^",
    "\7^\u0538\n^\f^\16^\u053b\13^\3_\3_\3_\5_\u0540\n_\3_\3_\3_\5_\u0545",
    "\n_\3_\3_\3`\3`\3`\7`\u054c\n`\f`\16`\u054f\13`\3`\5`\u0552\n`\3a\3",
    "a\3a\5a\u0557\na\3a\3a\3a\3b\5b\u055d\nb\3b\3b\3b\3b\3b\5b\u0564\nb",
    "\3c\5c\u0567\nc\3c\3c\3c\3c\3c\5c\u056e\nc\3c\3c\3c\3c\3c\3c\5c\u0576",
    "\nc\5c\u0578\nc\3c\3c\3c\3c\5c\u057e\nc\3d\3d\3d\3d\5d\u0584\nd\5d\u0586",
    "\nd\3e\3e\3f\3f\3g\3g\3h\3h\3i\3i\3j\3j\3j\3j\7j\u0596\nj\fj\16j\u0599",
    "\13j\3k\3k\3l\3l\3m\3m\3n\3n\3o\5o\u05a4\no\3o\3o\3p\3p\3q\3q\3r\3r",
    "\5r\u05ae\nr\3s\3s\3s\3s\3s\3s\3s\3s\5s\u05b8\ns\3t\3t\3u\3u\3u\3u\3",
    "u\3u\3u\3u\3u\3u\3u\3u\5u\u05c8\nu\3u\5u\u05cb\nu\3v\3v\3v\3v\3v\3v",
    "\3v\5v\u05d4\nv\3w\3w\3x\3x\3y\3y\5y\u05dc\ny\3y\5y\u05df\ny\3y\5y\u05e2",
    "\ny\3y\5y\u05e5\ny\3y\5y\u05e8\ny\3y\5y\u05eb\ny\3y\5y\u05ee\ny\3y\3",
    "y\5y\u05f2\ny\3y\5y\u05f5\ny\3y\5y\u05f8\ny\3y\5y\u05fb\ny\3y\5y\u05fe",
    "\ny\3y\5y\u0601\ny\3y\3y\5y\u0605\ny\3y\5y\u0608\ny\3y\5y\u060b\ny\3",
    "y\5y\u060e\ny\3y\5y\u0611\ny\3y\3y\5y\u0615\ny\3y\5y\u0618\ny\3y\5y",
    "\u061b\ny\3y\5y\u061e\ny\3y\3y\5y\u0622\ny\3y\5y\u0625\ny\3y\5y\u0628",
    "\ny\3y\3y\5y\u062c\ny\3y\5y\u062f\ny\3y\3y\5y\u0633\ny\3y\5y\u0636\n",
    "y\3z\3z\3z\3{\3{\3{\3|\3|\3|\3}\3}\3}\3~\3~\3~\3\177\3\177\3\177\3\u0080",
    "\3\u0080\3\u0080\3\u0081\3\u0081\3\u0081\3\u0082\5\u0082\u0651\n\u0082",
    "\3\u0082\3\u0082\3\u0083\5\u0083\u0656\n\u0083\3\u0083\3\u0083\3\u0084",
    "\5\u0084\u065b\n\u0084\3\u0084\3\u0084\3\u0085\5\u0085\u0660\n\u0085",
    "\3\u0085\3\u0085\3\u0086\3\u0086\3\u0087\3\u0087\3\u0087\2\nXZ^`~\u0080",
    "\u0082\u00ba\u0088\2\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \"$&(*,.\60",
    "\62\64\668:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086",
    "\u0088\u008a\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e",
    "\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6",
    "\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce",
    "\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6",
    "\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe",
    "\u0100\u0102\u0104\u0106\u0108\u010a\u010c\2\13\3\2W]\3\2./\3\2MO\5",
    "\2\7\7\t\t\24\24\3\2ag\3\2kl\b\2 !$$&\63\65?ABDg\4\2\22\22\24\24\3\2",
    "_`\u06fa\2\u010e\3\2\2\2\4\u0111\3\2\2\2\6\u0117\3\2\2\2\b\u0141\3\2",
    "\2\2\n\u0143\3\2\2\2\f\u014c\3\2\2\2\16\u0160\3\2\2\2\20\u0169\3\2\2",
    "\2\22\u017d\3\2\2\2\24\u0186\3\2\2\2\26\u019e\3\2\2\2\30\u01a4\3\2\2",
    "\2\32\u01a9\3\2\2\2\34\u01b7\3\2\2\2\36\u01bd\3\2\2\2 \u01c7\3\2\2\2",
    "\"\u01c9\3\2\2\2$\u01cb\3\2\2\2&\u01cd\3\2\2\2(\u01d3\3\2\2\2*\u01dc",
    "\3\2\2\2,\u01de\3\2\2\2.\u01e7\3\2\2\2\60\u01f8\3\2\2\2\62\u01fc\3\2",
    "\2\2\64\u01fe\3\2\2\2\66\u0200\3\2\2\28\u0204\3\2\2\2:\u020c\3\2\2\2",
    "<\u0221\3\2\2\2>\u0235\3\2\2\2@\u023c\3\2\2\2B\u025f\3\2\2\2D\u026d",
    "\3\2\2\2F\u026f\3\2\2\2H\u0277\3\2\2\2J\u027b\3\2\2\2L\u0284\3\2\2\2",
    "N\u0296\3\2\2\2P\u0298\3\2\2\2R\u02a2\3\2\2\2T\u02b7\3\2\2\2V\u02c4",
    "\3\2\2\2X\u02da\3\2\2\2Z\u02ef\3\2\2\2\\\u0305\3\2\2\2^\u0319\3\2\2",
    "\2`\u0338\3\2\2\2b\u0349\3\2\2\2d\u0353\3\2\2\2f\u037b\3\2\2\2h\u037e",
    "\3\2\2\2j\u0382\3\2\2\2l\u0386\3\2\2\2n\u038e\3\2\2\2p\u0392\3\2\2\2",
    "r\u0397\3\2\2\2t\u039d\3\2\2\2v\u03a1\3\2\2\2x\u03a4\3\2\2\2z\u03c1",
    "\3\2\2\2|\u03cc\3\2\2\2~\u03dd\3\2\2\2\u0080\u03f9\3\2\2\2\u0082\u0411",
    "\3\2\2\2\u0084\u041f\3\2\2\2\u0086\u0421\3\2\2\2\u0088\u043b\3\2\2\2",
    "\u008a\u043e\3\2\2\2\u008c\u0444\3\2\2\2\u008e\u0447\3\2\2\2\u0090\u044c",
    "\3\2\2\2\u0092\u045b\3\2\2\2\u0094\u0473\3\2\2\2\u0096\u047d\3\2\2\2",
    "\u0098\u0480\3\2\2\2\u009a\u048a\3\2\2\2\u009c\u048e\3\2\2\2\u009e\u0490",
    "\3\2\2\2\u00a0\u04c1\3\2\2\2\u00a2\u04c3\3\2\2\2\u00a4\u04cc\3\2\2\2",
    "\u00a6\u04d8\3\2\2\2\u00a8\u04e8\3\2\2\2\u00aa\u04ea\3\2\2\2\u00ac\u04ec",
    "\3\2\2\2\u00ae\u04ef\3\2\2\2\u00b0\u04f2\3\2\2\2\u00b2\u04f8\3\2\2\2",
    "\u00b4\u0500\3\2\2\2\u00b6\u0502\3\2\2\2\u00b8\u0504\3\2\2\2\u00ba\u0511",
    "\3\2\2\2\u00bc\u053f\3\2\2\2\u00be\u0551\3\2\2\2\u00c0\u0556\3\2\2\2",
    "\u00c2\u055c\3\2\2\2\u00c4\u057d\3\2\2\2\u00c6\u0585\3\2\2\2\u00c8\u0587",
    "\3\2\2\2\u00ca\u0589\3\2\2\2\u00cc\u058b\3\2\2\2\u00ce\u058d\3\2\2\2",
    "\u00d0\u058f\3\2\2\2\u00d2\u0591\3\2\2\2\u00d4\u059a\3\2\2\2\u00d6\u059c",
    "\3\2\2\2\u00d8\u059e\3\2\2\2\u00da\u05a0\3\2\2\2\u00dc\u05a3\3\2\2\2",
    "\u00de\u05a7\3\2\2\2\u00e0\u05a9\3\2\2\2\u00e2\u05ad\3\2\2\2\u00e4\u05b7",
    "\3\2\2\2\u00e6\u05b9\3\2\2\2\u00e8\u05ca\3\2\2\2\u00ea\u05d3\3\2\2\2",
    "\u00ec\u05d5\3\2\2\2\u00ee\u05d7\3\2\2\2\u00f0\u0635\3\2\2\2\u00f2\u0637",
    "\3\2\2\2\u00f4\u063a\3\2\2\2\u00f6\u063d\3\2\2\2\u00f8\u0640\3\2\2\2",
    "\u00fa\u0643\3\2\2\2\u00fc\u0646\3\2\2\2\u00fe\u0649\3\2\2\2\u0100\u064c",
    "\3\2\2\2\u0102\u0650\3\2\2\2\u0104\u0655\3\2\2\2\u0106\u065a\3\2\2\2",
    "\u0108\u065f\3\2\2\2\u010a\u0663\3\2\2\2\u010c\u0665\3\2\2\2\u010e\u010f",
    "\5\6\4\2\u010f\u0110\7\2\2\3\u0110\3\3\2\2\2\u0111\u0112\7q\2\2\u0112",
    "\5\3\2\2\2\u0113\u0116\5<\37\2\u0114\u0116\5\4\3\2\u0115\u0113\3\2\2",
    "\2\u0115\u0114\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0115\3\2\2\2\u0117",
    "\u0118\3\2\2\2\u0118\u0121\3\2\2\2\u0119\u0117\3\2\2\2\u011a\u0122\5",
    "\f\7\2\u011b\u0122\5\20\t\2\u011c\u0122\5(\25\2\u011d\u0122\5\36\20",
    "\2\u011e\u0122\5\24\13\2\u011f\u0122\5.\30\2\u0120\u0122\5\4\3\2\u0121",
    "\u011a\3\2\2\2\u0121\u011b\3\2\2\2\u0121\u011c\3\2\2\2\u0121\u011d\3",
    "\2\2\2\u0121\u011e\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0120\3\2\2\2\u0122",
    "\u012f\3\2\2\2\u0123\u012b\7\b\2\2\u0124\u012c\5\f\7\2\u0125\u012c\5",
    "\20\t\2\u0126\u012c\5(\25\2\u0127\u012c\5\36\20\2\u0128\u012c\5\24\13",
    "\2\u0129\u012c\5.\30\2\u012a\u012c\5\4\3\2\u012b\u0124\3\2\2\2\u012b",
    "\u0125\3\2\2\2\u012b\u0126\3\2\2\2\u012b\u0127\3\2\2\2\u012b\u0128\3",
    "\2\2\2\u012b\u0129\3\2\2\2\u012b\u012a\3\2\2\2\u012c\u012e\3\2\2\2\u012d",
    "\u0123\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130\3",
    "\2\2\2\u0130\u0139\3\2\2\2\u0131\u012f\3\2\2\2\u0132\u0135\7\b\2\2\u0133",
    "\u0136\5\b\5\2\u0134\u0136\5\4\3\2\u0135\u0133\3\2\2\2\u0135\u0134\3",
    "\2\2\2\u0136\u0138\3\2\2\2\u0137\u0132\3\2\2\2\u0138\u013b\3\2\2\2\u0139",
    "\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013d\3\2\2\2\u013b\u0139\3",
    "\2\2\2\u013c\u013e\7\b\2\2\u013d\u013c\3\2\2\2\u013d\u013e\3\2\2\2\u013e",
    "\7\3\2\2\2\u013f\u0142\5L\'\2\u0140\u0142\5@!\2\u0141\u013f\3\2\2\2",
    "\u0141\u0140\3\2\2\2\u0142\t\3\2\2\2\u0143\u0145\5\f\7\2\u0144\u0146",
    "\7\b\2\2\u0145\u0144\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0147\3\2\2\2",
    "\u0147\u0148\7\2\2\3\u0148\13\3\2\2\2\u0149\u014b\5:\36\2\u014a\u0149",
    "\3\2\2\2\u014b\u014e\3\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d\3\2\2\2",
    "\u014d\u014f\3\2\2\2\u014e\u014c\3\2\2\2\u014f\u0150\7!\2\2\u0150\u0151",
    "\7 \2\2\u0151\u0152\5\u00dco\2\u0152\u0153\7\13\2\2\u0153\u0154\5\u00d4",
    "k\2\u0154\u015b\5\u00e6t\2\u0155\u0156\7\17\2\2\u0156\u0157\5\u00d4",
    "k\2\u0157\u0158\5\u00e6t\2\u0158\u015a\3\2\2\2\u0159\u0155\3\2\2\2\u015a",
    "\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015e\3",
    "\2\2\2\u015d\u015b\3\2\2\2\u015e\u015f\7\f\2\2\u015f\r\3\2\2\2\u0160",
    "\u0162\5\20\t\2\u0161\u0163\7\b\2\2\u0162\u0161\3\2\2\2\u0162\u0163",
    "\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0165\7\2\2\3\u0165\17\3\2\2\2\u0166",
    "\u0168\5:\36\2\u0167\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3",
    "\2\2\2\u0169\u016a\3\2\2\2\u016a\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c",
    "\u016d\7!\2\2\u016d\u016e\7$\2\2\u016e\u016f\5\u00dco\2\u016f\u0170",
    "\7\13\2\2\u0170\u0171\5\u00d4k\2\u0171\u0178\5\u00e6t\2\u0172\u0173",
    "\7\17\2\2\u0173\u0174\5\u00d4k\2\u0174\u0175\5\u00e6t\2\u0175\u0177",
    "\3\2\2\2\u0176\u0172\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2",
    "\u0178\u0179\3\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017c",
    "\7\f\2\2\u017c\21\3\2\2\2\u017d\u017f\5\24\13\2\u017e\u0180\7\b\2\2",
    "\u017f\u017e\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u0182",
    "\7\2\2\3\u0182\23\3\2\2\2\u0183\u0185\5:\36\2\u0184\u0183\3\2\2\2\u0185",
    "\u0188\3\2\2\2\u0186\u0184\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0189\3",
    "\2\2\2\u0188\u0186\3\2\2\2\u0189\u018a\7!\2\2\u018a\u018b\7(\2\2\u018b",
    "\u018c\5\u00dco\2\u018c\u018d\7\13\2\2\u018d\u018e\5\u00d4k\2\u018e",
    "\u0195\5\u00e6t\2\u018f\u0190\7\17\2\2\u0190\u0191\5\u00d4k\2\u0191",
    "\u0192\5\u00e6t\2\u0192\u0194\3\2\2\2\u0193\u018f\3\2\2\2\u0194\u0197",
    "\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0198\3\2\2\2",
    "\u0197\u0195\3\2\2\2\u0198\u0199\7\f\2\2\u0199\u019c\5\u00bc_\2\u019a",
    "\u019b\78\2\2\u019b\u019d\5\u00a6T\2\u019c\u019a\3\2\2\2\u019c\u019d",
    "\3\2\2\2\u019d\25\3\2\2\2\u019e\u01a0\5\30\r\2\u019f\u01a1\7\b\2\2\u01a0",
    "\u019f\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a3\7",
    "\2\2\3\u01a3\27\3\2\2\2\u01a4\u01a5\7&\2\2\u01a5\u01a7\5\32\16\2\u01a6",
    "\u01a8\5\u0092J\2\u01a7\u01a6\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\31\3",
    "\2\2\2\u01a9\u01ac\5\u00ceh\2\u01aa\u01ab\7?\2\2\u01ab\u01ad\5\u00d0",
    "i\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01b0\3\2\2\2\u01ae",
    "\u01af\7D\2\2\u01af\u01b1\5\u00b8]\2\u01b0\u01ae\3\2\2\2\u01b0\u01b1",
    "\3\2\2\2\u01b1\u01b5\3\2\2\2\u01b2\u01b3\5\u00b0Y\2\u01b3\u01b4\5\u00b2",
    "Z\2\u01b4\u01b6\3\2\2\2\u01b5\u01b2\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6",
    "\33\3\2\2\2\u01b7\u01b9\5\36\20\2\u01b8\u01ba\7\b\2\2\u01b9\u01b8\3",
    "\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\7\2\2\3\u01bc",
    "\35\3\2\2\2\u01bd\u01be\7!\2\2\u01be\u01bf\7\"\2\2\u01bf\u01c0\5 \21",
    "\2\u01c0\u01c1\7\r\2\2\u01c1\u01c2\5\"\22\2\u01c2\u01c3\7\16\2\2\u01c3",
    "\u01c4\7\65\2\2\u01c4\u01c5\5\u00e6t\2\u01c5\u01c6\5$\23\2\u01c6\37",
    "\3\2\2\2\u01c7\u01c8\5\u00ecw\2\u01c8!\3\2\2\2\u01c9\u01ca\5\u00ecw",
    "\2\u01ca#\3\2\2\2\u01cb\u01cc\7r\2\2\u01cc%\3\2\2\2\u01cd\u01cf\5(\25",
    "\2\u01ce\u01d0\7\b\2\2\u01cf\u01ce\3\2\2\2\u01cf\u01d0\3\2\2\2\u01d0",
    "\u01d1\3\2\2\2\u01d1\u01d2\7\2\2\3\u01d2\'\3\2\2\2\u01d3\u01d4\7!\2",
    "\2\u01d4\u01d5\7#\2\2\u01d5\u01d6\5*\26\2\u01d6\u01da\7@\2\2\u01d7\u01d8",
    "\7L\2\2\u01d8\u01db\5\u00f0y\2\u01d9\u01db\5\u010c\u0087\2\u01da\u01d7",
    "\3\2\2\2\u01da\u01d9\3\2\2\2\u01db)\3\2\2\2\u01dc\u01dd\5\u00ecw\2\u01dd",
    "+\3\2\2\2\u01de\u01e0\5.\30\2\u01df\u01e1\7\b\2\2\u01e0\u01df\3\2\2",
    "\2\u01e0\u01e1\3\2\2\2\u01e1\u01e2\3\2\2\2\u01e2\u01e3\7\2\2\3\u01e3",
    "-\3\2\2\2\u01e4\u01e6\5:\36\2\u01e5\u01e4\3\2\2\2\u01e6\u01e9\3\2\2",
    "\2\u01e7\u01e5\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u01ea\3\2\2\2\u01e9",
    "\u01e7\3\2\2\2\u01ea\u01eb\7!\2\2\u01eb\u01ec\7h\2\2\u01ec\u01ed\5\60",
    "\31\2\u01ed\u01ee\7&\2\2\u01ee\u01ef\5P)\2\u01ef\u01f0\5\u0090I\2\u01f0",
    "\u01f3\7i\2\2\u01f1\u01f2\7+\2\2\u01f2\u01f4\5\u00c4c\2\u01f3\u01f1",
    "\3\2\2\2\u01f3\u01f4\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f6\7L\2\2",
    "\u01f6\u01f7\5\62\32\2\u01f7/\3\2\2\2\u01f8\u01f9\5\u00ecw\2\u01f9\61",
    "\3\2\2\2\u01fa\u01fd\5\66\34\2\u01fb\u01fd\58\35\2\u01fc\u01fa\3\2\2",
    "\2\u01fc\u01fb\3\2\2\2\u01fd\63\3\2\2\2\u01fe\u01ff\t\2\2\2\u01ff\65",
    "\3\2\2\2\u0200\u0201\5\64\33\2\u0201\u0202\7\n\2\2\u0202\u0203\5\64",
    "\33\2\u0203\67\3\2\2\2\u0204\u0209\5\64\33\2\u0205\u0206\7\17\2\2\u0206",
    "\u0208\5\64\33\2\u0207\u0205\3\2\2\2\u0208\u020b\3\2\2\2\u0209\u0207",
    "\3\2\2\2\u0209\u020a\3\2\2\2\u020a9\3\2\2\2\u020b\u0209\3\2\2\2\u020c",
    "\u020d\7\35\2\2\u020d\u021f\5\u00e2r\2\u020e\u0211\7\13\2\2\u020f\u0212",
    "\5> \2\u0210\u0212\5:\36\2\u0211\u020f\3\2\2\2\u0211\u0210\3\2\2\2\u0212",
    "\u021a\3\2\2\2\u0213\u0216\7\17\2\2\u0214\u0217\5> \2\u0215\u0217\5",
    ":\36\2\u0216\u0214\3\2\2\2\u0216\u0215\3\2\2\2\u0217\u0219\3\2\2\2\u0218",
    "\u0213\3\2\2\2\u0219\u021c\3\2\2\2\u021a\u0218\3\2\2\2\u021a\u021b\3",
    "\2\2\2\u021b\u021d\3\2\2\2\u021c\u021a\3\2\2\2\u021d\u021e\7\f\2\2\u021e",
    "\u0220\3\2\2\2\u021f\u020e\3\2\2\2\u021f\u0220\3\2\2\2\u0220;\3\2\2",
    "\2\u0221\u0222\7\35\2\2\u0222\u0223\7%\2\2\u0223\u0224\7\7\2\2\u0224",
    "\u0230\5\u00e2r\2\u0225\u0226\7\13\2\2\u0226\u022b\5> \2\u0227\u0228",
    "\7\17\2\2\u0228\u022a\5> \2\u0229\u0227\3\2\2\2\u022a\u022d\3\2\2\2",
    "\u022b\u0229\3\2\2\2\u022b\u022c\3\2\2\2\u022c\u022e\3\2\2\2\u022d\u022b",
    "\3\2\2\2\u022e\u022f\7\f\2\2\u022f\u0231\3\2\2\2\u0230\u0225\3\2\2\2",
    "\u0230\u0231\3\2\2\2\u0231=\3\2\2\2\u0232\u0233\5\u00d2j\2\u0233\u0234",
    "\7\20\2\2\u0234\u0236\3\2\2\2\u0235\u0232\3\2\2\2\u0235\u0236\3\2\2",
    "\2\u0236\u0237\3\2\2\2\u0237\u0238\5\u00d8m\2\u0238?\3\2\2\2\u0239\u023b",
    "\5:\36\2\u023a\u0239\3\2\2\2\u023b\u023e\3\2\2\2\u023c\u023a\3\2\2\2",
    "\u023c\u023d\3\2\2\2\u023d\u023f\3\2\2\2\u023e\u023c\3\2\2\2\u023f\u0240",
    "\7\'\2\2\u0240\u0241\7H\2\2\u0241\u0242\7\13\2\2\u0242\u0247\5D#\2\u0243",
    "\u0244\7\17\2\2\u0244\u0246\5D#\2\u0245\u0243\3\2\2\2\u0246\u0249\3",
    "\2\2\2\u0247\u0245\3\2\2\2\u0247\u0248\3\2\2\2\u0248\u024a\3\2\2\2\u0249",
    "\u0247\3\2\2\2\u024a\u024b\7\f\2\2\u024b\u024e\7I\2\2\u024c\u024f\5",
    "L\'\2\u024d\u024f\5\4\3\2\u024e\u024c\3\2\2\2\u024e\u024d\3\2\2\2\u024f",
    "\u0257\3\2\2\2\u0250\u0253\7\b\2\2\u0251\u0254\5L\'\2\u0252\u0254\5",
    "\4\3\2\u0253\u0251\3\2\2\2\u0253\u0252\3\2\2\2\u0254\u0256\3\2\2\2\u0255",
    "\u0250\3\2\2\2\u0256\u0259\3\2\2\2\u0257\u0255\3\2\2\2\u0257\u0258\3",
    "\2\2\2\u0258\u025b\3\2\2\2\u0259\u0257\3\2\2\2\u025a\u025c\7\b\2\2\u025b",
    "\u025a\3\2\2\2\u025b\u025c\3\2\2\2\u025c\u025d\3\2\2\2\u025d\u025e\7",
    "J\2\2\u025eA\3\2\2\2\u025f\u0261\5@!\2\u0260\u0262\7\b\2\2\u0261\u0260",
    "\3\2\2\2\u0261\u0262\3\2\2\2\u0262\u0263\3\2\2\2\u0263\u0264\7\2\2\3",
    "\u0264C\3\2\2\2\u0265\u0266\5\u00b6\\\2\u0266\u0267\7>\2\2\u0267\u0268",
    "\5\u00ccg\2\u0268\u026e\3\2\2\2\u0269\u026a\5F$\2\u026a\u026b\7>\2\2",
    "\u026b\u026c\5\u00ccg\2\u026c\u026e\3\2\2\2\u026d\u0265\3\2\2\2\u026d",
    "\u0269\3\2\2\2\u026eE\3\2\2\2\u026f\u0274\5H%\2\u0270\u0271\7A\2\2\u0271",
    "\u0273\5H%\2\u0272\u0270\3\2\2\2\u0273\u0276\3\2\2\2\u0274\u0272\3\2",
    "\2\2\u0274\u0275\3\2\2\2\u0275G\3\2\2\2\u0276\u0274\3\2\2\2\u0277\u0278",
    "\5\u00b8]\2\u0278\u0279\7?\2\2\u0279\u027a\5\u010c\u0087\2\u027aI\3",
    "\2\2\2\u027b\u027d\5L\'\2\u027c\u027e\7\b\2\2\u027d\u027c\3\2\2\2\u027d",
    "\u027e\3\2\2\2\u027e\u027f\3\2\2\2\u027f\u0280\7\2\2\3\u0280K\3\2\2",
    "\2\u0281\u0283\5:\36\2\u0282\u0281\3\2\2\2\u0283\u0286\3\2\2\2\u0284",
    "\u0282\3\2\2\2\u0284\u0285\3\2\2\2\u0285\u0287\3\2\2\2\u0286\u0284\3",
    "\2\2\2\u0287\u0288\7&\2\2\u0288\u028a\5N(\2\u0289\u028b\5\u0092J\2\u028a",
    "\u0289\3\2\2\2\u028a\u028b\3\2\2\2\u028b\u028d\3\2\2\2\u028c\u028e\5",
    "\u00a8U\2\u028d\u028c\3\2\2\2\u028d\u028e\3\2\2\2\u028e\u028f\3\2\2",
    "\2\u028f\u0290\5\u00a0Q\2\u0290M\3\2\2\2\u0291\u0297\5P)\2\u0292\u0297",
    "\5R*\2\u0293\u0297\5V,\2\u0294\u0297\5v<\2\u0295\u0297\5\u0088E\2\u0296",
    "\u0291\3\2\2\2\u0296\u0292\3\2\2\2\u0296\u0293\3\2\2\2\u0296\u0294\3",
    "\2\2\2\u0296\u0295\3\2\2\2\u0297O\3\2\2\2\u0298\u029a\5\u00dco\2\u0299",
    "\u029b\5r:\2\u029a\u0299\3\2\2\2\u029a\u029b\3\2\2\2\u029b\u029d\3\2",
    "\2\2\u029c\u029e\5\u008eH\2\u029d\u029c\3\2\2\2\u029d\u029e\3\2\2\2",
    "\u029e\u02a0\3\2\2\2\u029f\u02a1\5r:\2\u02a0\u029f\3\2\2\2\u02a0\u02a1",
    "\3\2\2\2\u02a1Q\3\2\2\2\u02a2\u02ac\5T+\2\u02a3\u02a4\5\u00e8u\2\u02a4",
    "\u02a6\5T+\2\u02a5\u02a7\7V\2\2\u02a6\u02a5\3\2\2\2\u02a6\u02a7\3\2",
    "\2\2\u02a7\u02ad\3\2\2\2\u02a8\u02a9\7V\2\2\u02a9\u02aa\5\u00e8u\2\u02aa",
    "\u02ab\5T+\2\u02ab\u02ad\3\2\2\2\u02ac\u02a3\3\2\2\2\u02ac\u02a8\3\2",
    "\2\2\u02ad\u02b0\3\2\2\2\u02ae\u02af\7D\2\2\u02af\u02b1\5\u00b8]\2\u02b0",
    "\u02ae\3\2\2\2\u02b0\u02b1\3\2\2\2\u02b1\u02b5\3\2\2\2\u02b2\u02b3\5",
    "\u00b0Y\2\u02b3\u02b4\5\u00b2Z\2\u02b4\u02b6\3\2\2\2\u02b5\u02b2\3\2",
    "\2\2\u02b5\u02b6\3\2\2\2\u02b6S\3\2\2\2\u02b7\u02b9\5\u00dco\2\u02b8",
    "\u02ba\5r:\2\u02b9\u02b8\3\2\2\2\u02b9\u02ba\3\2\2\2\u02ba\u02bc\3\2",
    "\2\2\u02bb\u02bd\5\u008eH\2\u02bc\u02bb\3\2\2\2\u02bc\u02bd\3\2\2\2",
    "\u02bd\u02c0\3\2\2\2\u02be\u02bf\7?\2\2\u02bf\u02c1\5\u00d0i\2\u02c0",
    "\u02be\3\2\2\2\u02c0\u02c1\3\2\2\2\u02c1U\3\2\2\2\u02c2\u02c5\5X-\2",
    "\u02c3\u02c5\5\\/\2\u02c4\u02c2\3\2\2\2\u02c4\u02c3\3\2\2\2\u02c5W\3",
    "\2\2\2\u02c6\u02c7\b-\1\2\u02c7\u02c8\7\13\2\2\u02c8\u02c9\5X-\2\u02c9",
    "\u02cb\7\f\2\2\u02ca\u02cc\5\u00aeX\2\u02cb\u02ca\3\2\2\2\u02cb\u02cc",
    "\3\2\2\2\u02cc\u02db\3\2\2\2\u02cd\u02ce\7L\2\2\u02ce\u02cf\7\13\2\2",
    "\u02cf\u02d0\5Z.\2\u02d0\u02d2\7\f\2\2\u02d1\u02d3\5\u00aeX\2\u02d2",
    "\u02d1\3\2\2\2\u02d2\u02d3\3\2\2\2\u02d3\u02db\3\2\2\2\u02d4\u02db\5",
    "Z.\2\u02d5\u02d6\7L\2\2\u02d6\u02d8\5b\62\2\u02d7\u02d9\5\u00aeX\2\u02d8",
    "\u02d7\3\2\2\2\u02d8\u02d9\3\2\2\2\u02d9\u02db\3\2\2\2\u02da\u02c6\3",
    "\2\2\2\u02da\u02cd\3\2\2\2\u02da\u02d4\3\2\2\2\u02da\u02d5\3\2\2\2\u02db",
    "\u02e1\3\2\2\2\u02dc\u02dd\f\5\2\2\u02dd\u02de\7\36\2\2\u02de\u02e0",
    "\5X-\6\u02df\u02dc\3\2\2\2\u02e0\u02e3\3\2\2\2\u02e1\u02df\3\2\2\2\u02e1",
    "\u02e2\3\2\2\2\u02e2Y\3\2\2\2\u02e3\u02e1\3\2\2\2\u02e4\u02e5\b.\1\2",
    "\u02e5\u02e6\7\13\2\2\u02e6\u02e7\5Z.\2\u02e7\u02e9\7\f\2\2\u02e8\u02ea",
    "\5\u00aeX\2\u02e9\u02e8\3\2\2\2\u02e9\u02ea\3\2\2\2\u02ea\u02f0\3\2",
    "\2\2\u02eb\u02ed\5b\62\2\u02ec\u02ee\5\u00aeX\2\u02ed\u02ec\3\2\2\2",
    "\u02ed\u02ee\3\2\2\2\u02ee\u02f0\3\2\2\2\u02ef\u02e4\3\2\2\2\u02ef\u02eb",
    "\3\2\2\2\u02f0\u02f6\3\2\2\2\u02f1\u02f2\f\4\2\2\u02f2\u02f3\7\36\2",
    "\2\u02f3\u02f5\5Z.\5\u02f4\u02f1\3\2\2\2\u02f5\u02f8\3\2\2\2\u02f6\u02f4",
    "\3\2\2\2\u02f6\u02f7\3\2\2\2\u02f7[\3\2\2\2\u02f8\u02f6\3\2\2\2\u02f9",
    "\u02fb\7L\2\2\u02fa\u02f9\3\2\2\2\u02fa\u02fb\3\2\2\2\u02fb\u02fc\3",
    "\2\2\2\u02fc\u02fd\7\13\2\2\u02fd\u02fe\5\\/\2\u02fe\u0300\7\f\2\2\u02ff",
    "\u0301\5\u00aeX\2\u0300\u02ff\3\2\2\2\u0300\u0301\3\2\2\2\u0301\u0306",
    "\3\2\2\2\u0302\u0306\5h\65\2\u0303\u0306\5^\60\2\u0304\u0306\5`\61\2",
    "\u0305\u02fa\3\2\2\2\u0305\u0302\3\2\2\2\u0305\u0303\3\2\2\2\u0305\u0304",
    "\3\2\2\2\u0306]\3\2\2\2\u0307\u0308\b\60\1\2\u0308\u0309\5X-\2\u0309",
    "\u030a\7\36\2\2\u030a\u030b\5^\60\3\u030b\u031a\3\2\2\2\u030c\u030e",
    "\7L\2\2\u030d\u030c\3\2\2\2\u030d\u030e\3\2\2\2\u030e\u030f\3\2\2\2",
    "\u030f\u0310\7\13\2\2\u0310\u0311\5^\60\2\u0311\u0313\7\f\2\2\u0312",
    "\u0314\5\u00aeX\2\u0313\u0312\3\2\2\2\u0313\u0314\3\2\2\2\u0314\u031a",
    "\3\2\2\2\u0315\u0316\5h\65\2\u0316\u0317\7\36\2\2\u0317\u0318\5X-\2",
    "\u0318\u031a\3\2\2\2\u0319\u0307\3\2\2\2\u0319\u030d\3\2\2\2\u0319\u0315",
    "\3\2\2\2\u031a\u0323\3\2\2\2\u031b\u031c\f\5\2\2\u031c\u031d\7\36\2",
    "\2\u031d\u0322\5^\60\6\u031e\u031f\f\4\2\2\u031f\u0320\7\36\2\2\u0320",
    "\u0322\5h\65\2\u0321\u031b\3\2\2\2\u0321\u031e\3\2\2\2\u0322\u0325\3",
    "\2\2\2\u0323\u0321\3\2\2\2\u0323\u0324\3\2\2\2\u0324_\3\2\2\2\u0325",
    "\u0323\3\2\2\2\u0326\u0327\b\61\1\2\u0327\u0328\5h\65\2\u0328\u0329",
    "\7\36\2\2\u0329\u032a\5`\61\4\u032a\u0339\3\2\2\2\u032b\u032d\7L\2\2",
    "\u032c\u032b\3\2\2\2\u032c\u032d\3\2\2\2\u032d\u032e\3\2\2\2\u032e\u032f",
    "\7\13\2\2\u032f\u0330\5`\61\2\u0330\u0332\7\f\2\2\u0331\u0333\5\u00ae",
    "X\2\u0332\u0331\3\2\2\2\u0332\u0333\3\2\2\2\u0333\u0339\3\2\2\2\u0334",
    "\u0335\5X-\2\u0335\u0336\7\36\2\2\u0336\u0337\5h\65\2\u0337\u0339\3",
    "\2\2\2\u0338\u0326\3\2\2\2\u0338\u032c\3\2\2\2\u0338\u0334\3\2\2\2\u0339",
    "\u0342\3\2\2\2\u033a\u033b\f\5\2\2\u033b\u033c\7\36\2\2\u033c\u0341",
    "\5`\61\6\u033d\u033e\f\3\2\2\u033e\u033f\7\36\2\2\u033f\u0341\5X-\2",
    "\u0340\u033a\3\2\2\2\u0340\u033d\3\2\2\2\u0341\u0344\3\2\2\2\u0342\u0340",
    "\3\2\2\2\u0342\u0343\3\2\2\2\u0343a\3\2\2\2\u0344\u0342\3\2\2\2\u0345",
    "\u034a\5d\63\2\u0346\u034a\5l\67\2\u0347\u034a\5n8\2\u0348\u034a\5f",
    "\64\2\u0349\u0345\3\2\2\2\u0349\u0346\3\2\2\2\u0349\u0347\3\2\2\2\u0349",
    "\u0348\3\2\2\2\u034ac\3\2\2\2\u034b\u034c\5n8\2\u034c\u034d\7B\2\2\u034d",
    "\u034e\5n8\2\u034e\u0354\3\2\2\2\u034f\u0350\5n8\2\u0350\u0351\7A\2",
    "\2\u0351\u0352\5n8\2\u0352\u0354\3\2\2\2\u0353\u034b\3\2\2\2\u0353\u034f",
    "\3\2\2\2\u0354e\3\2\2\2\u0355\u0356\7\13\2\2\u0356\u0357\5f\64\2\u0357",
    "\u0358\7\f\2\2\u0358\u037c\3\2\2\2\u0359\u035a\5n8\2\u035a\u035b\7B",
    "\2\2\u035b\u035c\7F\2\2\u035c\u035d\5p9\2\u035d\u037c\3\2\2\2\u035e",
    "\u035f\7F\2\2\u035f\u0360\5p9\2\u0360\u0361\7B\2\2\u0361\u0362\5n8\2",
    "\u0362\u037c\3\2\2\2\u0363\u0364\5n8\2\u0364\u0365\7B\2\2\u0365\u0366",
    "\5j\66\2\u0366\u037c\3\2\2\2\u0367\u0368\5j\66\2\u0368\u0369\7B\2\2",
    "\u0369\u036a\5n8\2\u036a\u037c\3\2\2\2\u036b\u036c\5j\66\2\u036c\u036d",
    "\7B\2\2\u036d\u036e\5j\66\2\u036e\u037c\3\2\2\2\u036f\u0370\5n8\2\u0370",
    "\u0371\7A\2\2\u0371\u0372\5j\66\2\u0372\u037c\3\2\2\2\u0373\u0374\5",
    "j\66\2\u0374\u0375\7A\2\2\u0375\u0376\5n8\2\u0376\u037c\3\2\2\2\u0377",
    "\u0378\5j\66\2\u0378\u0379\7A\2\2\u0379\u037a\5j\66\2\u037a\u037c\3",
    "\2\2\2\u037b\u0355\3\2\2\2\u037b\u0359\3\2\2\2\u037b\u035e\3\2\2\2\u037b",
    "\u0363\3\2\2\2\u037b\u0367\3\2\2\2\u037b\u036b\3\2\2\2\u037b\u036f\3",
    "\2\2\2\u037b\u0373\3\2\2\2\u037b\u0377\3\2\2\2\u037cg\3\2\2\2\u037d",
    "\u037f\7L\2\2\u037e\u037d\3\2\2\2\u037e\u037f\3\2\2\2\u037f\u0380\3",
    "\2\2\2\u0380\u0381\5j\66\2\u0381i\3\2\2\2\u0382\u0383\7F\2\2\u0383\u0384",
    "\5p9\2\u0384\u0385\5\u00acW\2\u0385k\3\2\2\2\u0386\u0387\5n8\2\u0387",
    "\u0388\7\27\2\2\u0388\u0389\5\u00e4s\2\u0389\u038a\7\31\2\2\u038am\3",
    "\2\2\2\u038b\u038c\5\u00e0q\2\u038c\u038d\7\20\2\2\u038d\u038f\3\2\2",
    "\2\u038e\u038b\3\2\2\2\u038e\u038f\3\2\2\2\u038f\u0390\3\2\2\2\u0390",
    "\u0391\5p9\2\u0391o\3\2\2\2\u0392\u0394\5\u00dco\2\u0393\u0395\5r:\2",
    "\u0394\u0393\3\2\2\2\u0394\u0395\3\2\2\2\u0395q\3\2\2\2\u0396\u0398",
    "\5t;\2\u0397\u0396\3\2\2\2\u0398\u0399\3\2\2\2\u0399\u0397\3\2\2\2\u0399",
    "\u039a\3\2\2\2\u039as\3\2\2\2\u039b\u039e\5\u008aF\2\u039c\u039e\5\u008c",
    "G\2\u039d\u039b\3\2\2\2\u039d\u039c\3\2\2\2\u039eu\3\2\2\2\u039f\u03a2",
    "\5x=\2\u03a0\u03a2\5z>\2\u03a1\u039f\3\2\2\2\u03a1\u03a0\3\2\2\2\u03a2",
    "w\3\2\2\2\u03a3\u03a5\7L\2\2\u03a4\u03a3\3\2\2\2\u03a4\u03a5\3\2\2\2",
    "\u03a5\u03a6\3\2\2\2\u03a6\u03a8\5\u0084C\2\u03a7\u03a9\5\u00aeX\2\u03a8",
    "\u03a7\3\2\2\2\u03a8\u03a9\3\2\2\2\u03a9\u03aa\3\2\2\2\u03aa\u03ab\7",
    "\17\2\2\u03ab\u03ac\5\u0082B\2\u03acy\3\2\2\2\u03ad\u03af\7L\2\2\u03ae",
    "\u03ad\3\2\2\2\u03ae\u03af\3\2\2\2\u03af\u03b0\3\2\2\2\u03b0\u03b2\5",
    "|?\2\u03b1\u03b3\5\u00aeX\2\u03b2\u03b1\3\2\2\2\u03b2\u03b3\3\2\2\2",
    "\u03b3\u03b4\3\2\2\2\u03b4\u03b5\7\17\2\2\u03b5\u03b6\5\u0082B\2\u03b6",
    "\u03c2\3\2\2\2\u03b7\u03b9\7L\2\2\u03b8\u03b7\3\2\2\2\u03b8\u03b9\3",
    "\2\2\2\u03b9\u03ba\3\2\2\2\u03ba\u03bc\5\u0084C\2\u03bb\u03bd\5\u00ae",
    "X\2\u03bc\u03bb\3\2\2\2\u03bc\u03bd\3\2\2\2\u03bd\u03be\3\2\2\2\u03be",
    "\u03bf\7\17\2\2\u03bf\u03c0\5|?\2\u03c0\u03c2\3\2\2\2\u03c1\u03ae\3",
    "\2\2\2\u03c1\u03b8\3\2\2\2\u03c2{\3\2\2\2\u03c3\u03c4\7\13\2\2\u03c4",
    "\u03c5\5|?\2\u03c5\u03c7\7\f\2\2\u03c6\u03c8\5\u00aeX\2\u03c7\u03c6",
    "\3\2\2\2\u03c7\u03c8\3\2\2\2\u03c8\u03cd\3\2\2\2\u03c9\u03cd\5j\66\2",
    "\u03ca\u03cd\5~@\2\u03cb\u03cd\5\u0080A\2\u03cc\u03c3\3\2\2\2\u03cc",
    "\u03c9\3\2\2\2\u03cc\u03ca\3\2\2\2\u03cc\u03cb\3\2\2\2\u03cd}\3\2\2",
    "\2\u03ce\u03cf\b@\1\2\u03cf\u03d0\5\u0082B\2\u03d0\u03d1\7\17\2\2\u03d1",
    "\u03d2\5~@\3\u03d2\u03de\3\2\2\2\u03d3\u03d4\7\13\2\2\u03d4\u03d5\5",
    "~@\2\u03d5\u03d7\7\f\2\2\u03d6\u03d8\5\u00aeX\2\u03d7\u03d6\3\2\2\2",
    "\u03d7\u03d8\3\2\2\2\u03d8\u03de\3\2\2\2\u03d9\u03da\5j\66\2\u03da\u03db",
    "\7\17\2\2\u03db\u03dc\5\u0082B\2\u03dc\u03de\3\2\2\2\u03dd\u03ce\3\2",
    "\2\2\u03dd\u03d3\3\2\2\2\u03dd\u03d9\3\2\2\2\u03de\u03e7\3\2\2\2\u03df",
    "\u03e0\f\5\2\2\u03e0\u03e1\7\17\2\2\u03e1\u03e6\5~@\6\u03e2\u03e3\f",
    "\4\2\2\u03e3\u03e4\7\17\2\2\u03e4\u03e6\5j\66\2\u03e5\u03df\3\2\2\2",
    "\u03e5\u03e2\3\2\2\2\u03e6\u03e9\3\2\2\2\u03e7\u03e5\3\2\2\2\u03e7\u03e8",
    "\3\2\2\2\u03e8\177\3\2\2\2\u03e9\u03e7\3\2\2\2\u03ea\u03eb\bA\1\2\u03eb",
    "\u03ec\5j\66\2\u03ec\u03ed\7\17\2\2\u03ed\u03ee\5\u0080A\4\u03ee\u03fa",
    "\3\2\2\2\u03ef\u03f0\7\13\2\2\u03f0\u03f1\5\u0080A\2\u03f1\u03f3\7\f",
    "\2\2\u03f2\u03f4\5\u00aeX\2\u03f3\u03f2\3\2\2\2\u03f3\u03f4\3\2\2\2",
    "\u03f4\u03fa\3\2\2\2\u03f5\u03f6\5\u0082B\2\u03f6\u03f7\7\17\2\2\u03f7",
    "\u03f8\5j\66\2\u03f8\u03fa\3\2\2\2\u03f9\u03ea\3\2\2\2\u03f9\u03ef\3",
    "\2\2\2\u03f9\u03f5\3\2\2\2\u03fa\u0403\3\2\2\2\u03fb\u03fc\f\5\2\2\u03fc",
    "\u03fd\7\17\2\2\u03fd\u0402\5\u0080A\6\u03fe\u03ff\f\3\2\2\u03ff\u0400",
    "\7\17\2\2\u0400\u0402\5\u0082B\2\u0401\u03fb\3\2\2\2\u0401\u03fe\3\2",
    "\2\2\u0402\u0405\3\2\2\2\u0403\u0401\3\2\2\2\u0403\u0404\3\2\2\2\u0404",
    "\u0081\3\2\2\2\u0405\u0403\3\2\2\2\u0406\u0407\bB\1\2\u0407\u0408\7",
    "\13\2\2\u0408\u0409\5\u0082B\2\u0409\u040b\7\f\2\2\u040a\u040c\5\u00ae",
    "X\2\u040b\u040a\3\2\2\2\u040b\u040c\3\2\2\2\u040c\u0412\3\2\2\2\u040d",
    "\u040f\5\u0084C\2\u040e\u0410\5\u00aeX\2\u040f\u040e\3\2\2\2\u040f\u0410",
    "\3\2\2\2\u0410\u0412\3\2\2\2\u0411\u0406\3\2\2\2\u0411\u040d\3\2\2\2",
    "\u0412\u0418\3\2\2\2\u0413\u0414\f\4\2\2\u0414\u0415\7\17\2\2\u0415",
    "\u0417\5\u0082B\5\u0416\u0413\3\2\2\2\u0417\u041a\3\2\2\2\u0418\u0416",
    "\3\2\2\2\u0418\u0419\3\2\2\2\u0419\u0083\3\2\2\2\u041a\u0418\3\2\2\2",
    "\u041b\u0420\5d\63\2\u041c\u0420\5\u0086D\2\u041d\u0420\5n8\2\u041e",
    "\u0420\5f\64\2\u041f\u041b\3\2\2\2\u041f\u041c\3\2\2\2\u041f\u041d\3",
    "\2\2\2\u041f\u041e\3\2\2\2\u0420\u0085\3\2\2\2\u0421\u0429\5n8\2\u0422",
    "\u0423\7\27\2\2\u0423\u0424\5\u00e4s\2\u0424\u0425\7\31\2\2\u0425\u042a",
    "\3\2\2\2\u0426\u042a\7\21\2\2\u0427\u042a\7\23\2\2\u0428\u042a\7\22",
    "\2\2\u0429\u0422\3\2\2\2\u0429\u0426\3\2\2\2\u0429\u0427\3\2\2\2\u0429",
    "\u0428\3\2\2\2\u042a\u0087\3\2\2\2\u042b\u042c\7\13\2\2\u042c\u042d",
    "\5\u0088E\2\u042d\u042e\7\f\2\2\u042e\u043c\3\2\2\2\u042f\u0430\7&\2",
    "\2\u0430\u0432\5N(\2\u0431\u0433\5\u0092J\2\u0432\u0431\3\2\2\2\u0432",
    "\u0433\3\2\2\2\u0433\u0435\3\2\2\2\u0434\u0436\5\u00a8U\2\u0435\u0434",
    "\3\2\2\2\u0435\u0436\3\2\2\2\u0436\u0437\3\2\2\2\u0437\u0439\7\65\2",
    "\2\u0438\u043a\5\u00a6T\2\u0439\u0438\3\2\2\2\u0439\u043a\3\2\2\2\u043a",
    "\u043c\3\2\2\2\u043b\u042b\3\2\2\2\u043b\u042f\3\2\2\2\u043c\u0089\3",
    "\2\2\2\u043d\u043f\7\37\2\2\u043e\u043d\3\2\2\2\u043e\u043f\3\2\2\2",
    "\u043f\u0440\3\2\2\2\u0440\u0441\7\r\2\2\u0441\u0442\5\u00b8]\2\u0442",
    "\u0443\7\16\2\2\u0443\u008b\3\2\2\2\u0444\u0445\7\37\2\2\u0445\u0446",
    "\5\u00bc_\2\u0446\u008d\3\2\2\2\u0447\u0448\7\37\2\2\u0448\u0449\7(",
    "\2\2\u0449\u044a\7\t\2\2\u044a\u044b\5\u00bc_\2\u044b\u008f\3\2\2\2",
    "\u044c\u0456\7)\2\2\u044d\u0457\7\21\2\2\u044e\u0453\5\u00b4[\2\u044f",
    "\u0450\7\17\2\2\u0450\u0452\5\u00b4[\2\u0451\u044f\3\2\2\2\u0452\u0455",
    "\3\2\2\2\u0453\u0451\3\2\2\2\u0453\u0454\3\2\2\2\u0454\u0457\3\2\2\2",
    "\u0455\u0453\3\2\2\2\u0456\u044d\3\2\2\2\u0456\u044e\3\2\2\2\u0457\u0459",
    "\3\2\2\2\u0458\u045a\5\u0094K\2\u0459\u0458\3\2\2\2\u0459\u045a\3\2",
    "\2\2\u045a\u0091\3\2\2\2\u045b\u0465\7)\2\2\u045c\u0466\7\21\2\2\u045d",
    "\u0462\5\u00b4[\2\u045e\u045f\7\17\2\2\u045f\u0461\5\u00b4[\2\u0460",
    "\u045e\3\2\2\2\u0461\u0464\3\2\2\2\u0462\u0460\3\2\2\2\u0462\u0463\3",
    "\2\2\2\u0463\u0466\3\2\2\2\u0464\u0462\3\2\2\2\u0465\u045c\3\2\2\2\u0465",
    "\u045d\3\2\2\2\u0466\u0468\3\2\2\2\u0467\u0469\5\u0094K\2\u0468\u0467",
    "\3\2\2\2\u0468\u0469\3\2\2\2\u0469\u046b\3\2\2\2\u046a\u046c\5\u0096",
    "L\2\u046b\u046a\3\2\2\2\u046b\u046c\3\2\2\2\u046c\u046e\3\2\2\2\u046d",
    "\u046f\5\u0098M\2\u046e\u046d\3\2\2\2\u046e\u046f\3\2\2\2\u046f\u0471",
    "\3\2\2\2\u0470\u0472\5\u009eP\2\u0471\u0470\3\2\2\2\u0471\u0472\3\2",
    "\2\2\u0472\u0093\3\2\2\2\u0473\u0474\7*\2\2\u0474\u0475\7+\2\2\u0475",
    "\u047a\5\u00c4c\2\u0476\u0477\7\17\2\2\u0477\u0479\5\u00c4c\2\u0478",
    "\u0476\3\2\2\2\u0479\u047c\3\2\2\2\u047a\u0478\3\2\2\2\u047a\u047b\3",
    "\2\2\2\u047b\u0095\3\2\2\2\u047c\u047a\3\2\2\2\u047d\u047e\7\60\2\2",
    "\u047e\u047f\5\u00b8]\2\u047f\u0097\3\2\2\2\u0480\u0481\7,\2\2\u0481",
    "\u0482\7+\2\2\u0482\u0487\5\u009aN\2\u0483\u0484\7\17\2\2\u0484\u0486",
    "\5\u009aN\2\u0485\u0483\3\2\2\2\u0486\u0489\3\2\2\2\u0487\u0485\3\2",
    "\2\2\u0487\u0488\3\2\2\2\u0488\u0099\3\2\2\2\u0489\u0487\3\2\2\2\u048a",
    "\u048c\5\u00c4c\2\u048b\u048d\5\u009cO\2\u048c\u048b\3\2\2\2\u048c\u048d",
    "\3\2\2\2\u048d\u009b\3\2\2\2\u048e\u048f\t\3\2\2\u048f\u009d\3\2\2\2",
    "\u0490\u0491\7-\2\2\u0491\u0492\5\u00b8]\2\u0492\u009f\3\2\2\2\u0493",
    "\u0495\7\61\2\2\u0494\u0496\5\u00a6T\2\u0495\u0494\3\2\2\2\u0495\u0496",
    "\3\2\2\2\u0496\u0497\3\2\2\2\u0497\u0498\7\67\2\2\u0498\u04c2\5\u00de",
    "p\2\u0499\u049a\7\62\2\2\u049a\u049d\5\u00dep\2\u049b\u049c\7<\2\2\u049c",
    "\u049e\5\u00a6T\2\u049d\u049b\3\2\2\2\u049d\u049e\3\2\2\2\u049e\u049f",
    "\3\2\2\2\u049f\u04a0\7D\2\2\u04a0\u04a1\5\u00b8]\2\u04a1\u04c2\3\2\2",
    "\2\u04a2\u04a3\7\63\2\2\u04a3\u04a4\7A\2\2\u04a4\u04a5\7\61\2\2\u04a5",
    "\u04a6\7\67\2\2\u04a6\u04a9\5\u00dep\2\u04a7\u04a8\7<\2\2\u04a8\u04aa",
    "\5\u00a6T\2\u04a9\u04a7\3\2\2\2\u04a9\u04aa\3\2\2\2\u04aa\u04ac\3\2",
    "\2\2\u04ab\u04ad\5\u00a2R\2\u04ac\u04ab\3\2\2\2\u04ac\u04ad\3\2\2\2",
    "\u04ad\u04ae\3\2\2\2\u04ae\u04af\7D\2\2\u04af\u04b0\5\u00b8]\2\u04b0",
    "\u04c2\3\2\2\2\u04b1\u04b2\7\63\2\2\u04b2\u04b5\5\u00dep\2\u04b3\u04b4",
    "\7<\2\2\u04b4\u04b6\5\u00a6T\2\u04b5\u04b3\3\2\2\2\u04b5\u04b6\3\2\2",
    "\2\u04b6\u04b8\3\2\2\2\u04b7\u04b9\5\u00a2R\2\u04b8\u04b7\3\2\2\2\u04b8",
    "\u04b9\3\2\2\2\u04b9\u04ba\3\2\2\2\u04ba\u04bb\7D\2\2\u04bb\u04bc\5",
    "\u00b8]\2\u04bc\u04c2\3\2\2\2\u04bd\u04bf\7\65\2\2\u04be\u04c0\5\u00a6",
    "T\2\u04bf\u04be\3\2\2\2\u04bf\u04c0\3\2\2\2\u04c0\u04c2\3\2\2\2\u04c1",
    "\u0493\3\2\2\2\u04c1\u0499\3\2\2\2\u04c1\u04a2\3\2\2\2\u04c1\u04b1\3",
    "\2\2\2\u04c1\u04bd\3\2\2\2\u04c2\u00a1\3\2\2\2\u04c3\u04c4\7\64\2\2",
    "\u04c4\u04c9\5\u00a4S\2\u04c5\u04c6\7\17\2\2\u04c6\u04c8\5\u00a4S\2",
    "\u04c7\u04c5\3\2\2\2\u04c8\u04cb\3\2\2\2\u04c9\u04c7\3\2\2\2\u04c9\u04ca",
    "\3\2\2\2\u04ca\u00a3\3\2\2\2\u04cb\u04c9\3\2\2\2\u04cc\u04cd\5\u00c4",
    "c\2\u04cd\u04ce\7\20\2\2\u04ce\u04cf\5\u00b8]\2\u04cf\u00a5\3\2\2\2",
    "\u04d0\u04d1\7N\2\2\u04d1\u04d9\7\66\2\2\u04d2\u04d3\79\2\2\u04d3\u04d9",
    "\7\66\2\2\u04d4\u04d6\7:\2\2\u04d5\u04d4\3\2\2\2\u04d5\u04d6\3\2\2\2",
    "\u04d6\u04d7\3\2\2\2\u04d7\u04d9\7\66\2\2\u04d8\u04d0\3\2\2\2\u04d8",
    "\u04d2\3\2\2\2\u04d8\u04d5\3\2\2\2\u04d9\u00a7\3\2\2\2\u04da\u04dc\7",
    "8\2\2\u04db\u04dd\5\u00aaV\2\u04dc\u04db\3\2\2\2\u04dc\u04dd\3\2\2\2",
    "\u04dd\u04de\3\2\2\2\u04de\u04e2\7L\2\2\u04df\u04e3\5\u00f0y\2\u04e0",
    "\u04e1\7\3\2\2\u04e1\u04e3\7\66\2\2\u04e2\u04df\3\2\2\2\u04e2\u04e0",
    "\3\2\2\2\u04e3\u04e9\3\2\2\2\u04e4\u04e5\78\2\2\u04e5\u04e6\7;\2\2\u04e6",
    "\u04e7\7L\2\2\u04e7\u04e9\5\u00f0y\2\u04e8\u04da\3\2\2\2\u04e8\u04e4",
    "\3\2\2\2\u04e9\u00a9\3\2\2\2\u04ea\u04eb\t\4\2\2\u04eb\u00ab\3\2\2\2",
    "\u04ec\u04ed\7<\2\2\u04ed\u04ee\5\u00f0y\2\u04ee\u00ad\3\2\2\2\u04ef",
    "\u04f0\7G\2\2\u04f0\u04f1\5\u00f0y\2\u04f1\u00af\3\2\2\2\u04f2\u04f3",
    "\7G\2\2\u04f3\u04f6\5\u00b8]\2\u04f4\u04f5\7\17\2\2\u04f5\u04f7\5\u00b8",
    "]\2\u04f6\u04f4\3\2\2\2\u04f6\u04f7\3\2\2\2\u04f7\u00b1\3\2\2\2\u04f8",
    "\u04f9\7j\2\2\u04f9\u04fa\5\u00b8]\2\u04fa\u00b3\3\2\2\2\u04fb\u04fc",
    "\5\u00b6\\\2\u04fc\u04fd\7?\2\2\u04fd\u04fe\5\u00d4k\2\u04fe\u0501\3",
    "\2\2\2\u04ff\u0501\5\u00c4c\2\u0500\u04fb\3\2\2\2\u0500\u04ff\3\2\2",
    "\2\u0501\u00b5\3\2\2\2\u0502\u0503\5\u00ba^\2\u0503\u00b7\3\2\2\2\u0504",
    "\u0505\5\u00ba^\2\u0505\u00b9\3\2\2\2\u0506\u0507\b^\1\2\u0507\u0508",
    "\7F\2\2\u0508\u0512\5\u00ba^\r\u0509\u050a\7\13\2\2\u050a\u050b\5\u00ba",
    "^\2\u050b\u050c\7\f\2\2\u050c\u0512\3\2\2\2\u050d\u0512\5\u00c0a\2\u050e",
    "\u0512\5\u00bc_\2\u050f\u0512\5\u00eav\2\u0510\u0512\5\u00c4c\2\u0511",
    "\u0506\3\2\2\2\u0511\u0509\3\2\2\2\u0511\u050d\3\2\2\2\u0511\u050e\3",
    "\2\2\2\u0511\u050f\3\2\2\2\u0511\u0510\3\2\2\2\u0512\u0539\3\2\2\2\u0513",
    "\u0517\f\f\2\2\u0514\u0518\7\21\2\2\u0515\u0518\7\25\2\2\u0516\u0518",
    "\7\26\2\2\u0517\u0514\3\2\2\2\u0517\u0515\3\2\2\2\u0517\u0516\3\2\2",
    "\2\u0518\u0519\3\2\2\2\u0519\u0538\5\u00ba^\r\u051a\u051d\f\13\2\2\u051b",
    "\u051e\7\22\2\2\u051c\u051e\7\24\2\2\u051d\u051b\3\2\2\2\u051d\u051c",
    "\3\2\2\2\u051e\u051f\3\2\2\2\u051f\u0538\5\u00ba^\f\u0520\u0525\f\n",
    "\2\2\u0521\u0526\7\32\2\2\u0522\u0526\7\30\2\2\u0523\u0526\7\31\2\2",
    "\u0524\u0526\7\27\2\2\u0525\u0521\3\2\2\2\u0525\u0522\3\2\2\2\u0525",
    "\u0523\3\2\2\2\u0525\u0524\3\2\2\2\u0526\u0527\3\2\2\2\u0527\u0538\5",
    "\u00ba^\13\u0528\u052b\f\t\2\2\u0529\u052c\7\33\2\2\u052a\u052c\7\34",
    "\2\2\u052b\u0529\3\2\2\2\u052b\u052a\3\2\2\2\u052c\u052d\3\2\2\2\u052d",
    "\u0538\5\u00ba^\n\u052e\u052f\f\7\2\2\u052f\u0530\7B\2\2\u0530\u0538",
    "\5\u00ba^\b\u0531\u0532\f\6\2\2\u0532\u0533\7A\2\2\u0533\u0538\5\u00ba",
    "^\7\u0534\u0535\f\b\2\2\u0535\u0536\7C\2\2\u0536\u0538\5\u00e2r\2\u0537",
    "\u0513\3\2\2\2\u0537\u051a\3\2\2\2\u0537\u0520\3\2\2\2\u0537\u0528\3",
    "\2\2\2\u0537\u052e\3\2\2\2\u0537\u0531\3\2\2\2\u0537\u0534\3\2\2\2\u0538",
    "\u053b\3\2\2\2\u0539\u0537\3\2\2\2\u0539\u053a\3\2\2\2\u053a\u00bb\3",
    "\2\2\2\u053b\u0539\3\2\2\2\u053c\u053d\5\u00caf\2\u053d\u053e\7\7\2",
    "\2\u053e\u0540\3\2\2\2\u053f\u053c\3\2\2\2\u053f\u0540\3\2\2\2\u0540",
    "\u0541\3\2\2\2\u0541\u0542\5\u00c8e\2\u0542\u0544\7\13\2\2\u0543\u0545",
    "\5\u00be`\2\u0544\u0543\3\2\2\2\u0544\u0545\3\2\2\2\u0545\u0546\3\2",
    "\2\2\u0546\u0547\7\f\2\2\u0547\u00bd\3\2\2\2\u0548\u054d\5\u00b6\\\2",
    "\u0549\u054a\7\17\2\2\u054a\u054c\5\u00b6\\\2\u054b\u0549\3\2\2\2\u054c",
    "\u054f\3\2\2\2\u054d\u054b\3\2\2\2\u054d\u054e\3\2\2\2\u054e\u0552\3",
    "\2\2\2\u054f\u054d\3\2\2\2\u0550\u0552\7\21\2\2\u0551\u0548\3\2\2\2",
    "\u0551\u0550\3\2\2\2\u0552\u00bf\3\2\2\2\u0553\u0557\5\u00c2b\2\u0554",
    "\u0557\5\u00c4c\2\u0555\u0557\5\u00bc_\2\u0556\u0553\3\2\2\2\u0556\u0554",
    "\3\2\2\2\u0556\u0555\3\2\2\2\u0557\u0558\3\2\2\2\u0558\u0559\7E\2\2",
    "\u0559\u055a\7K\2\2\u055a\u00c1\3\2\2\2\u055b\u055d\7\37\2\2\u055c\u055b",
    "\3\2\2\2\u055c\u055d\3\2\2\2\u055d\u055e\3\2\2\2\u055e\u0563\5\u00e2",
    "r\2\u055f\u0560\7\r\2\2\u0560\u0561\5\u00c6d\2\u0561\u0562\7\16\2\2",
    "\u0562\u0564\3\2\2\2\u0563\u055f\3\2\2\2\u0563\u0564\3\2\2\2\u0564\u00c3",
    "\3\2\2\2\u0565\u0567\7\37\2\2\u0566\u0565\3\2\2\2\u0566\u0567\3\2\2",
    "\2\u0567\u0568\3\2\2\2\u0568\u056d\5\u00e2r\2\u0569\u056a\7\r\2\2\u056a",
    "\u056b\5\u00c6d\2\u056b\u056c\7\16\2\2\u056c\u056e\3\2\2\2\u056d\u0569",
    "\3\2\2\2\u056d\u056e\3\2\2\2\u056e\u0577\3\2\2\2\u056f\u0570\7\37\2",
    "\2\u0570\u0575\5\u00e2r\2\u0571\u0572\7\r\2\2\u0572\u0573\5\u00c6d\2",
    "\u0573\u0574\7\16\2\2\u0574\u0576\3\2\2\2\u0575\u0571\3\2\2\2\u0575",
    "\u0576\3\2\2\2\u0576\u0578\3\2\2\2\u0577\u056f\3\2\2\2\u0577\u0578\3",
    "\2\2\2\u0578\u0579\3\2\2\2\u0579\u057a\7\t\2\2\u057a\u057b\5\u00d4k",
    "\2\u057b\u057e\3\2\2\2\u057c\u057e\5\u00d4k\2\u057d\u0566\3\2\2\2\u057d",
    "\u057c\3\2\2\2\u057e\u00c5\3\2\2\2\u057f\u0586\7\3\2\2\u0580\u0583\7",
    "M\2\2\u0581\u0582\7\24\2\2\u0582\u0584\7\3\2\2\u0583\u0581\3\2\2\2\u0583",
    "\u0584\3\2\2\2\u0584\u0586\3\2\2\2\u0585\u057f\3\2\2\2\u0585\u0580\3",
    "\2\2\2\u0586\u00c7\3\2\2\2\u0587\u0588\5\u00e2r\2\u0588\u00c9\3\2\2",
    "\2\u0589\u058a\5\u00e2r\2\u058a\u00cb\3\2\2\2\u058b\u058c\5\u00e2r\2",
    "\u058c\u00cd\3\2\2\2\u058d\u058e\5\u00e2r\2\u058e\u00cf\3\2\2\2\u058f",
    "\u0590\5\u00e2r\2\u0590\u00d1\3\2\2\2\u0591\u0597\5\u00e2r\2\u0592\u0593",
    "\5\u00dan\2\u0593\u0594\5\u00e2r\2\u0594\u0596\3\2\2\2\u0595\u0592\3",
    "\2\2\2\u0596\u0599\3\2\2\2\u0597\u0595\3\2\2\2\u0597\u0598\3\2\2\2\u0598",
    "\u00d3\3\2\2\2\u0599\u0597\3\2\2\2\u059a\u059b\5\u00e2r\2\u059b\u00d5",
    "\3\2\2\2\u059c\u059d\5\u00e2r\2\u059d\u00d7\3\2\2\2\u059e\u059f\5\u010c",
    "\u0087\2\u059f\u00d9\3\2\2\2\u05a0\u05a1\t\5\2\2\u05a1\u00db\3\2\2\2",
    "\u05a2\u05a4\7\37\2\2\u05a3\u05a2\3\2\2\2\u05a3\u05a4\3\2\2\2\u05a4",
    "\u05a5\3\2\2\2\u05a5\u05a6\5\u00ccg\2\u05a6\u00dd\3\2\2\2\u05a7\u05a8",
    "\5\u00dco\2\u05a8\u00df\3\2\2\2\u05a9\u05aa\5\u00e2r\2\u05aa\u00e1\3",
    "\2\2\2\u05ab\u05ae\5\u00ecw\2\u05ac\u05ae\5\u00eex\2\u05ad\u05ab\3\2",
    "\2\2\u05ad\u05ac\3\2\2\2\u05ae\u00e3\3\2\2\2\u05af\u05b0\7\3\2\2\u05b0",
    "\u05b1\7\7\2\2\u05b1\u05b8\7\3\2\2\u05b2\u05b3\7\3\2\2\u05b3\u05b8\7",
    "\7\2\2\u05b4\u05b5\7\7\2\2\u05b5\u05b8\7\3\2\2\u05b6\u05b8\7\3\2\2\u05b7",
    "\u05af\3\2\2\2\u05b7\u05b2\3\2\2\2\u05b7\u05b4\3\2\2\2\u05b7\u05b6\3",
    "\2\2\2\u05b8\u00e5\3\2\2\2\u05b9\u05ba\t\6\2\2\u05ba\u00e7\3\2\2\2\u05bb",
    "\u05bc\7T\2\2\u05bc\u05bd\7R\2\2\u05bd\u05cb\7P\2\2\u05be\u05bf\7S\2",
    "\2\u05bf\u05c0\7R\2\2\u05c0\u05cb\7P\2\2\u05c1\u05c2\7U\2\2\u05c2\u05c3",
    "\7R\2\2\u05c3\u05cb\7P\2\2\u05c4\u05c5\7R\2\2\u05c5\u05cb\7P\2\2\u05c6",
    "\u05c8\7Q\2\2\u05c7\u05c6\3\2\2\2\u05c7\u05c8\3\2\2\2\u05c8\u05c9\3",
    "\2\2\2\u05c9\u05cb\7P\2\2\u05ca\u05bb\3\2\2\2\u05ca\u05be\3\2\2\2\u05ca",
    "\u05c1\3\2\2\2\u05ca\u05c4\3\2\2\2\u05ca\u05c7\3\2\2\2\u05cb\u00e9\3",
    "\2\2\2\u05cc\u05d4\5\u010a\u0086\2\u05cd\u05d4\5\u0102\u0082\2\u05ce",
    "\u05d4\5\u0106\u0084\2\u05cf\u05d4\5\u0104\u0083\2\u05d0\u05d4\5\u0108",
    "\u0085\2\u05d1\u05d4\5\u00f0y\2\u05d2\u05d4\5\u010c\u0087\2\u05d3\u05cc",
    "\3\2\2\2\u05d3\u05cd\3\2\2\2\u05d3\u05ce\3\2\2\2\u05d3\u05cf\3\2\2\2",
    "\u05d3\u05d0\3\2\2\2\u05d3\u05d1\3\2\2\2\u05d3\u05d2\3\2\2\2\u05d4\u00eb",
    "\3\2\2\2\u05d5\u05d6\t\7\2\2\u05d6\u00ed\3\2\2\2\u05d7\u05d8\t\b\2\2",
    "\u05d8\u00ef\3\2\2\2\u05d9\u05db\5\u00f2z\2\u05da\u05dc\5\u00f4{\2\u05db",
    "\u05da\3\2\2\2\u05db\u05dc\3\2\2\2\u05dc\u05de\3\2\2\2\u05dd\u05df\5",
    "\u00f6|\2\u05de\u05dd\3\2\2\2\u05de\u05df\3\2\2\2\u05df\u05e1\3\2\2",
    "\2\u05e0\u05e2\5\u00f8}\2\u05e1\u05e0\3\2\2\2\u05e1\u05e2\3\2\2\2\u05e2",
    "\u05e4\3\2\2\2\u05e3\u05e5\5\u00fa~\2\u05e4\u05e3\3\2\2\2\u05e4\u05e5",
    "\3\2\2\2\u05e5\u05e7\3\2\2\2\u05e6\u05e8\5\u00fc\177\2\u05e7\u05e6\3",
    "\2\2\2\u05e7\u05e8\3\2\2\2\u05e8\u05ea\3\2\2\2\u05e9\u05eb\5\u00fe\u0080",
    "\2\u05ea\u05e9\3\2\2\2\u05ea\u05eb\3\2\2\2\u05eb\u05ed\3\2\2\2\u05ec",
    "\u05ee\5\u0100\u0081\2\u05ed\u05ec\3\2\2\2\u05ed\u05ee\3\2\2\2\u05ee",
    "\u0636\3\2\2\2\u05ef\u05f1\5\u00f4{\2\u05f0\u05f2\5\u00f6|\2\u05f1\u05f0",
    "\3\2\2\2\u05f1\u05f2\3\2\2\2\u05f2\u05f4\3\2\2\2\u05f3\u05f5\5\u00f8",
    "}\2\u05f4\u05f3\3\2\2\2\u05f4\u05f5\3\2\2\2\u05f5\u05f7\3\2\2\2\u05f6",
    "\u05f8\5\u00fa~\2\u05f7\u05f6\3\2\2\2\u05f7\u05f8\3\2\2\2\u05f8\u05fa",
    "\3\2\2\2\u05f9\u05fb\5\u00fc\177\2\u05fa\u05f9\3\2\2\2\u05fa\u05fb\3",
    "\2\2\2\u05fb\u05fd\3\2\2\2\u05fc\u05fe\5\u00fe\u0080\2\u05fd\u05fc\3",
    "\2\2\2\u05fd\u05fe\3\2\2\2\u05fe\u0600\3\2\2\2\u05ff\u0601\5\u0100\u0081",
    "\2\u0600\u05ff\3\2\2\2\u0600\u0601\3\2\2\2\u0601\u0636\3\2\2\2\u0602",
    "\u0604\5\u00f6|\2\u0603\u0605\5\u00f8}\2\u0604\u0603\3\2\2\2\u0604\u0605",
    "\3\2\2\2\u0605\u0607\3\2\2\2\u0606\u0608\5\u00fa~\2\u0607\u0606\3\2",
    "\2\2\u0607\u0608\3\2\2\2\u0608\u060a\3\2\2\2\u0609\u060b\5\u00fc\177",
    "\2\u060a\u0609\3\2\2\2\u060a\u060b\3\2\2\2\u060b\u060d\3\2\2\2\u060c",
    "\u060e\5\u00fe\u0080\2\u060d\u060c\3\2\2\2\u060d\u060e\3\2\2\2\u060e",
    "\u0610\3\2\2\2\u060f\u0611\5\u0100\u0081\2\u0610\u060f\3\2\2\2\u0610",
    "\u0611\3\2\2\2\u0611\u0636\3\2\2\2\u0612\u0614\5\u00f8}\2\u0613\u0615",
    "\5\u00fa~\2\u0614\u0613\3\2\2\2\u0614\u0615\3\2\2\2\u0615\u0617\3\2",
    "\2\2\u0616\u0618\5\u00fc\177\2\u0617\u0616\3\2\2\2\u0617\u0618\3\2\2",
    "\2\u0618\u061a\3\2\2\2\u0619\u061b\5\u00fe\u0080\2\u061a\u0619\3\2\2",
    "\2\u061a\u061b\3\2\2\2\u061b\u061d\3\2\2\2\u061c\u061e\5\u0100\u0081",
    "\2\u061d\u061c\3\2\2\2\u061d\u061e\3\2\2\2\u061e\u0636\3\2\2\2\u061f",
    "\u0621\5\u00fa~\2\u0620\u0622\5\u00fc\177\2\u0621\u0620\3\2\2\2\u0621",
    "\u0622\3\2\2\2\u0622\u0624\3\2\2\2\u0623\u0625\5\u00fe\u0080\2\u0624",
    "\u0623\3\2\2\2\u0624\u0625\3\2\2\2\u0625\u0627\3\2\2\2\u0626\u0628\5",
    "\u0100\u0081\2\u0627\u0626\3\2\2\2\u0627\u0628\3\2\2\2\u0628\u0636\3",
    "\2\2\2\u0629\u062b\5\u00fc\177\2\u062a\u062c\5\u00fe\u0080\2\u062b\u062a",
    "\3\2\2\2\u062b\u062c\3\2\2\2\u062c\u062e\3\2\2\2\u062d\u062f\5\u0100",
    "\u0081\2\u062e\u062d\3\2\2\2\u062e\u062f\3\2\2\2\u062f\u0636\3\2\2\2",
    "\u0630\u0632\5\u00fe\u0080\2\u0631\u0633\5\u0100\u0081\2\u0632\u0631",
    "\3\2\2\2\u0632\u0633\3\2\2\2\u0633\u0636\3\2\2\2\u0634\u0636\5\u0100",
    "\u0081\2\u0635\u05d9\3\2\2\2\u0635\u05ef\3\2\2\2\u0635\u0602\3\2\2\2",
    "\u0635\u0612\3\2\2\2\u0635\u061f\3\2\2\2\u0635\u0629\3\2\2\2\u0635\u0630",
    "\3\2\2\2\u0635\u0634\3\2\2\2\u0636\u00f1\3\2\2\2\u0637\u0638\7\3\2\2",
    "\u0638\u0639\7W\2\2\u0639\u00f3\3\2\2\2\u063a\u063b\7\3\2\2\u063b\u063c",
    "\7X\2\2\u063c\u00f5\3\2\2\2\u063d\u063e\7\3\2\2\u063e\u063f\7Y\2\2\u063f",
    "\u00f7\3\2\2\2\u0640\u0641\7\3\2\2\u0641\u0642\7Z\2\2\u0642\u00f9\3",
    "\2\2\2\u0643\u0644\7\3\2\2\u0644\u0645\7[\2\2\u0645\u00fb\3\2\2\2\u0646",
    "\u0647\7\3\2\2\u0647\u0648\7\\\2\2\u0648\u00fd\3\2\2\2\u0649\u064a\7",
    "\3\2\2\u064a\u064b\7]\2\2\u064b\u00ff\3\2\2\2\u064c\u064d\7\3\2\2\u064d",
    "\u064e\7^\2\2\u064e\u0101\3\2\2\2\u064f\u0651\t\t\2\2\u0650\u064f\3",
    "\2\2\2\u0650\u0651\3\2\2\2\u0651\u0652\3\2\2\2\u0652\u0653\7\6\2\2\u0653",
    "\u0103\3\2\2\2\u0654\u0656\t\t\2\2\u0655\u0654\3\2\2\2\u0655\u0656\3",
    "\2\2\2\u0656\u0657\3\2\2\2\u0657\u0658\7\4\2\2\u0658\u0105\3\2\2\2\u0659",
    "\u065b\t\t\2\2\u065a\u0659\3\2\2\2\u065a\u065b\3\2\2\2\u065b\u065c\3",
    "\2\2\2\u065c\u065d\7\5\2\2\u065d\u0107\3\2\2\2\u065e\u0660\t\t\2\2\u065f",
    "\u065e\3\2\2\2\u065f\u0660\3\2\2\2\u0660\u0661\3\2\2\2\u0661\u0662\7",
    "\3\2\2\u0662\u0109\3\2\2\2\u0663\u0664\t\n\2\2\u0664\u010b\3\2\2\2\u0665",
    "\u0666\7m\2\2\u0666\u010d\3\2\2\2\u00d6\u0115\u0117\u0121\u012b\u012f",
    "\u0135\u0139\u013d\u0141\u0145\u014c\u015b\u0162\u0169\u0178\u017f\u0186",
    "\u0195\u019c\u01a0\u01a7\u01ac\u01b0\u01b5\u01b9\u01cf\u01da\u01e0\u01e7",
    "\u01f3\u01fc\u0209\u0211\u0216\u021a\u021f\u022b\u0230\u0235\u023c\u0247",
    "\u024e\u0253\u0257\u025b\u0261\u026d\u0274\u027d\u0284\u028a\u028d\u0296",
    "\u029a\u029d\u02a0\u02a6\u02ac\u02b0\u02b5\u02b9\u02bc\u02c0\u02c4\u02cb",
    "\u02d2\u02d8\u02da\u02e1\u02e9\u02ed\u02ef\u02f6\u02fa\u0300\u0305\u030d",
    "\u0313\u0319\u0321\u0323\u032c\u0332\u0338\u0340\u0342\u0349\u0353\u037b",
    "\u037e\u038e\u0394\u0399\u039d\u03a1\u03a4\u03a8\u03ae\u03b2\u03b8\u03bc",
    "\u03c1\u03c7\u03cc\u03d7\u03dd\u03e5\u03e7\u03f3\u03f9\u0401\u0403\u040b",
    "\u040f\u0411\u0418\u041f\u0429\u0432\u0435\u0439\u043b\u043e\u0453\u0456",
    "\u0459\u0462\u0465\u0468\u046b\u046e\u0471\u047a\u0487\u048c\u0495\u049d",
    "\u04a9\u04ac\u04b5\u04b8\u04bf\u04c1\u04c9\u04d5\u04d8\u04dc\u04e2\u04e8",
    "\u04f6\u0500\u0511\u0517\u051d\u0525\u052b\u0537\u0539\u053f\u0544\u054d",
    "\u0551\u0556\u055c\u0563\u0566\u056d\u0575\u0577\u057d\u0583\u0585\u0597",
    "\u05a3\u05ad\u05b7\u05c7\u05ca\u05d3\u05db\u05de\u05e1\u05e4\u05e7\u05ea",
    "\u05ed\u05f1\u05f4\u05f7\u05fa\u05fd\u0600\u0604\u0607\u060a\u060d\u0610",
    "\u0614\u0617\u061a\u061d\u0621\u0624\u0627\u062b\u062e\u0632\u0635\u0650",
    "\u0655\u065a\u065f"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ 'null', 'null', 'null', 'null', 'null', "':'", "';'", 
                     "'.'", "'...'", "'('", "')'", "'['", "']'", "','", 
                     "'='", "'*'", "'+'", "'?'", "'-'", "'/'", "'%'", "'<'", 
                     "'<='", "'>'", "'>='", "'=='", "'!='", "'@'", "'->'", 
                     "'#'" ];

var symbolicNames = [ 'null', "INT_LITERAL", "LONG_LITERAL", "FLOAT_LITERAL", 
                      "DOUBLE_LITERAL", "COL", "SCOL", "DOT", "TRIPLE_DOT", 
                      "OPEN_PAR", "CLOSE_PAR", "OPEN_SQUARE_BRACKETS", "CLOSE_SQUARE_BRACKETS", 
                      "COMMA", "ASSIGN", "STAR", "PLUS", "QUESTION", "MINUS", 
                      "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", 
                      "NOT_EQ", "AT_SYMBOL", "FOLLOWED_BY", "HASH", "STREAM", 
                      "DEFINE", "FUNCTION", "TRIGGER", "TABLE", "APP", "FROM", 
                      "PARTITION", "WINDOW", "SELECT", "GROUP", "BY", "ORDER", 
                      "LIMIT", "ASC", "DESC", "HAVING", "INSERT", "DELETE", 
                      "UPDATE", "SET", "RETURN", "EVENTS", "INTO", "OUTPUT", 
                      "EXPIRED", "CURRENT", "SNAPSHOT", "FOR", "RAW", "OF", 
                      "AS", "AT", "OR", "AND", "IN", "ON", "IS", "NOT", 
                      "WITHIN", "WITH", "BEGIN", "END", "NULL", "EVERY", 
                      "LAST", "ALL", "FIRST", "JOIN", "INNER", "OUTER", 
                      "RIGHT", "LEFT", "FULL", "UNIDIRECTIONAL", "YEARS", 
                      "MONTHS", "WEEKS", "DAYS", "HOURS", "MINUTES", "SECONDS", 
                      "MILLISECONDS", "FALSE", "TRUE", "STRING", "INT", 
                      "LONG", "FLOAT", "DOUBLE", "BOOL", "OBJECT", "AGGREGATION", 
                      "AGGREGATE", "PER", "ID_QUOTES", "ID", "STRING_LITERAL", 
                      "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES", 
                      "UNEXPECTED_CHAR", "SCRIPT" ];

var ruleNames =  [ "parse", "error", "siddhi_app", "execution_element", 
                   "definition_stream_final", "definition_stream", "definition_table_final", 
                   "definition_table", "definition_window_final", "definition_window", 
                   "store_query_final", "store_query", "store_input", "definition_function_final", 
                   "definition_function", "function_name", "language_name", 
                   "function_body", "definition_trigger_final", "definition_trigger", 
                   "trigger_name", "definition_aggregation_final", "definition_aggregation", 
                   "aggregation_name", "aggregation_time", "aggregation_time_duration", 
                   "aggregation_time_range", "aggregation_time_interval", 
                   "annotation", "app_annotation", "annotation_element", 
                   "partition", "partition_final", "partition_with_stream", 
                   "condition_ranges", "condition_range", "query_final", 
                   "query", "query_input", "standard_stream", "join_stream", 
                   "join_source", "pattern_stream", "every_pattern_source_chain", 
                   "pattern_source_chain", "absent_pattern_source_chain", 
                   "left_absent_pattern_source", "right_absent_pattern_source", 
                   "pattern_source", "logical_stateful_source", "logical_absent_stateful_source", 
                   "every_absent_pattern_source", "basic_absent_pattern_source", 
                   "pattern_collection_stateful_source", "standard_stateful_source", 
                   "basic_source", "basic_source_stream_handlers", "basic_source_stream_handler", 
                   "sequence_stream", "every_sequence_source_chain", "every_absent_sequence_source_chain", 
                   "absent_sequence_source_chain", "left_absent_sequence_source", 
                   "right_absent_sequence_source", "sequence_source_chain", 
                   "sequence_source", "sequence_collection_stateful_source", 
                   "anonymous_stream", "filter", "stream_function", "window", 
                   "group_by_query_selection", "query_section", "group_by", 
                   "having", "order_by", "order_by_reference", "order", 
                   "limit", "query_output", "set_clause", "set_assignment", 
                   "output_event_type", "output_rate", "output_rate_type", 
                   "for_time", "within_time", "within_time_range", "per", 
                   "output_attribute", "attribute", "expression", "math_operation", 
                   "function_operation", "attribute_list", "null_check", 
                   "stream_reference", "attribute_reference", "attribute_index", 
                   "function_id", "function_namespace", "stream_id", "source_id", 
                   "alias", "property_name", "attribute_name", "type", "property_value", 
                   "property_separator", "source", "target", "event", "name", 
                   "collect", "attribute_type", "join", "constant_value", 
                   "id", "keyword", "time_value", "year_value", "month_value", 
                   "week_value", "day_value", "hour_value", "minute_value", 
                   "second_value", "millisecond_value", "signed_double_value", 
                   "signed_long_value", "signed_float_value", "signed_int_value", 
                   "bool_value", "string_value" ];

function SiddhiQLParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

SiddhiQLParser.prototype = Object.create(antlr4.Parser.prototype);
SiddhiQLParser.prototype.constructor = SiddhiQLParser;

Object.defineProperty(SiddhiQLParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

SiddhiQLParser.EOF = antlr4.Token.EOF;
SiddhiQLParser.INT_LITERAL = 1;
SiddhiQLParser.LONG_LITERAL = 2;
SiddhiQLParser.FLOAT_LITERAL = 3;
SiddhiQLParser.DOUBLE_LITERAL = 4;
SiddhiQLParser.COL = 5;
SiddhiQLParser.SCOL = 6;
SiddhiQLParser.DOT = 7;
SiddhiQLParser.TRIPLE_DOT = 8;
SiddhiQLParser.OPEN_PAR = 9;
SiddhiQLParser.CLOSE_PAR = 10;
SiddhiQLParser.OPEN_SQUARE_BRACKETS = 11;
SiddhiQLParser.CLOSE_SQUARE_BRACKETS = 12;
SiddhiQLParser.COMMA = 13;
SiddhiQLParser.ASSIGN = 14;
SiddhiQLParser.STAR = 15;
SiddhiQLParser.PLUS = 16;
SiddhiQLParser.QUESTION = 17;
SiddhiQLParser.MINUS = 18;
SiddhiQLParser.DIV = 19;
SiddhiQLParser.MOD = 20;
SiddhiQLParser.LT = 21;
SiddhiQLParser.LT_EQ = 22;
SiddhiQLParser.GT = 23;
SiddhiQLParser.GT_EQ = 24;
SiddhiQLParser.EQ = 25;
SiddhiQLParser.NOT_EQ = 26;
SiddhiQLParser.AT_SYMBOL = 27;
SiddhiQLParser.FOLLOWED_BY = 28;
SiddhiQLParser.HASH = 29;
SiddhiQLParser.STREAM = 30;
SiddhiQLParser.DEFINE = 31;
SiddhiQLParser.FUNCTION = 32;
SiddhiQLParser.TRIGGER = 33;
SiddhiQLParser.TABLE = 34;
SiddhiQLParser.APP = 35;
SiddhiQLParser.FROM = 36;
SiddhiQLParser.PARTITION = 37;
SiddhiQLParser.WINDOW = 38;
SiddhiQLParser.SELECT = 39;
SiddhiQLParser.GROUP = 40;
SiddhiQLParser.BY = 41;
SiddhiQLParser.ORDER = 42;
SiddhiQLParser.LIMIT = 43;
SiddhiQLParser.ASC = 44;
SiddhiQLParser.DESC = 45;
SiddhiQLParser.HAVING = 46;
SiddhiQLParser.INSERT = 47;
SiddhiQLParser.DELETE = 48;
SiddhiQLParser.UPDATE = 49;
SiddhiQLParser.SET = 50;
SiddhiQLParser.RETURN = 51;
SiddhiQLParser.EVENTS = 52;
SiddhiQLParser.INTO = 53;
SiddhiQLParser.OUTPUT = 54;
SiddhiQLParser.EXPIRED = 55;
SiddhiQLParser.CURRENT = 56;
SiddhiQLParser.SNAPSHOT = 57;
SiddhiQLParser.FOR = 58;
SiddhiQLParser.RAW = 59;
SiddhiQLParser.OF = 60;
SiddhiQLParser.AS = 61;
SiddhiQLParser.AT = 62;
SiddhiQLParser.OR = 63;
SiddhiQLParser.AND = 64;
SiddhiQLParser.IN = 65;
SiddhiQLParser.ON = 66;
SiddhiQLParser.IS = 67;
SiddhiQLParser.NOT = 68;
SiddhiQLParser.WITHIN = 69;
SiddhiQLParser.WITH = 70;
SiddhiQLParser.BEGIN = 71;
SiddhiQLParser.END = 72;
SiddhiQLParser.NULL = 73;
SiddhiQLParser.EVERY = 74;
SiddhiQLParser.LAST = 75;
SiddhiQLParser.ALL = 76;
SiddhiQLParser.FIRST = 77;
SiddhiQLParser.JOIN = 78;
SiddhiQLParser.INNER = 79;
SiddhiQLParser.OUTER = 80;
SiddhiQLParser.RIGHT = 81;
SiddhiQLParser.LEFT = 82;
SiddhiQLParser.FULL = 83;
SiddhiQLParser.UNIDIRECTIONAL = 84;
SiddhiQLParser.YEARS = 85;
SiddhiQLParser.MONTHS = 86;
SiddhiQLParser.WEEKS = 87;
SiddhiQLParser.DAYS = 88;
SiddhiQLParser.HOURS = 89;
SiddhiQLParser.MINUTES = 90;
SiddhiQLParser.SECONDS = 91;
SiddhiQLParser.MILLISECONDS = 92;
SiddhiQLParser.FALSE = 93;
SiddhiQLParser.TRUE = 94;
SiddhiQLParser.STRING = 95;
SiddhiQLParser.INT = 96;
SiddhiQLParser.LONG = 97;
SiddhiQLParser.FLOAT = 98;
SiddhiQLParser.DOUBLE = 99;
SiddhiQLParser.BOOL = 100;
SiddhiQLParser.OBJECT = 101;
SiddhiQLParser.AGGREGATION = 102;
SiddhiQLParser.AGGREGATE = 103;
SiddhiQLParser.PER = 104;
SiddhiQLParser.ID_QUOTES = 105;
SiddhiQLParser.ID = 106;
SiddhiQLParser.STRING_LITERAL = 107;
SiddhiQLParser.SINGLE_LINE_COMMENT = 108;
SiddhiQLParser.MULTILINE_COMMENT = 109;
SiddhiQLParser.SPACES = 110;
SiddhiQLParser.UNEXPECTED_CHAR = 111;
SiddhiQLParser.SCRIPT = 112;

SiddhiQLParser.RULE_parse = 0;
SiddhiQLParser.RULE_error = 1;
SiddhiQLParser.RULE_siddhi_app = 2;
SiddhiQLParser.RULE_execution_element = 3;
SiddhiQLParser.RULE_definition_stream_final = 4;
SiddhiQLParser.RULE_definition_stream = 5;
SiddhiQLParser.RULE_definition_table_final = 6;
SiddhiQLParser.RULE_definition_table = 7;
SiddhiQLParser.RULE_definition_window_final = 8;
SiddhiQLParser.RULE_definition_window = 9;
SiddhiQLParser.RULE_store_query_final = 10;
SiddhiQLParser.RULE_store_query = 11;
SiddhiQLParser.RULE_store_input = 12;
SiddhiQLParser.RULE_definition_function_final = 13;
SiddhiQLParser.RULE_definition_function = 14;
SiddhiQLParser.RULE_function_name = 15;
SiddhiQLParser.RULE_language_name = 16;
SiddhiQLParser.RULE_function_body = 17;
SiddhiQLParser.RULE_definition_trigger_final = 18;
SiddhiQLParser.RULE_definition_trigger = 19;
SiddhiQLParser.RULE_trigger_name = 20;
SiddhiQLParser.RULE_definition_aggregation_final = 21;
SiddhiQLParser.RULE_definition_aggregation = 22;
SiddhiQLParser.RULE_aggregation_name = 23;
SiddhiQLParser.RULE_aggregation_time = 24;
SiddhiQLParser.RULE_aggregation_time_duration = 25;
SiddhiQLParser.RULE_aggregation_time_range = 26;
SiddhiQLParser.RULE_aggregation_time_interval = 27;
SiddhiQLParser.RULE_annotation = 28;
SiddhiQLParser.RULE_app_annotation = 29;
SiddhiQLParser.RULE_annotation_element = 30;
SiddhiQLParser.RULE_partition = 31;
SiddhiQLParser.RULE_partition_final = 32;
SiddhiQLParser.RULE_partition_with_stream = 33;
SiddhiQLParser.RULE_condition_ranges = 34;
SiddhiQLParser.RULE_condition_range = 35;
SiddhiQLParser.RULE_query_final = 36;
SiddhiQLParser.RULE_query = 37;
SiddhiQLParser.RULE_query_input = 38;
SiddhiQLParser.RULE_standard_stream = 39;
SiddhiQLParser.RULE_join_stream = 40;
SiddhiQLParser.RULE_join_source = 41;
SiddhiQLParser.RULE_pattern_stream = 42;
SiddhiQLParser.RULE_every_pattern_source_chain = 43;
SiddhiQLParser.RULE_pattern_source_chain = 44;
SiddhiQLParser.RULE_absent_pattern_source_chain = 45;
SiddhiQLParser.RULE_left_absent_pattern_source = 46;
SiddhiQLParser.RULE_right_absent_pattern_source = 47;
SiddhiQLParser.RULE_pattern_source = 48;
SiddhiQLParser.RULE_logical_stateful_source = 49;
SiddhiQLParser.RULE_logical_absent_stateful_source = 50;
SiddhiQLParser.RULE_every_absent_pattern_source = 51;
SiddhiQLParser.RULE_basic_absent_pattern_source = 52;
SiddhiQLParser.RULE_pattern_collection_stateful_source = 53;
SiddhiQLParser.RULE_standard_stateful_source = 54;
SiddhiQLParser.RULE_basic_source = 55;
SiddhiQLParser.RULE_basic_source_stream_handlers = 56;
SiddhiQLParser.RULE_basic_source_stream_handler = 57;
SiddhiQLParser.RULE_sequence_stream = 58;
SiddhiQLParser.RULE_every_sequence_source_chain = 59;
SiddhiQLParser.RULE_every_absent_sequence_source_chain = 60;
SiddhiQLParser.RULE_absent_sequence_source_chain = 61;
SiddhiQLParser.RULE_left_absent_sequence_source = 62;
SiddhiQLParser.RULE_right_absent_sequence_source = 63;
SiddhiQLParser.RULE_sequence_source_chain = 64;
SiddhiQLParser.RULE_sequence_source = 65;
SiddhiQLParser.RULE_sequence_collection_stateful_source = 66;
SiddhiQLParser.RULE_anonymous_stream = 67;
SiddhiQLParser.RULE_filter = 68;
SiddhiQLParser.RULE_stream_function = 69;
SiddhiQLParser.RULE_window = 70;
SiddhiQLParser.RULE_group_by_query_selection = 71;
SiddhiQLParser.RULE_query_section = 72;
SiddhiQLParser.RULE_group_by = 73;
SiddhiQLParser.RULE_having = 74;
SiddhiQLParser.RULE_order_by = 75;
SiddhiQLParser.RULE_order_by_reference = 76;
SiddhiQLParser.RULE_order = 77;
SiddhiQLParser.RULE_limit = 78;
SiddhiQLParser.RULE_query_output = 79;
SiddhiQLParser.RULE_set_clause = 80;
SiddhiQLParser.RULE_set_assignment = 81;
SiddhiQLParser.RULE_output_event_type = 82;
SiddhiQLParser.RULE_output_rate = 83;
SiddhiQLParser.RULE_output_rate_type = 84;
SiddhiQLParser.RULE_for_time = 85;
SiddhiQLParser.RULE_within_time = 86;
SiddhiQLParser.RULE_within_time_range = 87;
SiddhiQLParser.RULE_per = 88;
SiddhiQLParser.RULE_output_attribute = 89;
SiddhiQLParser.RULE_attribute = 90;
SiddhiQLParser.RULE_expression = 91;
SiddhiQLParser.RULE_math_operation = 92;
SiddhiQLParser.RULE_function_operation = 93;
SiddhiQLParser.RULE_attribute_list = 94;
SiddhiQLParser.RULE_null_check = 95;
SiddhiQLParser.RULE_stream_reference = 96;
SiddhiQLParser.RULE_attribute_reference = 97;
SiddhiQLParser.RULE_attribute_index = 98;
SiddhiQLParser.RULE_function_id = 99;
SiddhiQLParser.RULE_function_namespace = 100;
SiddhiQLParser.RULE_stream_id = 101;
SiddhiQLParser.RULE_source_id = 102;
SiddhiQLParser.RULE_alias = 103;
SiddhiQLParser.RULE_property_name = 104;
SiddhiQLParser.RULE_attribute_name = 105;
SiddhiQLParser.RULE_type = 106;
SiddhiQLParser.RULE_property_value = 107;
SiddhiQLParser.RULE_property_separator = 108;
SiddhiQLParser.RULE_source = 109;
SiddhiQLParser.RULE_target = 110;
SiddhiQLParser.RULE_event = 111;
SiddhiQLParser.RULE_name = 112;
SiddhiQLParser.RULE_collect = 113;
SiddhiQLParser.RULE_attribute_type = 114;
SiddhiQLParser.RULE_join = 115;
SiddhiQLParser.RULE_constant_value = 116;
SiddhiQLParser.RULE_id = 117;
SiddhiQLParser.RULE_keyword = 118;
SiddhiQLParser.RULE_time_value = 119;
SiddhiQLParser.RULE_year_value = 120;
SiddhiQLParser.RULE_month_value = 121;
SiddhiQLParser.RULE_week_value = 122;
SiddhiQLParser.RULE_day_value = 123;
SiddhiQLParser.RULE_hour_value = 124;
SiddhiQLParser.RULE_minute_value = 125;
SiddhiQLParser.RULE_second_value = 126;
SiddhiQLParser.RULE_millisecond_value = 127;
SiddhiQLParser.RULE_signed_double_value = 128;
SiddhiQLParser.RULE_signed_long_value = 129;
SiddhiQLParser.RULE_signed_float_value = 130;
SiddhiQLParser.RULE_signed_int_value = 131;
SiddhiQLParser.RULE_bool_value = 132;
SiddhiQLParser.RULE_string_value = 133;

function ParseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_parse;
    return this;
}

ParseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParseContext.prototype.constructor = ParseContext;

ParseContext.prototype.siddhi_app = function() {
    return this.getTypedRuleContext(Siddhi_appContext,0);
};

ParseContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

ParseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterParse(this);
	}
};

ParseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitParse(this);
	}
};




SiddhiQLParser.ParseContext = ParseContext;

SiddhiQLParser.prototype.parse = function() {

    var localctx = new ParseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, SiddhiQLParser.RULE_parse);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 268;
        this.siddhi_app();
        this.state = 269;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_error;
    return this;
}

ErrorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorContext.prototype.constructor = ErrorContext;

ErrorContext.prototype.UNEXPECTED_CHAR = function() {
    return this.getToken(SiddhiQLParser.UNEXPECTED_CHAR, 0);
};

ErrorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterError(this);
	}
};

ErrorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitError(this);
	}
};




SiddhiQLParser.ErrorContext = ErrorContext;

SiddhiQLParser.prototype.error = function() {

    var localctx = new ErrorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, SiddhiQLParser.RULE_error);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 271;
        this.match(SiddhiQLParser.UNEXPECTED_CHAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Siddhi_appContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_siddhi_app;
    return this;
}

Siddhi_appContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Siddhi_appContext.prototype.constructor = Siddhi_appContext;

Siddhi_appContext.prototype.definition_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_streamContext);
    } else {
        return this.getTypedRuleContext(Definition_streamContext,i);
    }
};

Siddhi_appContext.prototype.definition_table = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_tableContext);
    } else {
        return this.getTypedRuleContext(Definition_tableContext,i);
    }
};

Siddhi_appContext.prototype.definition_trigger = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_triggerContext);
    } else {
        return this.getTypedRuleContext(Definition_triggerContext,i);
    }
};

Siddhi_appContext.prototype.definition_function = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_functionContext);
    } else {
        return this.getTypedRuleContext(Definition_functionContext,i);
    }
};

Siddhi_appContext.prototype.definition_window = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_windowContext);
    } else {
        return this.getTypedRuleContext(Definition_windowContext,i);
    }
};

Siddhi_appContext.prototype.definition_aggregation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_aggregationContext);
    } else {
        return this.getTypedRuleContext(Definition_aggregationContext,i);
    }
};

Siddhi_appContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

Siddhi_appContext.prototype.app_annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(App_annotationContext);
    } else {
        return this.getTypedRuleContext(App_annotationContext,i);
    }
};

Siddhi_appContext.prototype.execution_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Execution_elementContext);
    } else {
        return this.getTypedRuleContext(Execution_elementContext,i);
    }
};

Siddhi_appContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSiddhi_app(this);
	}
};

Siddhi_appContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSiddhi_app(this);
	}
};




SiddhiQLParser.Siddhi_appContext = Siddhi_appContext;

SiddhiQLParser.prototype.siddhi_app = function() {

    var localctx = new Siddhi_appContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, SiddhiQLParser.RULE_siddhi_app);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 277;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,1,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 275;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 273;
                    this.app_annotation();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 274;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 279;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,1,this._ctx);
        }

        this.state = 287;
        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
        switch(la_) {
        case 1:
            this.state = 280;
            this.definition_stream();
            break;

        case 2:
            this.state = 281;
            this.definition_table();
            break;

        case 3:
            this.state = 282;
            this.definition_trigger();
            break;

        case 4:
            this.state = 283;
            this.definition_function();
            break;

        case 5:
            this.state = 284;
            this.definition_window();
            break;

        case 6:
            this.state = 285;
            this.definition_aggregation();
            break;

        case 7:
            this.state = 286;
            this.error();
            break;

        }
        this.state = 301;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,4,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 289;
                this.match(SiddhiQLParser.SCOL);
                this.state = 297;
                var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
                switch(la_) {
                case 1:
                    this.state = 290;
                    this.definition_stream();
                    break;

                case 2:
                    this.state = 291;
                    this.definition_table();
                    break;

                case 3:
                    this.state = 292;
                    this.definition_trigger();
                    break;

                case 4:
                    this.state = 293;
                    this.definition_function();
                    break;

                case 5:
                    this.state = 294;
                    this.definition_window();
                    break;

                case 6:
                    this.state = 295;
                    this.definition_aggregation();
                    break;

                case 7:
                    this.state = 296;
                    this.error();
                    break;

                } 
            }
            this.state = 303;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,4,this._ctx);
        }

        this.state = 311;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,6,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 304;
                this.match(SiddhiQLParser.SCOL);
                this.state = 307;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                case SiddhiQLParser.FROM:
                case SiddhiQLParser.PARTITION:
                    this.state = 305;
                    this.execution_element();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 306;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 313;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,6,this._ctx);
        }

        this.state = 315;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 314;
            this.match(SiddhiQLParser.SCOL);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_element;
    return this;
}

Execution_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_elementContext.prototype.constructor = Execution_elementContext;

Execution_elementContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Execution_elementContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Execution_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_element(this);
	}
};

Execution_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_element(this);
	}
};




SiddhiQLParser.Execution_elementContext = Execution_elementContext;

SiddhiQLParser.prototype.execution_element = function() {

    var localctx = new Execution_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, SiddhiQLParser.RULE_execution_element);
    try {
        this.state = 319;
        var la_ = this._interp.adaptivePredict(this._input,8,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 317;
            this.query();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 318;
            this.partition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_stream_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream_final;
    return this;
}

Definition_stream_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_stream_finalContext.prototype.constructor = Definition_stream_finalContext;

Definition_stream_finalContext.prototype.definition_stream = function() {
    return this.getTypedRuleContext(Definition_streamContext,0);
};

Definition_stream_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_stream_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream_final(this);
	}
};

Definition_stream_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream_final(this);
	}
};




SiddhiQLParser.Definition_stream_finalContext = Definition_stream_finalContext;

SiddhiQLParser.prototype.definition_stream_final = function() {

    var localctx = new Definition_stream_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, SiddhiQLParser.RULE_definition_stream_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 321;
        this.definition_stream();
        this.state = 323;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 322;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 325;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream;
    return this;
}

Definition_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_streamContext.prototype.constructor = Definition_streamContext;

Definition_streamContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_streamContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

Definition_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_streamContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_streamContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_streamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream(this);
	}
};

Definition_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream(this);
	}
};




SiddhiQLParser.Definition_streamContext = Definition_streamContext;

SiddhiQLParser.prototype.definition_stream = function() {

    var localctx = new Definition_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, SiddhiQLParser.RULE_definition_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 330;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 327;
            this.annotation();
            this.state = 332;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 333;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 334;
        this.match(SiddhiQLParser.STREAM);
        this.state = 335;
        this.source();
        this.state = 336;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 337;
        this.attribute_name();
        this.state = 338;
        this.attribute_type();
        this.state = 345;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 339;
            this.match(SiddhiQLParser.COMMA);
            this.state = 340;
            this.attribute_name();
            this.state = 341;
            this.attribute_type();
            this.state = 347;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 348;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_table_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table_final;
    return this;
}

Definition_table_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_table_finalContext.prototype.constructor = Definition_table_finalContext;

Definition_table_finalContext.prototype.definition_table = function() {
    return this.getTypedRuleContext(Definition_tableContext,0);
};

Definition_table_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_table_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table_final(this);
	}
};

Definition_table_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table_final(this);
	}
};




SiddhiQLParser.Definition_table_finalContext = Definition_table_finalContext;

SiddhiQLParser.prototype.definition_table_final = function() {

    var localctx = new Definition_table_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, SiddhiQLParser.RULE_definition_table_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 350;
        this.definition_table();
        this.state = 352;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 351;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 354;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_tableContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table;
    return this;
}

Definition_tableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_tableContext.prototype.constructor = Definition_tableContext;

Definition_tableContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_tableContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

Definition_tableContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_tableContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_tableContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_tableContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_tableContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table(this);
	}
};

Definition_tableContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table(this);
	}
};




SiddhiQLParser.Definition_tableContext = Definition_tableContext;

SiddhiQLParser.prototype.definition_table = function() {

    var localctx = new Definition_tableContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, SiddhiQLParser.RULE_definition_table);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 359;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 356;
            this.annotation();
            this.state = 361;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 362;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 363;
        this.match(SiddhiQLParser.TABLE);
        this.state = 364;
        this.source();
        this.state = 365;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 366;
        this.attribute_name();
        this.state = 367;
        this.attribute_type();
        this.state = 374;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 368;
            this.match(SiddhiQLParser.COMMA);
            this.state = 369;
            this.attribute_name();
            this.state = 370;
            this.attribute_type();
            this.state = 376;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 377;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_window_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window_final;
    return this;
}

Definition_window_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_window_finalContext.prototype.constructor = Definition_window_finalContext;

Definition_window_finalContext.prototype.definition_window = function() {
    return this.getTypedRuleContext(Definition_windowContext,0);
};

Definition_window_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_window_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window_final(this);
	}
};

Definition_window_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window_final(this);
	}
};




SiddhiQLParser.Definition_window_finalContext = Definition_window_finalContext;

SiddhiQLParser.prototype.definition_window_final = function() {

    var localctx = new Definition_window_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, SiddhiQLParser.RULE_definition_window_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 379;
        this.definition_window();
        this.state = 381;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 380;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 383;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_windowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_window;
    return this;
}

Definition_windowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_windowContext.prototype.constructor = Definition_windowContext;

Definition_windowContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_windowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

Definition_windowContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_windowContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_windowContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_windowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Definition_windowContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_windowContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Definition_windowContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Definition_windowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_window(this);
	}
};

Definition_windowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_window(this);
	}
};




SiddhiQLParser.Definition_windowContext = Definition_windowContext;

SiddhiQLParser.prototype.definition_window = function() {

    var localctx = new Definition_windowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, SiddhiQLParser.RULE_definition_window);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 388;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 385;
            this.annotation();
            this.state = 390;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 391;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 392;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 393;
        this.source();
        this.state = 394;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 395;
        this.attribute_name();
        this.state = 396;
        this.attribute_type();
        this.state = 403;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 397;
            this.match(SiddhiQLParser.COMMA);
            this.state = 398;
            this.attribute_name();
            this.state = 399;
            this.attribute_type();
            this.state = 405;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 406;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 407;
        this.function_operation();
        this.state = 410;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 408;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 409;
            this.output_event_type();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_query_final;
    return this;
}

Store_query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_query_finalContext.prototype.constructor = Store_query_finalContext;

Store_query_finalContext.prototype.store_query = function() {
    return this.getTypedRuleContext(Store_queryContext,0);
};

Store_query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Store_query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_query_final(this);
	}
};

Store_query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_query_final(this);
	}
};




SiddhiQLParser.Store_query_finalContext = Store_query_finalContext;

SiddhiQLParser.prototype.store_query_final = function() {

    var localctx = new Store_query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, SiddhiQLParser.RULE_store_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 412;
        this.store_query();
        this.state = 414;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 413;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 416;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_queryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_query;
    return this;
}

Store_queryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_queryContext.prototype.constructor = Store_queryContext;

Store_queryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Store_queryContext.prototype.store_input = function() {
    return this.getTypedRuleContext(Store_inputContext,0);
};

Store_queryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Store_queryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_query(this);
	}
};

Store_queryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_query(this);
	}
};




SiddhiQLParser.Store_queryContext = Store_queryContext;

SiddhiQLParser.prototype.store_query = function() {

    var localctx = new Store_queryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, SiddhiQLParser.RULE_store_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 418;
        this.match(SiddhiQLParser.FROM);
        this.state = 419;
        this.store_input();
        this.state = 421;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SELECT) {
            this.state = 420;
            this.query_section();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Store_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_store_input;
    return this;
}

Store_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Store_inputContext.prototype.constructor = Store_inputContext;

Store_inputContext.prototype.source_id = function() {
    return this.getTypedRuleContext(Source_idContext,0);
};

Store_inputContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Store_inputContext.prototype.alias = function() {
    return this.getTypedRuleContext(AliasContext,0);
};

Store_inputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Store_inputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Store_inputContext.prototype.within_time_range = function() {
    return this.getTypedRuleContext(Within_time_rangeContext,0);
};

Store_inputContext.prototype.per = function() {
    return this.getTypedRuleContext(PerContext,0);
};

Store_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStore_input(this);
	}
};

Store_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStore_input(this);
	}
};




SiddhiQLParser.Store_inputContext = Store_inputContext;

SiddhiQLParser.prototype.store_input = function() {

    var localctx = new Store_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, SiddhiQLParser.RULE_store_input);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 423;
        this.source_id();
        this.state = 426;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 424;
            this.match(SiddhiQLParser.AS);
            this.state = 425;
            this.alias();
        }

        this.state = 430;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ON) {
            this.state = 428;
            this.match(SiddhiQLParser.ON);
            this.state = 429;
            this.expression();
        }

        this.state = 435;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 432;
            this.within_time_range();
            this.state = 433;
            this.per();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_function_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function_final;
    return this;
}

Definition_function_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_function_finalContext.prototype.constructor = Definition_function_finalContext;

Definition_function_finalContext.prototype.definition_function = function() {
    return this.getTypedRuleContext(Definition_functionContext,0);
};

Definition_function_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_function_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function_final(this);
	}
};

Definition_function_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function_final(this);
	}
};




SiddhiQLParser.Definition_function_finalContext = Definition_function_finalContext;

SiddhiQLParser.prototype.definition_function_final = function() {

    var localctx = new Definition_function_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, SiddhiQLParser.RULE_definition_function_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 437;
        this.definition_function();
        this.state = 439;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 438;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 441;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function;
    return this;
}

Definition_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_functionContext.prototype.constructor = Definition_functionContext;

Definition_functionContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_functionContext.prototype.FUNCTION = function() {
    return this.getToken(SiddhiQLParser.FUNCTION, 0);
};

Definition_functionContext.prototype.function_name = function() {
    return this.getTypedRuleContext(Function_nameContext,0);
};

Definition_functionContext.prototype.language_name = function() {
    return this.getTypedRuleContext(Language_nameContext,0);
};

Definition_functionContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Definition_functionContext.prototype.attribute_type = function() {
    return this.getTypedRuleContext(Attribute_typeContext,0);
};

Definition_functionContext.prototype.function_body = function() {
    return this.getTypedRuleContext(Function_bodyContext,0);
};

Definition_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function(this);
	}
};

Definition_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function(this);
	}
};




SiddhiQLParser.Definition_functionContext = Definition_functionContext;

SiddhiQLParser.prototype.definition_function = function() {

    var localctx = new Definition_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, SiddhiQLParser.RULE_definition_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 443;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 444;
        this.match(SiddhiQLParser.FUNCTION);
        this.state = 445;
        this.function_name();
        this.state = 446;
        this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
        this.state = 447;
        this.language_name();
        this.state = 448;
        this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
        this.state = 449;
        this.match(SiddhiQLParser.RETURN);
        this.state = 450;
        this.attribute_type();
        this.state = 451;
        this.function_body();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_name;
    return this;
}

Function_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_nameContext.prototype.constructor = Function_nameContext;

Function_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Function_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_name(this);
	}
};

Function_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_name(this);
	}
};




SiddhiQLParser.Function_nameContext = Function_nameContext;

SiddhiQLParser.prototype.function_name = function() {

    var localctx = new Function_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, SiddhiQLParser.RULE_function_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 453;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Language_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_language_name;
    return this;
}

Language_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Language_nameContext.prototype.constructor = Language_nameContext;

Language_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Language_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLanguage_name(this);
	}
};

Language_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLanguage_name(this);
	}
};




SiddhiQLParser.Language_nameContext = Language_nameContext;

SiddhiQLParser.prototype.language_name = function() {

    var localctx = new Language_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, SiddhiQLParser.RULE_language_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 455;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_bodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_body;
    return this;
}

Function_bodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_bodyContext.prototype.constructor = Function_bodyContext;

Function_bodyContext.prototype.SCRIPT = function() {
    return this.getToken(SiddhiQLParser.SCRIPT, 0);
};

Function_bodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_body(this);
	}
};

Function_bodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_body(this);
	}
};




SiddhiQLParser.Function_bodyContext = Function_bodyContext;

SiddhiQLParser.prototype.function_body = function() {

    var localctx = new Function_bodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, SiddhiQLParser.RULE_function_body);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 457;
        this.match(SiddhiQLParser.SCRIPT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_trigger_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger_final;
    return this;
}

Definition_trigger_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_trigger_finalContext.prototype.constructor = Definition_trigger_finalContext;

Definition_trigger_finalContext.prototype.definition_trigger = function() {
    return this.getTypedRuleContext(Definition_triggerContext,0);
};

Definition_trigger_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_trigger_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger_final(this);
	}
};

Definition_trigger_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger_final(this);
	}
};




SiddhiQLParser.Definition_trigger_finalContext = Definition_trigger_finalContext;

SiddhiQLParser.prototype.definition_trigger_final = function() {

    var localctx = new Definition_trigger_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, SiddhiQLParser.RULE_definition_trigger_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 459;
        this.definition_trigger();
        this.state = 461;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 460;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 463;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_triggerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_trigger;
    return this;
}

Definition_triggerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_triggerContext.prototype.constructor = Definition_triggerContext;

Definition_triggerContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_triggerContext.prototype.TRIGGER = function() {
    return this.getToken(SiddhiQLParser.TRIGGER, 0);
};

Definition_triggerContext.prototype.trigger_name = function() {
    return this.getTypedRuleContext(Trigger_nameContext,0);
};

Definition_triggerContext.prototype.AT = function() {
    return this.getToken(SiddhiQLParser.AT, 0);
};

Definition_triggerContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_triggerContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Definition_triggerContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Definition_triggerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_trigger(this);
	}
};

Definition_triggerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_trigger(this);
	}
};




SiddhiQLParser.Definition_triggerContext = Definition_triggerContext;

SiddhiQLParser.prototype.definition_trigger = function() {

    var localctx = new Definition_triggerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, SiddhiQLParser.RULE_definition_trigger);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 465;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 466;
        this.match(SiddhiQLParser.TRIGGER);
        this.state = 467;
        this.trigger_name();
        this.state = 468;
        this.match(SiddhiQLParser.AT);
        this.state = 472;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.EVERY:
            this.state = 469;
            this.match(SiddhiQLParser.EVERY);
            this.state = 470;
            this.time_value();
            break;
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 471;
            this.string_value();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trigger_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_trigger_name;
    return this;
}

Trigger_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trigger_nameContext.prototype.constructor = Trigger_nameContext;

Trigger_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Trigger_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTrigger_name(this);
	}
};

Trigger_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTrigger_name(this);
	}
};




SiddhiQLParser.Trigger_nameContext = Trigger_nameContext;

SiddhiQLParser.prototype.trigger_name = function() {

    var localctx = new Trigger_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, SiddhiQLParser.RULE_trigger_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 474;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_aggregation_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_aggregation_final;
    return this;
}

Definition_aggregation_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_aggregation_finalContext.prototype.constructor = Definition_aggregation_finalContext;

Definition_aggregation_finalContext.prototype.definition_aggregation = function() {
    return this.getTypedRuleContext(Definition_aggregationContext,0);
};

Definition_aggregation_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_aggregation_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_aggregation_final(this);
	}
};

Definition_aggregation_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_aggregation_final(this);
	}
};




SiddhiQLParser.Definition_aggregation_finalContext = Definition_aggregation_finalContext;

SiddhiQLParser.prototype.definition_aggregation_final = function() {

    var localctx = new Definition_aggregation_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, SiddhiQLParser.RULE_definition_aggregation_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 476;
        this.definition_aggregation();
        this.state = 478;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 477;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 480;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_aggregationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_aggregation;
    return this;
}

Definition_aggregationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_aggregationContext.prototype.constructor = Definition_aggregationContext;

Definition_aggregationContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_aggregationContext.prototype.AGGREGATION = function() {
    return this.getToken(SiddhiQLParser.AGGREGATION, 0);
};

Definition_aggregationContext.prototype.aggregation_name = function() {
    return this.getTypedRuleContext(Aggregation_nameContext,0);
};

Definition_aggregationContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Definition_aggregationContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Definition_aggregationContext.prototype.group_by_query_selection = function() {
    return this.getTypedRuleContext(Group_by_query_selectionContext,0);
};

Definition_aggregationContext.prototype.AGGREGATE = function() {
    return this.getToken(SiddhiQLParser.AGGREGATE, 0);
};

Definition_aggregationContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Definition_aggregationContext.prototype.aggregation_time = function() {
    return this.getTypedRuleContext(Aggregation_timeContext,0);
};

Definition_aggregationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_aggregationContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Definition_aggregationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Definition_aggregationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_aggregation(this);
	}
};

Definition_aggregationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_aggregation(this);
	}
};




SiddhiQLParser.Definition_aggregationContext = Definition_aggregationContext;

SiddhiQLParser.prototype.definition_aggregation = function() {

    var localctx = new Definition_aggregationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, SiddhiQLParser.RULE_definition_aggregation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 485;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 482;
            this.annotation();
            this.state = 487;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 488;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 489;
        this.match(SiddhiQLParser.AGGREGATION);
        this.state = 490;
        this.aggregation_name();
        this.state = 491;
        this.match(SiddhiQLParser.FROM);
        this.state = 492;
        this.standard_stream();
        this.state = 493;
        this.group_by_query_selection();
        this.state = 494;
        this.match(SiddhiQLParser.AGGREGATE);
        this.state = 497;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.BY) {
            this.state = 495;
            this.match(SiddhiQLParser.BY);
            this.state = 496;
            this.attribute_reference();
        }

        this.state = 499;
        this.match(SiddhiQLParser.EVERY);
        this.state = 500;
        this.aggregation_time();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_name;
    return this;
}

Aggregation_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_nameContext.prototype.constructor = Aggregation_nameContext;

Aggregation_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Aggregation_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_name(this);
	}
};

Aggregation_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_name(this);
	}
};




SiddhiQLParser.Aggregation_nameContext = Aggregation_nameContext;

SiddhiQLParser.prototype.aggregation_name = function() {

    var localctx = new Aggregation_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, SiddhiQLParser.RULE_aggregation_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 502;
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time;
    return this;
}

Aggregation_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_timeContext.prototype.constructor = Aggregation_timeContext;

Aggregation_timeContext.prototype.aggregation_time_range = function() {
    return this.getTypedRuleContext(Aggregation_time_rangeContext,0);
};

Aggregation_timeContext.prototype.aggregation_time_interval = function() {
    return this.getTypedRuleContext(Aggregation_time_intervalContext,0);
};

Aggregation_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time(this);
	}
};

Aggregation_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time(this);
	}
};




SiddhiQLParser.Aggregation_timeContext = Aggregation_timeContext;

SiddhiQLParser.prototype.aggregation_time = function() {

    var localctx = new Aggregation_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, SiddhiQLParser.RULE_aggregation_time);
    try {
        this.state = 506;
        var la_ = this._interp.adaptivePredict(this._input,30,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 504;
            this.aggregation_time_range();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 505;
            this.aggregation_time_interval();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_durationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_duration;
    return this;
}

Aggregation_time_durationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_durationContext.prototype.constructor = Aggregation_time_durationContext;

Aggregation_time_durationContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Aggregation_time_durationContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Aggregation_time_durationContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Aggregation_time_durationContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Aggregation_time_durationContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Aggregation_time_durationContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Aggregation_time_durationContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Aggregation_time_durationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_duration(this);
	}
};

Aggregation_time_durationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_duration(this);
	}
};




SiddhiQLParser.Aggregation_time_durationContext = Aggregation_time_durationContext;

SiddhiQLParser.prototype.aggregation_time_duration = function() {

    var localctx = new Aggregation_time_durationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, SiddhiQLParser.RULE_aggregation_time_duration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 508;
        _la = this._input.LA(1);
        if(!(((((_la - 85)) & ~0x1f) == 0 && ((1 << (_la - 85)) & ((1 << (SiddhiQLParser.YEARS - 85)) | (1 << (SiddhiQLParser.MONTHS - 85)) | (1 << (SiddhiQLParser.WEEKS - 85)) | (1 << (SiddhiQLParser.DAYS - 85)) | (1 << (SiddhiQLParser.HOURS - 85)) | (1 << (SiddhiQLParser.MINUTES - 85)) | (1 << (SiddhiQLParser.SECONDS - 85)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_range;
    return this;
}

Aggregation_time_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_rangeContext.prototype.constructor = Aggregation_time_rangeContext;

Aggregation_time_rangeContext.prototype.aggregation_time_duration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Aggregation_time_durationContext);
    } else {
        return this.getTypedRuleContext(Aggregation_time_durationContext,i);
    }
};

Aggregation_time_rangeContext.prototype.TRIPLE_DOT = function() {
    return this.getToken(SiddhiQLParser.TRIPLE_DOT, 0);
};

Aggregation_time_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_range(this);
	}
};

Aggregation_time_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_range(this);
	}
};




SiddhiQLParser.Aggregation_time_rangeContext = Aggregation_time_rangeContext;

SiddhiQLParser.prototype.aggregation_time_range = function() {

    var localctx = new Aggregation_time_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, SiddhiQLParser.RULE_aggregation_time_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 510;
        this.aggregation_time_duration();
        this.state = 511;
        this.match(SiddhiQLParser.TRIPLE_DOT);
        this.state = 512;
        this.aggregation_time_duration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aggregation_time_intervalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_aggregation_time_interval;
    return this;
}

Aggregation_time_intervalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aggregation_time_intervalContext.prototype.constructor = Aggregation_time_intervalContext;

Aggregation_time_intervalContext.prototype.aggregation_time_duration = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Aggregation_time_durationContext);
    } else {
        return this.getTypedRuleContext(Aggregation_time_durationContext,i);
    }
};

Aggregation_time_intervalContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.COMMA);
    } else {
        return this.getToken(SiddhiQLParser.COMMA, i);
    }
};


Aggregation_time_intervalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAggregation_time_interval(this);
	}
};

Aggregation_time_intervalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAggregation_time_interval(this);
	}
};




SiddhiQLParser.Aggregation_time_intervalContext = Aggregation_time_intervalContext;

SiddhiQLParser.prototype.aggregation_time_interval = function() {

    var localctx = new Aggregation_time_intervalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, SiddhiQLParser.RULE_aggregation_time_interval);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 514;
        this.aggregation_time_duration();
        this.state = 519;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 515;
            this.match(SiddhiQLParser.COMMA);
            this.state = 516;
            this.aggregation_time_duration();
            this.state = 521;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AnnotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

AnnotationContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

AnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation(this);
	}
};

AnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation(this);
	}
};




SiddhiQLParser.AnnotationContext = AnnotationContext;

SiddhiQLParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, SiddhiQLParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 522;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 523;
        this.name();
        this.state = 541;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 524;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 527;
            switch(this._input.LA(1)) {
            case SiddhiQLParser.STREAM:
            case SiddhiQLParser.DEFINE:
            case SiddhiQLParser.TABLE:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
            case SiddhiQLParser.WINDOW:
            case SiddhiQLParser.SELECT:
            case SiddhiQLParser.GROUP:
            case SiddhiQLParser.BY:
            case SiddhiQLParser.ORDER:
            case SiddhiQLParser.LIMIT:
            case SiddhiQLParser.ASC:
            case SiddhiQLParser.DESC:
            case SiddhiQLParser.HAVING:
            case SiddhiQLParser.INSERT:
            case SiddhiQLParser.DELETE:
            case SiddhiQLParser.UPDATE:
            case SiddhiQLParser.RETURN:
            case SiddhiQLParser.EVENTS:
            case SiddhiQLParser.INTO:
            case SiddhiQLParser.OUTPUT:
            case SiddhiQLParser.EXPIRED:
            case SiddhiQLParser.CURRENT:
            case SiddhiQLParser.SNAPSHOT:
            case SiddhiQLParser.FOR:
            case SiddhiQLParser.RAW:
            case SiddhiQLParser.OF:
            case SiddhiQLParser.AS:
            case SiddhiQLParser.OR:
            case SiddhiQLParser.AND:
            case SiddhiQLParser.ON:
            case SiddhiQLParser.IS:
            case SiddhiQLParser.NOT:
            case SiddhiQLParser.WITHIN:
            case SiddhiQLParser.WITH:
            case SiddhiQLParser.BEGIN:
            case SiddhiQLParser.END:
            case SiddhiQLParser.NULL:
            case SiddhiQLParser.EVERY:
            case SiddhiQLParser.LAST:
            case SiddhiQLParser.ALL:
            case SiddhiQLParser.FIRST:
            case SiddhiQLParser.JOIN:
            case SiddhiQLParser.INNER:
            case SiddhiQLParser.OUTER:
            case SiddhiQLParser.RIGHT:
            case SiddhiQLParser.LEFT:
            case SiddhiQLParser.FULL:
            case SiddhiQLParser.UNIDIRECTIONAL:
            case SiddhiQLParser.YEARS:
            case SiddhiQLParser.MONTHS:
            case SiddhiQLParser.WEEKS:
            case SiddhiQLParser.DAYS:
            case SiddhiQLParser.HOURS:
            case SiddhiQLParser.MINUTES:
            case SiddhiQLParser.SECONDS:
            case SiddhiQLParser.MILLISECONDS:
            case SiddhiQLParser.FALSE:
            case SiddhiQLParser.TRUE:
            case SiddhiQLParser.STRING:
            case SiddhiQLParser.INT:
            case SiddhiQLParser.LONG:
            case SiddhiQLParser.FLOAT:
            case SiddhiQLParser.DOUBLE:
            case SiddhiQLParser.BOOL:
            case SiddhiQLParser.OBJECT:
            case SiddhiQLParser.ID_QUOTES:
            case SiddhiQLParser.ID:
            case SiddhiQLParser.STRING_LITERAL:
                this.state = 525;
                this.annotation_element();
                break;
            case SiddhiQLParser.AT_SYMBOL:
                this.state = 526;
                this.annotation();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 536;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 529;
                this.match(SiddhiQLParser.COMMA);
                this.state = 532;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.STREAM:
                case SiddhiQLParser.DEFINE:
                case SiddhiQLParser.TABLE:
                case SiddhiQLParser.FROM:
                case SiddhiQLParser.PARTITION:
                case SiddhiQLParser.WINDOW:
                case SiddhiQLParser.SELECT:
                case SiddhiQLParser.GROUP:
                case SiddhiQLParser.BY:
                case SiddhiQLParser.ORDER:
                case SiddhiQLParser.LIMIT:
                case SiddhiQLParser.ASC:
                case SiddhiQLParser.DESC:
                case SiddhiQLParser.HAVING:
                case SiddhiQLParser.INSERT:
                case SiddhiQLParser.DELETE:
                case SiddhiQLParser.UPDATE:
                case SiddhiQLParser.RETURN:
                case SiddhiQLParser.EVENTS:
                case SiddhiQLParser.INTO:
                case SiddhiQLParser.OUTPUT:
                case SiddhiQLParser.EXPIRED:
                case SiddhiQLParser.CURRENT:
                case SiddhiQLParser.SNAPSHOT:
                case SiddhiQLParser.FOR:
                case SiddhiQLParser.RAW:
                case SiddhiQLParser.OF:
                case SiddhiQLParser.AS:
                case SiddhiQLParser.OR:
                case SiddhiQLParser.AND:
                case SiddhiQLParser.ON:
                case SiddhiQLParser.IS:
                case SiddhiQLParser.NOT:
                case SiddhiQLParser.WITHIN:
                case SiddhiQLParser.WITH:
                case SiddhiQLParser.BEGIN:
                case SiddhiQLParser.END:
                case SiddhiQLParser.NULL:
                case SiddhiQLParser.EVERY:
                case SiddhiQLParser.LAST:
                case SiddhiQLParser.ALL:
                case SiddhiQLParser.FIRST:
                case SiddhiQLParser.JOIN:
                case SiddhiQLParser.INNER:
                case SiddhiQLParser.OUTER:
                case SiddhiQLParser.RIGHT:
                case SiddhiQLParser.LEFT:
                case SiddhiQLParser.FULL:
                case SiddhiQLParser.UNIDIRECTIONAL:
                case SiddhiQLParser.YEARS:
                case SiddhiQLParser.MONTHS:
                case SiddhiQLParser.WEEKS:
                case SiddhiQLParser.DAYS:
                case SiddhiQLParser.HOURS:
                case SiddhiQLParser.MINUTES:
                case SiddhiQLParser.SECONDS:
                case SiddhiQLParser.MILLISECONDS:
                case SiddhiQLParser.FALSE:
                case SiddhiQLParser.TRUE:
                case SiddhiQLParser.STRING:
                case SiddhiQLParser.INT:
                case SiddhiQLParser.LONG:
                case SiddhiQLParser.FLOAT:
                case SiddhiQLParser.DOUBLE:
                case SiddhiQLParser.BOOL:
                case SiddhiQLParser.OBJECT:
                case SiddhiQLParser.ID_QUOTES:
                case SiddhiQLParser.ID:
                case SiddhiQLParser.STRING_LITERAL:
                    this.state = 530;
                    this.annotation_element();
                    break;
                case SiddhiQLParser.AT_SYMBOL:
                    this.state = 531;
                    this.annotation();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 538;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 539;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function App_annotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_app_annotation;
    return this;
}

App_annotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
App_annotationContext.prototype.constructor = App_annotationContext;

App_annotationContext.prototype.APP = function() {
    return this.getToken(SiddhiQLParser.APP, 0);
};

App_annotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

App_annotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

App_annotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterApp_annotation(this);
	}
};

App_annotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitApp_annotation(this);
	}
};




SiddhiQLParser.App_annotationContext = App_annotationContext;

SiddhiQLParser.prototype.app_annotation = function() {

    var localctx = new App_annotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, SiddhiQLParser.RULE_app_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 543;
        this.match(SiddhiQLParser.AT_SYMBOL);
        this.state = 544;
        this.match(SiddhiQLParser.APP);
        this.state = 545;
        this.match(SiddhiQLParser.COL);
        this.state = 546;
        this.name();
        this.state = 558;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 547;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 548;
            this.annotation_element();
            this.state = 553;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 549;
                this.match(SiddhiQLParser.COMMA);
                this.state = 550;
                this.annotation_element();
                this.state = 555;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 556;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Annotation_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation_element;
    return this;
}

Annotation_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Annotation_elementContext.prototype.constructor = Annotation_elementContext;

Annotation_elementContext.prototype.property_value = function() {
    return this.getTypedRuleContext(Property_valueContext,0);
};

Annotation_elementContext.prototype.property_name = function() {
    return this.getTypedRuleContext(Property_nameContext,0);
};

Annotation_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation_element(this);
	}
};

Annotation_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation_element(this);
	}
};




SiddhiQLParser.Annotation_elementContext = Annotation_elementContext;

SiddhiQLParser.prototype.annotation_element = function() {

    var localctx = new Annotation_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, SiddhiQLParser.RULE_annotation_element);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 563;
        _la = this._input.LA(1);
        if(((((_la - 30)) & ~0x1f) == 0 && ((1 << (_la - 30)) & ((1 << (SiddhiQLParser.STREAM - 30)) | (1 << (SiddhiQLParser.DEFINE - 30)) | (1 << (SiddhiQLParser.TABLE - 30)) | (1 << (SiddhiQLParser.FROM - 30)) | (1 << (SiddhiQLParser.PARTITION - 30)) | (1 << (SiddhiQLParser.WINDOW - 30)) | (1 << (SiddhiQLParser.SELECT - 30)) | (1 << (SiddhiQLParser.GROUP - 30)) | (1 << (SiddhiQLParser.BY - 30)) | (1 << (SiddhiQLParser.ORDER - 30)) | (1 << (SiddhiQLParser.LIMIT - 30)) | (1 << (SiddhiQLParser.ASC - 30)) | (1 << (SiddhiQLParser.DESC - 30)) | (1 << (SiddhiQLParser.HAVING - 30)) | (1 << (SiddhiQLParser.INSERT - 30)) | (1 << (SiddhiQLParser.DELETE - 30)) | (1 << (SiddhiQLParser.UPDATE - 30)) | (1 << (SiddhiQLParser.RETURN - 30)) | (1 << (SiddhiQLParser.EVENTS - 30)) | (1 << (SiddhiQLParser.INTO - 30)) | (1 << (SiddhiQLParser.OUTPUT - 30)) | (1 << (SiddhiQLParser.EXPIRED - 30)) | (1 << (SiddhiQLParser.CURRENT - 30)) | (1 << (SiddhiQLParser.SNAPSHOT - 30)) | (1 << (SiddhiQLParser.FOR - 30)) | (1 << (SiddhiQLParser.RAW - 30)) | (1 << (SiddhiQLParser.OF - 30)) | (1 << (SiddhiQLParser.AS - 30)))) !== 0) || ((((_la - 63)) & ~0x1f) == 0 && ((1 << (_la - 63)) & ((1 << (SiddhiQLParser.OR - 63)) | (1 << (SiddhiQLParser.AND - 63)) | (1 << (SiddhiQLParser.ON - 63)) | (1 << (SiddhiQLParser.IS - 63)) | (1 << (SiddhiQLParser.NOT - 63)) | (1 << (SiddhiQLParser.WITHIN - 63)) | (1 << (SiddhiQLParser.WITH - 63)) | (1 << (SiddhiQLParser.BEGIN - 63)) | (1 << (SiddhiQLParser.END - 63)) | (1 << (SiddhiQLParser.NULL - 63)) | (1 << (SiddhiQLParser.EVERY - 63)) | (1 << (SiddhiQLParser.LAST - 63)) | (1 << (SiddhiQLParser.ALL - 63)) | (1 << (SiddhiQLParser.FIRST - 63)) | (1 << (SiddhiQLParser.JOIN - 63)) | (1 << (SiddhiQLParser.INNER - 63)) | (1 << (SiddhiQLParser.OUTER - 63)) | (1 << (SiddhiQLParser.RIGHT - 63)) | (1 << (SiddhiQLParser.LEFT - 63)) | (1 << (SiddhiQLParser.FULL - 63)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 63)) | (1 << (SiddhiQLParser.YEARS - 63)) | (1 << (SiddhiQLParser.MONTHS - 63)) | (1 << (SiddhiQLParser.WEEKS - 63)) | (1 << (SiddhiQLParser.DAYS - 63)) | (1 << (SiddhiQLParser.HOURS - 63)) | (1 << (SiddhiQLParser.MINUTES - 63)) | (1 << (SiddhiQLParser.SECONDS - 63)) | (1 << (SiddhiQLParser.MILLISECONDS - 63)) | (1 << (SiddhiQLParser.FALSE - 63)) | (1 << (SiddhiQLParser.TRUE - 63)))) !== 0) || ((((_la - 95)) & ~0x1f) == 0 && ((1 << (_la - 95)) & ((1 << (SiddhiQLParser.STRING - 95)) | (1 << (SiddhiQLParser.INT - 95)) | (1 << (SiddhiQLParser.LONG - 95)) | (1 << (SiddhiQLParser.FLOAT - 95)) | (1 << (SiddhiQLParser.DOUBLE - 95)) | (1 << (SiddhiQLParser.BOOL - 95)) | (1 << (SiddhiQLParser.OBJECT - 95)) | (1 << (SiddhiQLParser.ID_QUOTES - 95)) | (1 << (SiddhiQLParser.ID - 95)))) !== 0)) {
            this.state = 560;
            this.property_name();
            this.state = 561;
            this.match(SiddhiQLParser.ASSIGN);
        }

        this.state = 565;
        this.property_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PartitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition;
    return this;
}

PartitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PartitionContext.prototype.constructor = PartitionContext;

PartitionContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

PartitionContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

PartitionContext.prototype.partition_with_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Partition_with_streamContext);
    } else {
        return this.getTypedRuleContext(Partition_with_streamContext,i);
    }
};

PartitionContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

PartitionContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

PartitionContext.prototype.query = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QueryContext);
    } else {
        return this.getTypedRuleContext(QueryContext,i);
    }
};

PartitionContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

PartitionContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

PartitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition(this);
	}
};

PartitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition(this);
	}
};




SiddhiQLParser.PartitionContext = PartitionContext;

SiddhiQLParser.prototype.partition = function() {

    var localctx = new PartitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, SiddhiQLParser.RULE_partition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 570;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 567;
            this.annotation();
            this.state = 572;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 573;
        this.match(SiddhiQLParser.PARTITION);
        this.state = 574;
        this.match(SiddhiQLParser.WITH);
        this.state = 575;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 576;
        this.partition_with_stream();
        this.state = 581;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 577;
            this.match(SiddhiQLParser.COMMA);
            this.state = 578;
            this.partition_with_stream();
            this.state = 583;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 584;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 585;
        this.match(SiddhiQLParser.BEGIN);
        this.state = 588;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.AT_SYMBOL:
        case SiddhiQLParser.FROM:
            this.state = 586;
            this.query();
            break;
        case SiddhiQLParser.UNEXPECTED_CHAR:
            this.state = 587;
            this.error();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 597;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,43,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 590;
                this.match(SiddhiQLParser.SCOL);
                this.state = 593;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT_SYMBOL:
                case SiddhiQLParser.FROM:
                    this.state = 591;
                    this.query();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 592;
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 599;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,43,this._ctx);
        }

        this.state = 601;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 600;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 603;
        this.match(SiddhiQLParser.END);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_final;
    return this;
}

Partition_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_finalContext.prototype.constructor = Partition_finalContext;

Partition_finalContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Partition_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Partition_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_final(this);
	}
};

Partition_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_final(this);
	}
};




SiddhiQLParser.Partition_finalContext = Partition_finalContext;

SiddhiQLParser.prototype.partition_final = function() {

    var localctx = new Partition_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, SiddhiQLParser.RULE_partition_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 605;
        this.partition();
        this.state = 607;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 606;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 609;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_with_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_with_stream;
    return this;
}

Partition_with_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_with_streamContext.prototype.constructor = Partition_with_streamContext;

Partition_with_streamContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Partition_with_streamContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

Partition_with_streamContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

Partition_with_streamContext.prototype.condition_ranges = function() {
    return this.getTypedRuleContext(Condition_rangesContext,0);
};

Partition_with_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_with_stream(this);
	}
};

Partition_with_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_with_stream(this);
	}
};




SiddhiQLParser.Partition_with_streamContext = Partition_with_streamContext;

SiddhiQLParser.prototype.partition_with_stream = function() {

    var localctx = new Partition_with_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, SiddhiQLParser.RULE_partition_with_stream);
    try {
        this.state = 619;
        var la_ = this._interp.adaptivePredict(this._input,46,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 611;
            this.attribute();
            this.state = 612;
            this.match(SiddhiQLParser.OF);
            this.state = 613;
            this.stream_id();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 615;
            this.condition_ranges();
            this.state = 616;
            this.match(SiddhiQLParser.OF);
            this.state = 617;
            this.stream_id();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_ranges;
    return this;
}

Condition_rangesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangesContext.prototype.constructor = Condition_rangesContext;

Condition_rangesContext.prototype.condition_range = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Condition_rangeContext);
    } else {
        return this.getTypedRuleContext(Condition_rangeContext,i);
    }
};

Condition_rangesContext.prototype.OR = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.OR);
    } else {
        return this.getToken(SiddhiQLParser.OR, i);
    }
};


Condition_rangesContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_ranges(this);
	}
};

Condition_rangesContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_ranges(this);
	}
};




SiddhiQLParser.Condition_rangesContext = Condition_rangesContext;

SiddhiQLParser.prototype.condition_ranges = function() {

    var localctx = new Condition_rangesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, SiddhiQLParser.RULE_condition_ranges);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 621;
        this.condition_range();
        this.state = 626;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.OR) {
            this.state = 622;
            this.match(SiddhiQLParser.OR);
            this.state = 623;
            this.condition_range();
            this.state = 628;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_range;
    return this;
}

Condition_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangeContext.prototype.constructor = Condition_rangeContext;

Condition_rangeContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Condition_rangeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Condition_rangeContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Condition_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_range(this);
	}
};

Condition_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_range(this);
	}
};




SiddhiQLParser.Condition_rangeContext = Condition_rangeContext;

SiddhiQLParser.prototype.condition_range = function() {

    var localctx = new Condition_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, SiddhiQLParser.RULE_condition_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 629;
        this.expression();
        this.state = 630;
        this.match(SiddhiQLParser.AS);
        this.state = 631;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_final;
    return this;
}

Query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_finalContext.prototype.constructor = Query_finalContext;

Query_finalContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_final(this);
	}
};

Query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_final(this);
	}
};




SiddhiQLParser.Query_finalContext = Query_finalContext;

SiddhiQLParser.prototype.query_final = function() {

    var localctx = new Query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, SiddhiQLParser.RULE_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 633;
        this.query();
        this.state = 635;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 634;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 637;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QueryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query;
    return this;
}

QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QueryContext.prototype.constructor = QueryContext;

QueryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

QueryContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

QueryContext.prototype.query_output = function() {
    return this.getTypedRuleContext(Query_outputContext,0);
};

QueryContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

QueryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

QueryContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

QueryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery(this);
	}
};

QueryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery(this);
	}
};




SiddhiQLParser.QueryContext = QueryContext;

SiddhiQLParser.prototype.query = function() {

    var localctx = new QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, SiddhiQLParser.RULE_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 642;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT_SYMBOL) {
            this.state = 639;
            this.annotation();
            this.state = 644;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 645;
        this.match(SiddhiQLParser.FROM);
        this.state = 646;
        this.query_input();
        this.state = 648;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SELECT) {
            this.state = 647;
            this.query_section();
        }

        this.state = 651;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 650;
            this.output_rate();
        }

        this.state = 653;
        this.query_output();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_input;
    return this;
}

Query_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_inputContext.prototype.constructor = Query_inputContext;

Query_inputContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Query_inputContext.prototype.join_stream = function() {
    return this.getTypedRuleContext(Join_streamContext,0);
};

Query_inputContext.prototype.pattern_stream = function() {
    return this.getTypedRuleContext(Pattern_streamContext,0);
};

Query_inputContext.prototype.sequence_stream = function() {
    return this.getTypedRuleContext(Sequence_streamContext,0);
};

Query_inputContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Query_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_input(this);
	}
};

Query_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_input(this);
	}
};




SiddhiQLParser.Query_inputContext = Query_inputContext;

SiddhiQLParser.prototype.query_input = function() {

    var localctx = new Query_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, SiddhiQLParser.RULE_query_input);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 660;
        var la_ = this._interp.adaptivePredict(this._input,52,this._ctx);
        switch(la_) {
        case 1:
            this.state = 655;
            this.standard_stream();
            break;

        case 2:
            this.state = 656;
            this.join_stream();
            break;

        case 3:
            this.state = 657;
            this.pattern_stream();
            break;

        case 4:
            this.state = 658;
            this.sequence_stream();
            break;

        case 5:
            this.state = 659;
            this.anonymous_stream();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stream;
    this.pre_window_handlers = null; // Basic_source_stream_handlersContext
    this.post_window_handlers = null; // Basic_source_stream_handlersContext
    return this;
}

Standard_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_streamContext.prototype.constructor = Standard_streamContext;

Standard_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Standard_streamContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Standard_streamContext.prototype.basic_source_stream_handlers = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlersContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlersContext,i);
    }
};

Standard_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stream(this);
	}
};

Standard_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stream(this);
	}
};




SiddhiQLParser.Standard_streamContext = Standard_streamContext;

SiddhiQLParser.prototype.standard_stream = function() {

    var localctx = new Standard_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, SiddhiQLParser.RULE_standard_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 662;
        this.source();
        this.state = 664;
        var la_ = this._interp.adaptivePredict(this._input,53,this._ctx);
        if(la_===1) {
            this.state = 663;
            localctx.pre_window_handlers = this.basic_source_stream_handlers();

        }
        this.state = 667;
        var la_ = this._interp.adaptivePredict(this._input,54,this._ctx);
        if(la_===1) {
            this.state = 666;
            this.window();

        }
        this.state = 670;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS || _la===SiddhiQLParser.HASH) {
            this.state = 669;
            localctx.post_window_handlers = this.basic_source_stream_handlers();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_stream;
    this.left_source = null; // Join_sourceContext
    this.right_source = null; // Join_sourceContext
    this.right_unidirectional = null; // Token
    this.left_unidirectional = null; // Token
    return this;
}

Join_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_streamContext.prototype.constructor = Join_streamContext;

Join_streamContext.prototype.join_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Join_sourceContext);
    } else {
        return this.getTypedRuleContext(Join_sourceContext,i);
    }
};

Join_streamContext.prototype.join = function() {
    return this.getTypedRuleContext(JoinContext,0);
};

Join_streamContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

Join_streamContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Join_streamContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Join_streamContext.prototype.within_time_range = function() {
    return this.getTypedRuleContext(Within_time_rangeContext,0);
};

Join_streamContext.prototype.per = function() {
    return this.getTypedRuleContext(PerContext,0);
};

Join_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_stream(this);
	}
};

Join_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_stream(this);
	}
};




SiddhiQLParser.Join_streamContext = Join_streamContext;

SiddhiQLParser.prototype.join_stream = function() {

    var localctx = new Join_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, SiddhiQLParser.RULE_join_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 672;
        localctx.left_source = this.join_source();
        this.state = 682;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
            this.state = 673;
            this.join();
            this.state = 674;
            localctx.right_source = this.join_source();
            this.state = 676;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.UNIDIRECTIONAL) {
                this.state = 675;
                localctx.right_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            }

            break;
        case SiddhiQLParser.UNIDIRECTIONAL:
            this.state = 678;
            localctx.left_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 679;
            this.join();
            this.state = 680;
            localctx.right_source = this.join_source();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 686;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ON) {
            this.state = 684;
            this.match(SiddhiQLParser.ON);
            this.state = 685;
            this.expression();
        }

        this.state = 691;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 688;
            this.within_time_range();
            this.state = 689;
            this.per();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_source;
    return this;
}

Join_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_sourceContext.prototype.constructor = Join_sourceContext;

Join_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Join_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Join_sourceContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Join_sourceContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Join_sourceContext.prototype.alias = function() {
    return this.getTypedRuleContext(AliasContext,0);
};

Join_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_source(this);
	}
};

Join_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_source(this);
	}
};




SiddhiQLParser.Join_sourceContext = Join_sourceContext;

SiddhiQLParser.prototype.join_source = function() {

    var localctx = new Join_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, SiddhiQLParser.RULE_join_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 693;
        this.source();
        this.state = 695;
        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);
        if(la_===1) {
            this.state = 694;
            this.basic_source_stream_handlers();

        }
        this.state = 698;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 697;
            this.window();
        }

        this.state = 702;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 700;
            this.match(SiddhiQLParser.AS);
            this.state = 701;
            this.alias();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_stream;
    return this;
}

Pattern_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_streamContext.prototype.constructor = Pattern_streamContext;

Pattern_streamContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.absent_pattern_source_chain = function() {
    return this.getTypedRuleContext(Absent_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_stream(this);
	}
};

Pattern_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_stream(this);
	}
};




SiddhiQLParser.Pattern_streamContext = Pattern_streamContext;

SiddhiQLParser.prototype.pattern_stream = function() {

    var localctx = new Pattern_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, SiddhiQLParser.RULE_pattern_stream);
    try {
        this.state = 706;
        var la_ = this._interp.adaptivePredict(this._input,63,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 704;
            this.every_pattern_source_chain(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 705;
            this.absent_pattern_source_chain();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_pattern_source_chain;
    return this;
}

Every_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_pattern_source_chainContext.prototype.constructor = Every_pattern_source_chainContext;

Every_pattern_source_chainContext.prototype.every_pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Every_pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Every_pattern_source_chainContext,i);
    }
};

Every_pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Every_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source_chain = function() {
    return this.getTypedRuleContext(Pattern_source_chainContext,0);
};

Every_pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Every_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_pattern_source_chain(this);
	}
};

Every_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_pattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.every_pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Every_pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 86;
    this.enterRecursionRule(localctx, 86, SiddhiQLParser.RULE_every_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 728;
        var la_ = this._interp.adaptivePredict(this._input,67,this._ctx);
        switch(la_) {
        case 1:
            this.state = 709;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 710;
            this.every_pattern_source_chain(0);
            this.state = 711;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 713;
            var la_ = this._interp.adaptivePredict(this._input,64,this._ctx);
            if(la_===1) {
                this.state = 712;
                this.within_time();

            }
            break;

        case 2:
            this.state = 715;
            this.match(SiddhiQLParser.EVERY);
            this.state = 716;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 717;
            this.pattern_source_chain(0);
            this.state = 718;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 720;
            var la_ = this._interp.adaptivePredict(this._input,65,this._ctx);
            if(la_===1) {
                this.state = 719;
                this.within_time();

            }
            break;

        case 3:
            this.state = 722;
            this.pattern_source_chain(0);
            break;

        case 4:
            this.state = 723;
            this.match(SiddhiQLParser.EVERY);
            this.state = 724;
            this.pattern_source();
            this.state = 726;
            var la_ = this._interp.adaptivePredict(this._input,66,this._ctx);
            if(la_===1) {
                this.state = 725;
                this.within_time();

            }
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 735;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,68,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Every_pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_every_pattern_source_chain);
                this.state = 730;
                if (!( this.precpred(this._ctx, 3))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                }
                this.state = 731;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 732;
                this.every_pattern_source_chain(4); 
            }
            this.state = 737;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,68,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source_chain;
    return this;
}

Pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_source_chainContext.prototype.constructor = Pattern_source_chainContext;

Pattern_source_chainContext.prototype.pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Pattern_source_chainContext,i);
    }
};

Pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source_chain(this);
	}
};

Pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source_chain(this);
	}
};



SiddhiQLParser.prototype.pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 88;
    this.enterRecursionRule(localctx, 88, SiddhiQLParser.RULE_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 749;
        var la_ = this._interp.adaptivePredict(this._input,71,this._ctx);
        switch(la_) {
        case 1:
            this.state = 739;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 740;
            this.pattern_source_chain(0);
            this.state = 741;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 743;
            var la_ = this._interp.adaptivePredict(this._input,69,this._ctx);
            if(la_===1) {
                this.state = 742;
                this.within_time();

            }
            break;

        case 2:
            this.state = 745;
            this.pattern_source();
            this.state = 747;
            var la_ = this._interp.adaptivePredict(this._input,70,this._ctx);
            if(la_===1) {
                this.state = 746;
                this.within_time();

            }
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 756;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,72,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_pattern_source_chain);
                this.state = 751;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 752;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 753;
                this.pattern_source_chain(3); 
            }
            this.state = 758;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,72,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Absent_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_absent_pattern_source_chain;
    return this;
}

Absent_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Absent_pattern_source_chainContext.prototype.constructor = Absent_pattern_source_chainContext;

Absent_pattern_source_chainContext.prototype.absent_pattern_source_chain = function() {
    return this.getTypedRuleContext(Absent_pattern_source_chainContext,0);
};

Absent_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Absent_pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Absent_pattern_source_chainContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.left_absent_pattern_source = function() {
    return this.getTypedRuleContext(Left_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.right_absent_pattern_source = function() {
    return this.getTypedRuleContext(Right_absent_pattern_sourceContext,0);
};

Absent_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAbsent_pattern_source_chain(this);
	}
};

Absent_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAbsent_pattern_source_chain(this);
	}
};




SiddhiQLParser.Absent_pattern_source_chainContext = Absent_pattern_source_chainContext;

SiddhiQLParser.prototype.absent_pattern_source_chain = function() {

    var localctx = new Absent_pattern_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, SiddhiQLParser.RULE_absent_pattern_source_chain);
    var _la = 0; // Token type
    try {
        this.state = 771;
        var la_ = this._interp.adaptivePredict(this._input,75,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 760;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 759;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 762;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 763;
            this.absent_pattern_source_chain();
            this.state = 764;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 766;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 765;
                this.within_time();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 768;
            this.every_absent_pattern_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 769;
            this.left_absent_pattern_source(0);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 770;
            this.right_absent_pattern_source(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Left_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_left_absent_pattern_source;
    return this;
}

Left_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Left_absent_pattern_sourceContext.prototype.constructor = Left_absent_pattern_sourceContext;

Left_absent_pattern_sourceContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Left_absent_pattern_sourceContext.prototype.left_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Left_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Left_absent_pattern_sourceContext,i);
    }
};

Left_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Left_absent_pattern_sourceContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Left_absent_pattern_sourceContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Left_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLeft_absent_pattern_source(this);
	}
};

Left_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLeft_absent_pattern_source(this);
	}
};



SiddhiQLParser.prototype.left_absent_pattern_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Left_absent_pattern_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 92;
    this.enterRecursionRule(localctx, 92, SiddhiQLParser.RULE_left_absent_pattern_source, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 791;
        var la_ = this._interp.adaptivePredict(this._input,78,this._ctx);
        switch(la_) {
        case 1:
            this.state = 774;
            this.every_pattern_source_chain(0);
            this.state = 775;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 776;
            this.left_absent_pattern_source(1);
            break;

        case 2:
            this.state = 779;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 778;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 781;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 782;
            this.left_absent_pattern_source(0);
            this.state = 783;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 785;
            var la_ = this._interp.adaptivePredict(this._input,77,this._ctx);
            if(la_===1) {
                this.state = 784;
                this.within_time();

            }
            break;

        case 3:
            this.state = 787;
            this.every_absent_pattern_source();
            this.state = 788;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 789;
            this.every_pattern_source_chain(0);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 801;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,80,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 799;
                var la_ = this._interp.adaptivePredict(this._input,79,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Left_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_pattern_source);
                    this.state = 793;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 794;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 795;
                    this.left_absent_pattern_source(4);
                    break;

                case 2:
                    localctx = new Left_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_pattern_source);
                    this.state = 796;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 797;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 798;
                    this.every_absent_pattern_source();
                    break;

                } 
            }
            this.state = 803;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,80,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Right_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_right_absent_pattern_source;
    return this;
}

Right_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Right_absent_pattern_sourceContext.prototype.constructor = Right_absent_pattern_sourceContext;

Right_absent_pattern_sourceContext.prototype.every_absent_pattern_source = function() {
    return this.getTypedRuleContext(Every_absent_pattern_sourceContext,0);
};

Right_absent_pattern_sourceContext.prototype.right_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Right_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Right_absent_pattern_sourceContext,i);
    }
};

Right_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Right_absent_pattern_sourceContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Right_absent_pattern_sourceContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Right_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterRight_absent_pattern_source(this);
	}
};

Right_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitRight_absent_pattern_source(this);
	}
};



SiddhiQLParser.prototype.right_absent_pattern_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Right_absent_pattern_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 94;
    this.enterRecursionRule(localctx, 94, SiddhiQLParser.RULE_right_absent_pattern_source, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 822;
        var la_ = this._interp.adaptivePredict(this._input,83,this._ctx);
        switch(la_) {
        case 1:
            this.state = 805;
            this.every_absent_pattern_source();
            this.state = 806;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 807;
            this.right_absent_pattern_source(2);
            break;

        case 2:
            this.state = 810;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.EVERY) {
                this.state = 809;
                this.match(SiddhiQLParser.EVERY);
            }

            this.state = 812;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 813;
            this.right_absent_pattern_source(0);
            this.state = 814;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 816;
            var la_ = this._interp.adaptivePredict(this._input,82,this._ctx);
            if(la_===1) {
                this.state = 815;
                this.within_time();

            }
            break;

        case 3:
            this.state = 818;
            this.every_pattern_source_chain(0);
            this.state = 819;
            this.match(SiddhiQLParser.FOLLOWED_BY);
            this.state = 820;
            this.every_absent_pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 832;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,85,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 830;
                var la_ = this._interp.adaptivePredict(this._input,84,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Right_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_pattern_source);
                    this.state = 824;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 825;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 826;
                    this.right_absent_pattern_source(4);
                    break;

                case 2:
                    localctx = new Right_absent_pattern_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_pattern_source);
                    this.state = 827;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 828;
                    this.match(SiddhiQLParser.FOLLOWED_BY);
                    this.state = 829;
                    this.every_pattern_source_chain(0);
                    break;

                } 
            }
            this.state = 834;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,85,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source;
    return this;
}

Pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_sourceContext.prototype.constructor = Pattern_sourceContext;

Pattern_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.pattern_collection_stateful_source = function() {
    return this.getTypedRuleContext(Pattern_collection_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source(this);
	}
};

Pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source(this);
	}
};




SiddhiQLParser.Pattern_sourceContext = Pattern_sourceContext;

SiddhiQLParser.prototype.pattern_source = function() {

    var localctx = new Pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, SiddhiQLParser.RULE_pattern_source);
    try {
        this.state = 839;
        var la_ = this._interp.adaptivePredict(this._input,86,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 835;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 836;
            this.pattern_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 837;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 838;
            this.logical_absent_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_stateful_source;
    return this;
}

Logical_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_stateful_sourceContext.prototype.constructor = Logical_stateful_sourceContext;

Logical_stateful_sourceContext.prototype.standard_stateful_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Standard_stateful_sourceContext);
    } else {
        return this.getTypedRuleContext(Standard_stateful_sourceContext,i);
    }
};

Logical_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_stateful_source(this);
	}
};

Logical_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_stateful_source(this);
	}
};




SiddhiQLParser.Logical_stateful_sourceContext = Logical_stateful_sourceContext;

SiddhiQLParser.prototype.logical_stateful_source = function() {

    var localctx = new Logical_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, SiddhiQLParser.RULE_logical_stateful_source);
    try {
        this.state = 849;
        var la_ = this._interp.adaptivePredict(this._input,87,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 841;
            this.standard_stateful_source();
            this.state = 842;
            this.match(SiddhiQLParser.AND);
            this.state = 843;
            this.standard_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 845;
            this.standard_stateful_source();
            this.state = 846;
            this.match(SiddhiQLParser.OR);
            this.state = 847;
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_absent_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_absent_stateful_source;
    return this;
}

Logical_absent_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_absent_stateful_sourceContext.prototype.constructor = Logical_absent_stateful_sourceContext;

Logical_absent_stateful_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_absent_stateful_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Logical_absent_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Logical_absent_stateful_sourceContext.prototype.basic_absent_pattern_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_absent_pattern_sourceContext);
    } else {
        return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,i);
    }
};

Logical_absent_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_absent_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_absent_stateful_source(this);
	}
};

Logical_absent_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_absent_stateful_source(this);
	}
};




SiddhiQLParser.Logical_absent_stateful_sourceContext = Logical_absent_stateful_sourceContext;

SiddhiQLParser.prototype.logical_absent_stateful_source = function() {

    var localctx = new Logical_absent_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, SiddhiQLParser.RULE_logical_absent_stateful_source);
    try {
        this.state = 889;
        var la_ = this._interp.adaptivePredict(this._input,88,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 851;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 852;
            this.logical_absent_stateful_source();
            this.state = 853;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 855;
            this.standard_stateful_source();
            this.state = 856;
            this.match(SiddhiQLParser.AND);
            this.state = 857;
            this.match(SiddhiQLParser.NOT);
            this.state = 858;
            this.basic_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 860;
            this.match(SiddhiQLParser.NOT);
            this.state = 861;
            this.basic_source();
            this.state = 862;
            this.match(SiddhiQLParser.AND);
            this.state = 863;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 865;
            this.standard_stateful_source();
            this.state = 866;
            this.match(SiddhiQLParser.AND);
            this.state = 867;
            this.basic_absent_pattern_source();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 869;
            this.basic_absent_pattern_source();
            this.state = 870;
            this.match(SiddhiQLParser.AND);
            this.state = 871;
            this.standard_stateful_source();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 873;
            this.basic_absent_pattern_source();
            this.state = 874;
            this.match(SiddhiQLParser.AND);
            this.state = 875;
            this.basic_absent_pattern_source();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 877;
            this.standard_stateful_source();
            this.state = 878;
            this.match(SiddhiQLParser.OR);
            this.state = 879;
            this.basic_absent_pattern_source();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 881;
            this.basic_absent_pattern_source();
            this.state = 882;
            this.match(SiddhiQLParser.OR);
            this.state = 883;
            this.standard_stateful_source();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 885;
            this.basic_absent_pattern_source();
            this.state = 886;
            this.match(SiddhiQLParser.OR);
            this.state = 887;
            this.basic_absent_pattern_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_absent_pattern_source;
    return this;
}

Every_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_absent_pattern_sourceContext.prototype.constructor = Every_absent_pattern_sourceContext;

Every_absent_pattern_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Every_absent_pattern_sourceContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_absent_pattern_source(this);
	}
};

Every_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_absent_pattern_source(this);
	}
};




SiddhiQLParser.Every_absent_pattern_sourceContext = Every_absent_pattern_sourceContext;

SiddhiQLParser.prototype.every_absent_pattern_source = function() {

    var localctx = new Every_absent_pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, SiddhiQLParser.RULE_every_absent_pattern_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 892;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.EVERY) {
            this.state = 891;
            this.match(SiddhiQLParser.EVERY);
        }

        this.state = 894;
        this.basic_absent_pattern_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_absent_pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_absent_pattern_source;
    return this;
}

Basic_absent_pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_absent_pattern_sourceContext.prototype.constructor = Basic_absent_pattern_sourceContext;

Basic_absent_pattern_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Basic_absent_pattern_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Basic_absent_pattern_sourceContext.prototype.for_time = function() {
    return this.getTypedRuleContext(For_timeContext,0);
};

Basic_absent_pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_absent_pattern_source(this);
	}
};

Basic_absent_pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_absent_pattern_source(this);
	}
};




SiddhiQLParser.Basic_absent_pattern_sourceContext = Basic_absent_pattern_sourceContext;

SiddhiQLParser.prototype.basic_absent_pattern_source = function() {

    var localctx = new Basic_absent_pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, SiddhiQLParser.RULE_basic_absent_pattern_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 896;
        this.match(SiddhiQLParser.NOT);
        this.state = 897;
        this.basic_source();
        this.state = 898;
        this.for_time();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_collection_stateful_source;
    return this;
}

Pattern_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_collection_stateful_sourceContext.prototype.constructor = Pattern_collection_stateful_sourceContext;

Pattern_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_collection_stateful_source(this);
	}
};

Pattern_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_collection_stateful_source(this);
	}
};




SiddhiQLParser.Pattern_collection_stateful_sourceContext = Pattern_collection_stateful_sourceContext;

SiddhiQLParser.prototype.pattern_collection_stateful_source = function() {

    var localctx = new Pattern_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, SiddhiQLParser.RULE_pattern_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 900;
        this.standard_stateful_source();
        this.state = 901;
        this.match(SiddhiQLParser.LT);
        this.state = 902;
        this.collect();
        this.state = 903;
        this.match(SiddhiQLParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stateful_source;
    return this;
}

Standard_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_stateful_sourceContext.prototype.constructor = Standard_stateful_sourceContext;

Standard_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Standard_stateful_sourceContext.prototype.event = function() {
    return this.getTypedRuleContext(EventContext,0);
};

Standard_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stateful_source(this);
	}
};

Standard_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stateful_source(this);
	}
};




SiddhiQLParser.Standard_stateful_sourceContext = Standard_stateful_sourceContext;

SiddhiQLParser.prototype.standard_stateful_source = function() {

    var localctx = new Standard_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, SiddhiQLParser.RULE_standard_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 908;
        var la_ = this._interp.adaptivePredict(this._input,90,this._ctx);
        if(la_===1) {
            this.state = 905;
            this.event();
            this.state = 906;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 910;
        this.basic_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source;
    return this;
}

Basic_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_sourceContext.prototype.constructor = Basic_sourceContext;

Basic_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Basic_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Basic_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source(this);
	}
};

Basic_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source(this);
	}
};




SiddhiQLParser.Basic_sourceContext = Basic_sourceContext;

SiddhiQLParser.prototype.basic_source = function() {

    var localctx = new Basic_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, SiddhiQLParser.RULE_basic_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 912;
        this.source();
        this.state = 914;
        var la_ = this._interp.adaptivePredict(this._input,91,this._ctx);
        if(la_===1) {
            this.state = 913;
            this.basic_source_stream_handlers();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handlers;
    return this;
}

Basic_source_stream_handlersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlersContext.prototype.constructor = Basic_source_stream_handlersContext;

Basic_source_stream_handlersContext.prototype.basic_source_stream_handler = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlerContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlerContext,i);
    }
};

Basic_source_stream_handlersContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handlers(this);
	}
};

Basic_source_stream_handlersContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handlers(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlersContext = Basic_source_stream_handlersContext;

SiddhiQLParser.prototype.basic_source_stream_handlers = function() {

    var localctx = new Basic_source_stream_handlersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, SiddhiQLParser.RULE_basic_source_stream_handlers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 917; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 916;
        		this.basic_source_stream_handler();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 919; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,92, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handler;
    return this;
}

Basic_source_stream_handlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlerContext.prototype.constructor = Basic_source_stream_handlerContext;

Basic_source_stream_handlerContext.prototype.filter = function() {
    return this.getTypedRuleContext(FilterContext,0);
};

Basic_source_stream_handlerContext.prototype.stream_function = function() {
    return this.getTypedRuleContext(Stream_functionContext,0);
};

Basic_source_stream_handlerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handler(this);
	}
};

Basic_source_stream_handlerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handler(this);
	}
};




SiddhiQLParser.Basic_source_stream_handlerContext = Basic_source_stream_handlerContext;

SiddhiQLParser.prototype.basic_source_stream_handler = function() {

    var localctx = new Basic_source_stream_handlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, SiddhiQLParser.RULE_basic_source_stream_handler);
    try {
        this.state = 923;
        var la_ = this._interp.adaptivePredict(this._input,93,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 921;
            this.filter();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 922;
            this.stream_function();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_stream;
    return this;
}

Sequence_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_streamContext.prototype.constructor = Sequence_streamContext;

Sequence_streamContext.prototype.every_sequence_source_chain = function() {
    return this.getTypedRuleContext(Every_sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.every_absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Every_absent_sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_stream(this);
	}
};

Sequence_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_stream(this);
	}
};




SiddhiQLParser.Sequence_streamContext = Sequence_streamContext;

SiddhiQLParser.prototype.sequence_stream = function() {

    var localctx = new Sequence_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, SiddhiQLParser.RULE_sequence_stream);
    try {
        this.state = 927;
        var la_ = this._interp.adaptivePredict(this._input,94,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 925;
            this.every_sequence_source_chain();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 926;
            this.every_absent_sequence_source_chain();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_sequence_source_chain;
    return this;
}

Every_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_sequence_source_chainContext.prototype.constructor = Every_sequence_source_chainContext;

Every_sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Every_sequence_source_chainContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Every_sequence_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Every_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_sequence_source_chain(this);
	}
};

Every_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_sequence_source_chain(this);
	}
};




SiddhiQLParser.Every_sequence_source_chainContext = Every_sequence_source_chainContext;

SiddhiQLParser.prototype.every_sequence_source_chain = function() {

    var localctx = new Every_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, SiddhiQLParser.RULE_every_sequence_source_chain);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 930;
        var la_ = this._interp.adaptivePredict(this._input,95,this._ctx);
        if(la_===1) {
            this.state = 929;
            this.match(SiddhiQLParser.EVERY);

        }
        this.state = 932;
        this.sequence_source();
        this.state = 934;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 933;
            this.within_time();
        }

        this.state = 936;
        this.match(SiddhiQLParser.COMMA);
        this.state = 937;
        this.sequence_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_absent_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_absent_sequence_source_chain;
    return this;
}

Every_absent_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_absent_sequence_source_chainContext.prototype.constructor = Every_absent_sequence_source_chainContext;

Every_absent_sequence_source_chainContext.prototype.absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Absent_sequence_source_chainContext,0);
};

Every_absent_sequence_source_chainContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Every_absent_sequence_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_absent_sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Every_absent_sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Every_absent_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_absent_sequence_source_chain(this);
	}
};

Every_absent_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_absent_sequence_source_chain(this);
	}
};




SiddhiQLParser.Every_absent_sequence_source_chainContext = Every_absent_sequence_source_chainContext;

SiddhiQLParser.prototype.every_absent_sequence_source_chain = function() {

    var localctx = new Every_absent_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, SiddhiQLParser.RULE_every_absent_sequence_source_chain);
    var _la = 0; // Token type
    try {
        this.state = 959;
        var la_ = this._interp.adaptivePredict(this._input,101,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 940;
            var la_ = this._interp.adaptivePredict(this._input,97,this._ctx);
            if(la_===1) {
                this.state = 939;
                this.match(SiddhiQLParser.EVERY);

            }
            this.state = 942;
            this.absent_sequence_source_chain();
            this.state = 944;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 943;
                this.within_time();
            }

            this.state = 946;
            this.match(SiddhiQLParser.COMMA);
            this.state = 947;
            this.sequence_source_chain(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 950;
            var la_ = this._interp.adaptivePredict(this._input,99,this._ctx);
            if(la_===1) {
                this.state = 949;
                this.match(SiddhiQLParser.EVERY);

            }
            this.state = 952;
            this.sequence_source();
            this.state = 954;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 953;
                this.within_time();
            }

            this.state = 956;
            this.match(SiddhiQLParser.COMMA);
            this.state = 957;
            this.absent_sequence_source_chain();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Absent_sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_absent_sequence_source_chain;
    return this;
}

Absent_sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Absent_sequence_source_chainContext.prototype.constructor = Absent_sequence_source_chainContext;

Absent_sequence_source_chainContext.prototype.absent_sequence_source_chain = function() {
    return this.getTypedRuleContext(Absent_sequence_source_chainContext,0);
};

Absent_sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Absent_sequence_source_chainContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.left_absent_sequence_source = function() {
    return this.getTypedRuleContext(Left_absent_sequence_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.right_absent_sequence_source = function() {
    return this.getTypedRuleContext(Right_absent_sequence_sourceContext,0);
};

Absent_sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAbsent_sequence_source_chain(this);
	}
};

Absent_sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAbsent_sequence_source_chain(this);
	}
};




SiddhiQLParser.Absent_sequence_source_chainContext = Absent_sequence_source_chainContext;

SiddhiQLParser.prototype.absent_sequence_source_chain = function() {

    var localctx = new Absent_sequence_source_chainContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, SiddhiQLParser.RULE_absent_sequence_source_chain);
    try {
        this.state = 970;
        var la_ = this._interp.adaptivePredict(this._input,103,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 961;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 962;
            this.absent_sequence_source_chain();
            this.state = 963;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 965;
            var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);
            if(la_===1) {
                this.state = 964;
                this.within_time();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 967;
            this.basic_absent_pattern_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 968;
            this.left_absent_sequence_source(0);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 969;
            this.right_absent_sequence_source(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Left_absent_sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_left_absent_sequence_source;
    return this;
}

Left_absent_sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Left_absent_sequence_sourceContext.prototype.constructor = Left_absent_sequence_sourceContext;

Left_absent_sequence_sourceContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Left_absent_sequence_sourceContext.prototype.left_absent_sequence_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Left_absent_sequence_sourceContext);
    } else {
        return this.getTypedRuleContext(Left_absent_sequence_sourceContext,i);
    }
};

Left_absent_sequence_sourceContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Left_absent_sequence_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Left_absent_sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLeft_absent_sequence_source(this);
	}
};

Left_absent_sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLeft_absent_sequence_source(this);
	}
};



SiddhiQLParser.prototype.left_absent_sequence_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Left_absent_sequence_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 124;
    this.enterRecursionRule(localctx, 124, SiddhiQLParser.RULE_left_absent_sequence_source, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 987;
        var la_ = this._interp.adaptivePredict(this._input,105,this._ctx);
        switch(la_) {
        case 1:
            this.state = 973;
            this.sequence_source_chain(0);
            this.state = 974;
            this.match(SiddhiQLParser.COMMA);
            this.state = 975;
            this.left_absent_sequence_source(1);
            break;

        case 2:
            this.state = 977;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 978;
            this.left_absent_sequence_source(0);
            this.state = 979;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 981;
            var la_ = this._interp.adaptivePredict(this._input,104,this._ctx);
            if(la_===1) {
                this.state = 980;
                this.within_time();

            }
            break;

        case 3:
            this.state = 983;
            this.basic_absent_pattern_source();
            this.state = 984;
            this.match(SiddhiQLParser.COMMA);
            this.state = 985;
            this.sequence_source_chain(0);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 997;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,107,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 995;
                var la_ = this._interp.adaptivePredict(this._input,106,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Left_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_sequence_source);
                    this.state = 989;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 990;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 991;
                    this.left_absent_sequence_source(4);
                    break;

                case 2:
                    localctx = new Left_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_left_absent_sequence_source);
                    this.state = 992;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 993;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 994;
                    this.basic_absent_pattern_source();
                    break;

                } 
            }
            this.state = 999;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,107,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Right_absent_sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_right_absent_sequence_source;
    return this;
}

Right_absent_sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Right_absent_sequence_sourceContext.prototype.constructor = Right_absent_sequence_sourceContext;

Right_absent_sequence_sourceContext.prototype.basic_absent_pattern_source = function() {
    return this.getTypedRuleContext(Basic_absent_pattern_sourceContext,0);
};

Right_absent_sequence_sourceContext.prototype.right_absent_sequence_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Right_absent_sequence_sourceContext);
    } else {
        return this.getTypedRuleContext(Right_absent_sequence_sourceContext,i);
    }
};

Right_absent_sequence_sourceContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Right_absent_sequence_sourceContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Right_absent_sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterRight_absent_sequence_source(this);
	}
};

Right_absent_sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitRight_absent_sequence_source(this);
	}
};



SiddhiQLParser.prototype.right_absent_sequence_source = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Right_absent_sequence_sourceContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 126;
    this.enterRecursionRule(localctx, 126, SiddhiQLParser.RULE_right_absent_sequence_source, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1015;
        var la_ = this._interp.adaptivePredict(this._input,109,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1001;
            this.basic_absent_pattern_source();
            this.state = 1002;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1003;
            this.right_absent_sequence_source(2);
            break;

        case 2:
            this.state = 1005;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1006;
            this.right_absent_sequence_source(0);
            this.state = 1007;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 1009;
            var la_ = this._interp.adaptivePredict(this._input,108,this._ctx);
            if(la_===1) {
                this.state = 1008;
                this.within_time();

            }
            break;

        case 3:
            this.state = 1011;
            this.sequence_source_chain(0);
            this.state = 1012;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1013;
            this.basic_absent_pattern_source();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1025;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,111,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1023;
                var la_ = this._interp.adaptivePredict(this._input,110,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Right_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_sequence_source);
                    this.state = 1017;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1018;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 1019;
                    this.right_absent_sequence_source(4);
                    break;

                case 2:
                    localctx = new Right_absent_sequence_sourceContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_right_absent_sequence_source);
                    this.state = 1020;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1021;
                    this.match(SiddhiQLParser.COMMA);
                    this.state = 1022;
                    this.sequence_source_chain(0);
                    break;

                } 
            }
            this.state = 1027;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,111,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source_chain;
    return this;
}

Sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_source_chainContext.prototype.constructor = Sequence_source_chainContext;

Sequence_source_chainContext.prototype.sequence_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Sequence_source_chainContext);
    } else {
        return this.getTypedRuleContext(Sequence_source_chainContext,i);
    }
};

Sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source_chain(this);
	}
};

Sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source_chain(this);
	}
};



SiddhiQLParser.prototype.sequence_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Sequence_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 128;
    this.enterRecursionRule(localctx, 128, SiddhiQLParser.RULE_sequence_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1039;
        var la_ = this._interp.adaptivePredict(this._input,114,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1029;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1030;
            this.sequence_source_chain(0);
            this.state = 1031;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 1033;
            var la_ = this._interp.adaptivePredict(this._input,112,this._ctx);
            if(la_===1) {
                this.state = 1032;
                this.within_time();

            }
            break;

        case 2:
            this.state = 1035;
            this.sequence_source();
            this.state = 1037;
            var la_ = this._interp.adaptivePredict(this._input,113,this._ctx);
            if(la_===1) {
                this.state = 1036;
                this.within_time();

            }
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1046;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,115,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Sequence_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_sequence_source_chain);
                this.state = 1041;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 1042;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1043;
                this.sequence_source_chain(3); 
            }
            this.state = 1048;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,115,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source;
    return this;
}

Sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_sourceContext.prototype.constructor = Sequence_sourceContext;

Sequence_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.sequence_collection_stateful_source = function() {
    return this.getTypedRuleContext(Sequence_collection_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.logical_absent_stateful_source = function() {
    return this.getTypedRuleContext(Logical_absent_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source(this);
	}
};

Sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source(this);
	}
};




SiddhiQLParser.Sequence_sourceContext = Sequence_sourceContext;

SiddhiQLParser.prototype.sequence_source = function() {

    var localctx = new Sequence_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, SiddhiQLParser.RULE_sequence_source);
    try {
        this.state = 1053;
        var la_ = this._interp.adaptivePredict(this._input,116,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1049;
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1050;
            this.sequence_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1051;
            this.standard_stateful_source();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1052;
            this.logical_absent_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_collection_stateful_source;
    this.zero_or_more = null; // Token
    this.zero_or_one = null; // Token
    this.one_or_more = null; // Token
    return this;
}

Sequence_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_collection_stateful_sourceContext.prototype.constructor = Sequence_collection_stateful_sourceContext;

Sequence_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_collection_stateful_source(this);
	}
};

Sequence_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_collection_stateful_source(this);
	}
};




SiddhiQLParser.Sequence_collection_stateful_sourceContext = Sequence_collection_stateful_sourceContext;

SiddhiQLParser.prototype.sequence_collection_stateful_source = function() {

    var localctx = new Sequence_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, SiddhiQLParser.RULE_sequence_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1055;
        this.standard_stateful_source();
        this.state = 1063;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LT:
            this.state = 1056;
            this.match(SiddhiQLParser.LT);
            this.state = 1057;
            this.collect();
            this.state = 1058;
            this.match(SiddhiQLParser.GT);
            break;
        case SiddhiQLParser.STAR:
            this.state = 1060;
            localctx.zero_or_more = this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.QUESTION:
            this.state = 1061;
            localctx.zero_or_one = this.match(SiddhiQLParser.QUESTION);
            break;
        case SiddhiQLParser.PLUS:
            this.state = 1062;
            localctx.one_or_more = this.match(SiddhiQLParser.PLUS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Anonymous_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_anonymous_stream;
    return this;
}

Anonymous_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Anonymous_streamContext.prototype.constructor = Anonymous_streamContext;

Anonymous_streamContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Anonymous_streamContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Anonymous_streamContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

Anonymous_streamContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Anonymous_streamContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Anonymous_streamContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

Anonymous_streamContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Anonymous_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnonymous_stream(this);
	}
};

Anonymous_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnonymous_stream(this);
	}
};




SiddhiQLParser.Anonymous_streamContext = Anonymous_streamContext;

SiddhiQLParser.prototype.anonymous_stream = function() {

    var localctx = new Anonymous_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, SiddhiQLParser.RULE_anonymous_stream);
    var _la = 0; // Token type
    try {
        this.state = 1081;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.enterOuterAlt(localctx, 1);
            this.state = 1065;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1066;
            this.anonymous_stream();
            this.state = 1067;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;
        case SiddhiQLParser.FROM:
            this.enterOuterAlt(localctx, 2);
            this.state = 1069;
            this.match(SiddhiQLParser.FROM);
            this.state = 1070;
            this.query_input();
            this.state = 1072;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 1071;
                this.query_section();
            }

            this.state = 1075;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OUTPUT) {
                this.state = 1074;
                this.output_rate();
            }

            this.state = 1077;
            this.match(SiddhiQLParser.RETURN);
            this.state = 1079;
            _la = this._input.LA(1);
            if(((((_la - 52)) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (SiddhiQLParser.EVENTS - 52)) | (1 << (SiddhiQLParser.EXPIRED - 52)) | (1 << (SiddhiQLParser.CURRENT - 52)) | (1 << (SiddhiQLParser.ALL - 52)))) !== 0)) {
                this.state = 1078;
                this.output_event_type();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_filter;
    return this;
}

FilterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilterContext.prototype.constructor = FilterContext;

FilterContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

FilterContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFilter(this);
	}
};

FilterContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFilter(this);
	}
};




SiddhiQLParser.FilterContext = FilterContext;

SiddhiQLParser.prototype.filter = function() {

    var localctx = new FilterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, SiddhiQLParser.RULE_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1084;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 1083;
            this.match(SiddhiQLParser.HASH);
        }

        this.state = 1086;
        this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
        this.state = 1087;
        this.expression();
        this.state = 1088;
        this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_function;
    return this;
}

Stream_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_functionContext.prototype.constructor = Stream_functionContext;

Stream_functionContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Stream_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_function(this);
	}
};

Stream_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_function(this);
	}
};




SiddhiQLParser.Stream_functionContext = Stream_functionContext;

SiddhiQLParser.prototype.stream_function = function() {

    var localctx = new Stream_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, SiddhiQLParser.RULE_stream_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1090;
        this.match(SiddhiQLParser.HASH);
        this.state = 1091;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WindowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_window;
    return this;
}

WindowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WindowContext.prototype.constructor = WindowContext;

WindowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

WindowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

WindowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWindow(this);
	}
};

WindowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWindow(this);
	}
};




SiddhiQLParser.WindowContext = WindowContext;

SiddhiQLParser.prototype.window = function() {

    var localctx = new WindowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, SiddhiQLParser.RULE_window);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1093;
        this.match(SiddhiQLParser.HASH);
        this.state = 1094;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 1095;
        this.match(SiddhiQLParser.DOT);
        this.state = 1096;
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_by_query_selectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by_query_selection;
    return this;
}

Group_by_query_selectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_by_query_selectionContext.prototype.constructor = Group_by_query_selectionContext;

Group_by_query_selectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Group_by_query_selectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Group_by_query_selectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Group_by_query_selectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by_query_selection(this);
	}
};

Group_by_query_selectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by_query_selection(this);
	}
};




SiddhiQLParser.Group_by_query_selectionContext = Group_by_query_selectionContext;

SiddhiQLParser.prototype.group_by_query_selection = function() {

    var localctx = new Group_by_query_selectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, SiddhiQLParser.RULE_group_by_query_selection);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1098;
        this.match(SiddhiQLParser.SELECT);
        this.state = 1108;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 1099;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 1100;
            this.output_attribute();
            this.state = 1105;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1101;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1102;
                this.output_attribute();
                this.state = 1107;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1111;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 1110;
            this.group_by();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_sectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_section;
    return this;
}

Query_sectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_sectionContext.prototype.constructor = Query_sectionContext;

Query_sectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Query_sectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Query_sectionContext.prototype.having = function() {
    return this.getTypedRuleContext(HavingContext,0);
};

Query_sectionContext.prototype.order_by = function() {
    return this.getTypedRuleContext(Order_byContext,0);
};

Query_sectionContext.prototype.limit = function() {
    return this.getTypedRuleContext(LimitContext,0);
};

Query_sectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Query_sectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_section(this);
	}
};

Query_sectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_section(this);
	}
};




SiddhiQLParser.Query_sectionContext = Query_sectionContext;

SiddhiQLParser.prototype.query_section = function() {

    var localctx = new Query_sectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, SiddhiQLParser.RULE_query_section);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1113;
        this.match(SiddhiQLParser.SELECT);
        this.state = 1123;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 1114;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 1115;
            this.output_attribute();
            this.state = 1120;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1116;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1117;
                this.output_attribute();
                this.state = 1122;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 1126;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 1125;
            this.group_by();
        }

        this.state = 1129;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HAVING) {
            this.state = 1128;
            this.having();
        }

        this.state = 1132;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ORDER) {
            this.state = 1131;
            this.order_by();
        }

        this.state = 1135;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.LIMIT) {
            this.state = 1134;
            this.limit();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by;
    return this;
}

Group_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_byContext.prototype.constructor = Group_byContext;

Group_byContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

Group_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Group_byContext.prototype.attribute_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_referenceContext);
    } else {
        return this.getTypedRuleContext(Attribute_referenceContext,i);
    }
};

Group_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by(this);
	}
};

Group_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by(this);
	}
};




SiddhiQLParser.Group_byContext = Group_byContext;

SiddhiQLParser.prototype.group_by = function() {

    var localctx = new Group_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, SiddhiQLParser.RULE_group_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1137;
        this.match(SiddhiQLParser.GROUP);
        this.state = 1138;
        this.match(SiddhiQLParser.BY);
        this.state = 1139;
        this.attribute_reference();
        this.state = 1144;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1140;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1141;
            this.attribute_reference();
            this.state = 1146;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HavingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_having;
    return this;
}

HavingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HavingContext.prototype.constructor = HavingContext;

HavingContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

HavingContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

HavingContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHaving(this);
	}
};

HavingContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHaving(this);
	}
};




SiddhiQLParser.HavingContext = HavingContext;

SiddhiQLParser.prototype.having = function() {

    var localctx = new HavingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, SiddhiQLParser.RULE_having);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1147;
        this.match(SiddhiQLParser.HAVING);
        this.state = 1148;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Order_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order_by;
    return this;
}

Order_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Order_byContext.prototype.constructor = Order_byContext;

Order_byContext.prototype.ORDER = function() {
    return this.getToken(SiddhiQLParser.ORDER, 0);
};

Order_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Order_byContext.prototype.order_by_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Order_by_referenceContext);
    } else {
        return this.getTypedRuleContext(Order_by_referenceContext,i);
    }
};

Order_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder_by(this);
	}
};

Order_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder_by(this);
	}
};




SiddhiQLParser.Order_byContext = Order_byContext;

SiddhiQLParser.prototype.order_by = function() {

    var localctx = new Order_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, SiddhiQLParser.RULE_order_by);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1150;
        this.match(SiddhiQLParser.ORDER);
        this.state = 1151;
        this.match(SiddhiQLParser.BY);
        this.state = 1152;
        this.order_by_reference();
        this.state = 1157;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1153;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1154;
            this.order_by_reference();
            this.state = 1159;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Order_by_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order_by_reference;
    return this;
}

Order_by_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Order_by_referenceContext.prototype.constructor = Order_by_referenceContext;

Order_by_referenceContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Order_by_referenceContext.prototype.order = function() {
    return this.getTypedRuleContext(OrderContext,0);
};

Order_by_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder_by_reference(this);
	}
};

Order_by_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder_by_reference(this);
	}
};




SiddhiQLParser.Order_by_referenceContext = Order_by_referenceContext;

SiddhiQLParser.prototype.order_by_reference = function() {

    var localctx = new Order_by_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, SiddhiQLParser.RULE_order_by_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1160;
        this.attribute_reference();
        this.state = 1162;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.ASC || _la===SiddhiQLParser.DESC) {
            this.state = 1161;
            this.order();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OrderContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_order;
    return this;
}

OrderContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OrderContext.prototype.constructor = OrderContext;

OrderContext.prototype.ASC = function() {
    return this.getToken(SiddhiQLParser.ASC, 0);
};

OrderContext.prototype.DESC = function() {
    return this.getToken(SiddhiQLParser.DESC, 0);
};

OrderContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOrder(this);
	}
};

OrderContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOrder(this);
	}
};




SiddhiQLParser.OrderContext = OrderContext;

SiddhiQLParser.prototype.order = function() {

    var localctx = new OrderContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, SiddhiQLParser.RULE_order);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1164;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ASC || _la===SiddhiQLParser.DESC)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LimitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_limit;
    return this;
}

LimitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LimitContext.prototype.constructor = LimitContext;

LimitContext.prototype.LIMIT = function() {
    return this.getToken(SiddhiQLParser.LIMIT, 0);
};

LimitContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

LimitContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLimit(this);
	}
};

LimitContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLimit(this);
	}
};




SiddhiQLParser.LimitContext = LimitContext;

SiddhiQLParser.prototype.limit = function() {

    var localctx = new LimitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, SiddhiQLParser.RULE_limit);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1166;
        this.match(SiddhiQLParser.LIMIT);
        this.state = 1167;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_outputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_output;
    return this;
}

Query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_outputContext.prototype.constructor = Query_outputContext;

Query_outputContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Query_outputContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Query_outputContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Query_outputContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Query_outputContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Query_outputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Query_outputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Query_outputContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

Query_outputContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Query_outputContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Query_outputContext.prototype.set_clause = function() {
    return this.getTypedRuleContext(Set_clauseContext,0);
};

Query_outputContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Query_outputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_output(this);
	}
};

Query_outputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_output(this);
	}
};




SiddhiQLParser.Query_outputContext = Query_outputContext;

SiddhiQLParser.prototype.query_output = function() {

    var localctx = new Query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, SiddhiQLParser.RULE_query_output);
    var _la = 0; // Token type
    try {
        this.state = 1215;
        var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1169;
            this.match(SiddhiQLParser.INSERT);
            this.state = 1171;
            _la = this._input.LA(1);
            if(((((_la - 52)) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (SiddhiQLParser.EVENTS - 52)) | (1 << (SiddhiQLParser.EXPIRED - 52)) | (1 << (SiddhiQLParser.CURRENT - 52)) | (1 << (SiddhiQLParser.ALL - 52)))) !== 0)) {
                this.state = 1170;
                this.output_event_type();
            }

            this.state = 1173;
            this.match(SiddhiQLParser.INTO);
            this.state = 1174;
            this.target();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1175;
            this.match(SiddhiQLParser.DELETE);
            this.state = 1176;
            this.target();
            this.state = 1179;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1177;
                this.match(SiddhiQLParser.FOR);
                this.state = 1178;
                this.output_event_type();
            }

            this.state = 1181;
            this.match(SiddhiQLParser.ON);
            this.state = 1182;
            this.expression();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1184;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 1185;
            this.match(SiddhiQLParser.OR);
            this.state = 1186;
            this.match(SiddhiQLParser.INSERT);
            this.state = 1187;
            this.match(SiddhiQLParser.INTO);
            this.state = 1188;
            this.target();
            this.state = 1191;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1189;
                this.match(SiddhiQLParser.FOR);
                this.state = 1190;
                this.output_event_type();
            }

            this.state = 1194;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 1193;
                this.set_clause();
            }

            this.state = 1196;
            this.match(SiddhiQLParser.ON);
            this.state = 1197;
            this.expression();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1199;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 1200;
            this.target();
            this.state = 1203;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 1201;
                this.match(SiddhiQLParser.FOR);
                this.state = 1202;
                this.output_event_type();
            }

            this.state = 1206;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SET) {
                this.state = 1205;
                this.set_clause();
            }

            this.state = 1208;
            this.match(SiddhiQLParser.ON);
            this.state = 1209;
            this.expression();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1211;
            this.match(SiddhiQLParser.RETURN);
            this.state = 1213;
            _la = this._input.LA(1);
            if(((((_la - 52)) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (SiddhiQLParser.EVENTS - 52)) | (1 << (SiddhiQLParser.EXPIRED - 52)) | (1 << (SiddhiQLParser.CURRENT - 52)) | (1 << (SiddhiQLParser.ALL - 52)))) !== 0)) {
                this.state = 1212;
                this.output_event_type();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Set_clauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_set_clause;
    return this;
}

Set_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Set_clauseContext.prototype.constructor = Set_clauseContext;

Set_clauseContext.prototype.SET = function() {
    return this.getToken(SiddhiQLParser.SET, 0);
};

Set_clauseContext.prototype.set_assignment = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Set_assignmentContext);
    } else {
        return this.getTypedRuleContext(Set_assignmentContext,i);
    }
};

Set_clauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSet_clause(this);
	}
};

Set_clauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSet_clause(this);
	}
};




SiddhiQLParser.Set_clauseContext = Set_clauseContext;

SiddhiQLParser.prototype.set_clause = function() {

    var localctx = new Set_clauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, SiddhiQLParser.RULE_set_clause);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1217;
        this.match(SiddhiQLParser.SET);
        this.state = 1218;
        this.set_assignment();
        this.state = 1223;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 1219;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1220;
            this.set_assignment();
            this.state = 1225;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Set_assignmentContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_set_assignment;
    return this;
}

Set_assignmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Set_assignmentContext.prototype.constructor = Set_assignmentContext;

Set_assignmentContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Set_assignmentContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Set_assignmentContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSet_assignment(this);
	}
};

Set_assignmentContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSet_assignment(this);
	}
};




SiddhiQLParser.Set_assignmentContext = Set_assignmentContext;

SiddhiQLParser.prototype.set_assignment = function() {

    var localctx = new Set_assignmentContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, SiddhiQLParser.RULE_set_assignment);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1226;
        this.attribute_reference();
        this.state = 1227;
        this.match(SiddhiQLParser.ASSIGN);
        this.state = 1228;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_event_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_event_type;
    return this;
}

Output_event_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_event_typeContext.prototype.constructor = Output_event_typeContext;

Output_event_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_event_typeContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_event_typeContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

Output_event_typeContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

Output_event_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_event_type(this);
	}
};

Output_event_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_event_type(this);
	}
};




SiddhiQLParser.Output_event_typeContext = Output_event_typeContext;

SiddhiQLParser.prototype.output_event_type = function() {

    var localctx = new Output_event_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, SiddhiQLParser.RULE_output_event_type);
    var _la = 0; // Token type
    try {
        this.state = 1238;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ALL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1230;
            this.match(SiddhiQLParser.ALL);
            this.state = 1231;
            this.match(SiddhiQLParser.EVENTS);
            break;
        case SiddhiQLParser.EXPIRED:
            this.enterOuterAlt(localctx, 2);
            this.state = 1232;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 1233;
            this.match(SiddhiQLParser.EVENTS);
            break;
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.CURRENT:
            this.enterOuterAlt(localctx, 3);
            this.state = 1235;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.CURRENT) {
                this.state = 1234;
                this.match(SiddhiQLParser.CURRENT);
            }

            this.state = 1237;
            this.match(SiddhiQLParser.EVENTS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate;
    return this;
}

Output_rateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rateContext.prototype.constructor = Output_rateContext;

Output_rateContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Output_rateContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Output_rateContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Output_rateContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Output_rateContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_rateContext.prototype.output_rate_type = function() {
    return this.getTypedRuleContext(Output_rate_typeContext,0);
};

Output_rateContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

Output_rateContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate(this);
	}
};

Output_rateContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate(this);
	}
};




SiddhiQLParser.Output_rateContext = Output_rateContext;

SiddhiQLParser.prototype.output_rate = function() {

    var localctx = new Output_rateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, SiddhiQLParser.RULE_output_rate);
    var _la = 0; // Token type
    try {
        this.state = 1254;
        var la_ = this._interp.adaptivePredict(this._input,148,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1240;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 1242;
            _la = this._input.LA(1);
            if(((((_la - 75)) & ~0x1f) == 0 && ((1 << (_la - 75)) & ((1 << (SiddhiQLParser.LAST - 75)) | (1 << (SiddhiQLParser.ALL - 75)) | (1 << (SiddhiQLParser.FIRST - 75)))) !== 0)) {
                this.state = 1241;
                this.output_rate_type();
            }

            this.state = 1244;
            this.match(SiddhiQLParser.EVERY);
            this.state = 1248;
            var la_ = this._interp.adaptivePredict(this._input,147,this._ctx);
            switch(la_) {
            case 1:
                this.state = 1245;
                this.time_value();
                break;

            case 2:
                this.state = 1246;
                this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 1247;
                this.match(SiddhiQLParser.EVENTS);
                break;

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1250;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 1251;
            this.match(SiddhiQLParser.SNAPSHOT);
            this.state = 1252;
            this.match(SiddhiQLParser.EVERY);
            this.state = 1253;
            this.time_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rate_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate_type;
    return this;
}

Output_rate_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rate_typeContext.prototype.constructor = Output_rate_typeContext;

Output_rate_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_rate_typeContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Output_rate_typeContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

Output_rate_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate_type(this);
	}
};

Output_rate_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate_type(this);
	}
};




SiddhiQLParser.Output_rate_typeContext = Output_rate_typeContext;

SiddhiQLParser.prototype.output_rate_type = function() {

    var localctx = new Output_rate_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, SiddhiQLParser.RULE_output_rate_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1256;
        _la = this._input.LA(1);
        if(!(((((_la - 75)) & ~0x1f) == 0 && ((1 << (_la - 75)) & ((1 << (SiddhiQLParser.LAST - 75)) | (1 << (SiddhiQLParser.ALL - 75)) | (1 << (SiddhiQLParser.FIRST - 75)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function For_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_for_time;
    return this;
}

For_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
For_timeContext.prototype.constructor = For_timeContext;

For_timeContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

For_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

For_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFor_time(this);
	}
};

For_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFor_time(this);
	}
};




SiddhiQLParser.For_timeContext = For_timeContext;

SiddhiQLParser.prototype.for_time = function() {

    var localctx = new For_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, SiddhiQLParser.RULE_for_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1258;
        this.match(SiddhiQLParser.FOR);
        this.state = 1259;
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time;
    return this;
}

Within_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_timeContext.prototype.constructor = Within_timeContext;

Within_timeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Within_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time(this);
	}
};

Within_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time(this);
	}
};




SiddhiQLParser.Within_timeContext = Within_timeContext;

SiddhiQLParser.prototype.within_time = function() {

    var localctx = new Within_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, SiddhiQLParser.RULE_within_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1261;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 1262;
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_time_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time_range;
    this.start_pattern = null; // ExpressionContext
    this.end_pattern = null; // ExpressionContext
    return this;
}

Within_time_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_time_rangeContext.prototype.constructor = Within_time_rangeContext;

Within_time_rangeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_time_rangeContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Within_time_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time_range(this);
	}
};

Within_time_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time_range(this);
	}
};




SiddhiQLParser.Within_time_rangeContext = Within_time_rangeContext;

SiddhiQLParser.prototype.within_time_range = function() {

    var localctx = new Within_time_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, SiddhiQLParser.RULE_within_time_range);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1264;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 1265;
        localctx.start_pattern = this.expression();
        this.state = 1268;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.COMMA) {
            this.state = 1266;
            this.match(SiddhiQLParser.COMMA);
            this.state = 1267;
            localctx.end_pattern = this.expression();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_per;
    return this;
}

PerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PerContext.prototype.constructor = PerContext;

PerContext.prototype.PER = function() {
    return this.getToken(SiddhiQLParser.PER, 0);
};

PerContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

PerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPer(this);
	}
};

PerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPer(this);
	}
};




SiddhiQLParser.PerContext = PerContext;

SiddhiQLParser.prototype.per = function() {

    var localctx = new PerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, SiddhiQLParser.RULE_per);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1270;
        this.match(SiddhiQLParser.PER);
        this.state = 1271;
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_attributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_attribute;
    return this;
}

Output_attributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_attributeContext.prototype.constructor = Output_attributeContext;

Output_attributeContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Output_attributeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Output_attributeContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Output_attributeContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Output_attributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_attribute(this);
	}
};

Output_attributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_attribute(this);
	}
};




SiddhiQLParser.Output_attributeContext = Output_attributeContext;

SiddhiQLParser.prototype.output_attribute = function() {

    var localctx = new Output_attributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, SiddhiQLParser.RULE_output_attribute);
    try {
        this.state = 1278;
        var la_ = this._interp.adaptivePredict(this._input,150,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1273;
            this.attribute();
            this.state = 1274;
            this.match(SiddhiQLParser.AS);
            this.state = 1275;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1277;
            this.attribute_reference();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

AttributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute(this);
	}
};

AttributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute(this);
	}
};




SiddhiQLParser.AttributeContext = AttributeContext;

SiddhiQLParser.prototype.attribute = function() {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, SiddhiQLParser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1280;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExpression(this);
	}
};




SiddhiQLParser.ExpressionContext = ExpressionContext;

SiddhiQLParser.prototype.expression = function() {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, SiddhiQLParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1282;
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Math_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_math_operation;
    return this;
}

Math_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Math_operationContext.prototype.constructor = Math_operationContext;


 
Math_operationContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function Multiplication_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.multiply = null; // Token;
    this.devide = null; // Token;
    this.mod = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Multiplication_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Multiplication_math_operationContext.prototype.constructor = Multiplication_math_operationContext;

SiddhiQLParser.Multiplication_math_operationContext = Multiplication_math_operationContext;

Multiplication_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Multiplication_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMultiplication_math_operation(this);
	}
};

Multiplication_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMultiplication_math_operation(this);
	}
};


function Greaterthan_lessthan_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.gt_eq = null; // Token;
    this.lt_eq = null; // Token;
    this.gt = null; // Token;
    this.lt = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Greaterthan_lessthan_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Greaterthan_lessthan_math_operationContext.prototype.constructor = Greaterthan_lessthan_math_operationContext;

SiddhiQLParser.Greaterthan_lessthan_math_operationContext = Greaterthan_lessthan_math_operationContext;

Greaterthan_lessthan_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Greaterthan_lessthan_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGreaterthan_lessthan_math_operation(this);
	}
};

Greaterthan_lessthan_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGreaterthan_lessthan_math_operation(this);
	}
};


function Basic_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Basic_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Basic_math_operationContext.prototype.constructor = Basic_math_operationContext;

SiddhiQLParser.Basic_math_operationContext = Basic_math_operationContext;

Basic_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

Basic_math_operationContext.prototype.null_check = function() {
    return this.getTypedRuleContext(Null_checkContext,0);
};

Basic_math_operationContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Basic_math_operationContext.prototype.constant_value = function() {
    return this.getTypedRuleContext(Constant_valueContext,0);
};

Basic_math_operationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};
Basic_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_math_operation(this);
	}
};

Basic_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_math_operation(this);
	}
};


function In_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

In_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
In_math_operationContext.prototype.constructor = In_math_operationContext;

SiddhiQLParser.In_math_operationContext = In_math_operationContext;

In_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

In_math_operationContext.prototype.IN = function() {
    return this.getToken(SiddhiQLParser.IN, 0);
};

In_math_operationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};
In_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterIn_math_operation(this);
	}
};

In_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitIn_math_operation(this);
	}
};


function Addition_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.add = null; // Token;
    this.substract = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Addition_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Addition_math_operationContext.prototype.constructor = Addition_math_operationContext;

SiddhiQLParser.Addition_math_operationContext = Addition_math_operationContext;

Addition_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Addition_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAddition_math_operation(this);
	}
};

Addition_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAddition_math_operation(this);
	}
};


function And_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

And_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
And_math_operationContext.prototype.constructor = And_math_operationContext;

SiddhiQLParser.And_math_operationContext = And_math_operationContext;

And_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

And_math_operationContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};
And_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnd_math_operation(this);
	}
};

And_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnd_math_operation(this);
	}
};


function Or_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Or_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Or_math_operationContext.prototype.constructor = Or_math_operationContext;

SiddhiQLParser.Or_math_operationContext = Or_math_operationContext;

Or_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

Or_math_operationContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};
Or_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOr_math_operation(this);
	}
};

Or_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOr_math_operation(this);
	}
};


function Equality_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.eq = null; // Token;
    this.not_eq = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Equality_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Equality_math_operationContext.prototype.constructor = Equality_math_operationContext;

SiddhiQLParser.Equality_math_operationContext = Equality_math_operationContext;

Equality_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Equality_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEquality_math_operation(this);
	}
};

Equality_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEquality_math_operation(this);
	}
};


function Not_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Not_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Not_math_operationContext.prototype.constructor = Not_math_operationContext;

SiddhiQLParser.Not_math_operationContext = Not_math_operationContext;

Not_math_operationContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Not_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};
Not_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNot_math_operation(this);
	}
};

Not_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNot_math_operation(this);
	}
};



SiddhiQLParser.prototype.math_operation = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Math_operationContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 184;
    this.enterRecursionRule(localctx, 184, SiddhiQLParser.RULE_math_operation, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1295;
        var la_ = this._interp.adaptivePredict(this._input,151,this._ctx);
        switch(la_) {
        case 1:
            localctx = new Not_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;

            this.state = 1285;
            this.match(SiddhiQLParser.NOT);
            this.state = 1286;
            this.math_operation(11);
            break;

        case 2:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1287;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 1288;
            this.math_operation(0);
            this.state = 1289;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1291;
            this.null_check();
            break;

        case 4:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1292;
            this.function_operation();
            break;

        case 5:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1293;
            this.constant_value();
            break;

        case 6:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1294;
            this.attribute_reference();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1335;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,157,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1333;
                var la_ = this._interp.adaptivePredict(this._input,156,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Multiplication_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1297;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 1301;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.STAR:
                        this.state = 1298;
                        localctx.multiply = this.match(SiddhiQLParser.STAR);
                        break;
                    case SiddhiQLParser.DIV:
                        this.state = 1299;
                        localctx.devide = this.match(SiddhiQLParser.DIV);
                        break;
                    case SiddhiQLParser.MOD:
                        this.state = 1300;
                        localctx.mod = this.match(SiddhiQLParser.MOD);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1303;
                    this.math_operation(11);
                    break;

                case 2:
                    localctx = new Addition_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1304;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 1307;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.PLUS:
                        this.state = 1305;
                        localctx.add = this.match(SiddhiQLParser.PLUS);
                        break;
                    case SiddhiQLParser.MINUS:
                        this.state = 1306;
                        localctx.substract = this.match(SiddhiQLParser.MINUS);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1309;
                    this.math_operation(10);
                    break;

                case 3:
                    localctx = new Greaterthan_lessthan_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1310;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 1315;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.GT_EQ:
                        this.state = 1311;
                        localctx.gt_eq = this.match(SiddhiQLParser.GT_EQ);
                        break;
                    case SiddhiQLParser.LT_EQ:
                        this.state = 1312;
                        localctx.lt_eq = this.match(SiddhiQLParser.LT_EQ);
                        break;
                    case SiddhiQLParser.GT:
                        this.state = 1313;
                        localctx.gt = this.match(SiddhiQLParser.GT);
                        break;
                    case SiddhiQLParser.LT:
                        this.state = 1314;
                        localctx.lt = this.match(SiddhiQLParser.LT);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1317;
                    this.math_operation(9);
                    break;

                case 4:
                    localctx = new Equality_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1318;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 1321;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.EQ:
                        this.state = 1319;
                        localctx.eq = this.match(SiddhiQLParser.EQ);
                        break;
                    case SiddhiQLParser.NOT_EQ:
                        this.state = 1320;
                        localctx.not_eq = this.match(SiddhiQLParser.NOT_EQ);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 1323;
                    this.math_operation(8);
                    break;

                case 5:
                    localctx = new And_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1324;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 1325;
                    this.match(SiddhiQLParser.AND);
                    this.state = 1326;
                    this.math_operation(6);
                    break;

                case 6:
                    localctx = new Or_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1327;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 1328;
                    this.match(SiddhiQLParser.OR);
                    this.state = 1329;
                    this.math_operation(5);
                    break;

                case 7:
                    localctx = new In_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 1330;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 1331;
                    this.match(SiddhiQLParser.IN);
                    this.state = 1332;
                    this.name();
                    break;

                } 
            }
            this.state = 1337;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,157,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Function_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_operation;
    return this;
}

Function_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_operationContext.prototype.constructor = Function_operationContext;

Function_operationContext.prototype.function_id = function() {
    return this.getTypedRuleContext(Function_idContext,0);
};

Function_operationContext.prototype.function_namespace = function() {
    return this.getTypedRuleContext(Function_namespaceContext,0);
};

Function_operationContext.prototype.attribute_list = function() {
    return this.getTypedRuleContext(Attribute_listContext,0);
};

Function_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_operation(this);
	}
};

Function_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_operation(this);
	}
};




SiddhiQLParser.Function_operationContext = Function_operationContext;

SiddhiQLParser.prototype.function_operation = function() {

    var localctx = new Function_operationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, SiddhiQLParser.RULE_function_operation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1341;
        var la_ = this._interp.adaptivePredict(this._input,158,this._ctx);
        if(la_===1) {
            this.state = 1338;
            this.function_namespace();
            this.state = 1339;
            this.match(SiddhiQLParser.COL);

        }
        this.state = 1343;
        this.function_id();
        this.state = 1344;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 1346;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.INT_LITERAL) | (1 << SiddhiQLParser.LONG_LITERAL) | (1 << SiddhiQLParser.FLOAT_LITERAL) | (1 << SiddhiQLParser.DOUBLE_LITERAL) | (1 << SiddhiQLParser.OPEN_PAR) | (1 << SiddhiQLParser.STAR) | (1 << SiddhiQLParser.PLUS) | (1 << SiddhiQLParser.MINUS) | (1 << SiddhiQLParser.HASH) | (1 << SiddhiQLParser.STREAM) | (1 << SiddhiQLParser.DEFINE))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SiddhiQLParser.TABLE - 34)) | (1 << (SiddhiQLParser.FROM - 34)) | (1 << (SiddhiQLParser.PARTITION - 34)) | (1 << (SiddhiQLParser.WINDOW - 34)) | (1 << (SiddhiQLParser.SELECT - 34)) | (1 << (SiddhiQLParser.GROUP - 34)) | (1 << (SiddhiQLParser.BY - 34)) | (1 << (SiddhiQLParser.ORDER - 34)) | (1 << (SiddhiQLParser.LIMIT - 34)) | (1 << (SiddhiQLParser.ASC - 34)) | (1 << (SiddhiQLParser.DESC - 34)) | (1 << (SiddhiQLParser.HAVING - 34)) | (1 << (SiddhiQLParser.INSERT - 34)) | (1 << (SiddhiQLParser.DELETE - 34)) | (1 << (SiddhiQLParser.UPDATE - 34)) | (1 << (SiddhiQLParser.RETURN - 34)) | (1 << (SiddhiQLParser.EVENTS - 34)) | (1 << (SiddhiQLParser.INTO - 34)) | (1 << (SiddhiQLParser.OUTPUT - 34)) | (1 << (SiddhiQLParser.EXPIRED - 34)) | (1 << (SiddhiQLParser.CURRENT - 34)) | (1 << (SiddhiQLParser.SNAPSHOT - 34)) | (1 << (SiddhiQLParser.FOR - 34)) | (1 << (SiddhiQLParser.RAW - 34)) | (1 << (SiddhiQLParser.OF - 34)) | (1 << (SiddhiQLParser.AS - 34)) | (1 << (SiddhiQLParser.OR - 34)) | (1 << (SiddhiQLParser.AND - 34)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (SiddhiQLParser.ON - 66)) | (1 << (SiddhiQLParser.IS - 66)) | (1 << (SiddhiQLParser.NOT - 66)) | (1 << (SiddhiQLParser.WITHIN - 66)) | (1 << (SiddhiQLParser.WITH - 66)) | (1 << (SiddhiQLParser.BEGIN - 66)) | (1 << (SiddhiQLParser.END - 66)) | (1 << (SiddhiQLParser.NULL - 66)) | (1 << (SiddhiQLParser.EVERY - 66)) | (1 << (SiddhiQLParser.LAST - 66)) | (1 << (SiddhiQLParser.ALL - 66)) | (1 << (SiddhiQLParser.FIRST - 66)) | (1 << (SiddhiQLParser.JOIN - 66)) | (1 << (SiddhiQLParser.INNER - 66)) | (1 << (SiddhiQLParser.OUTER - 66)) | (1 << (SiddhiQLParser.RIGHT - 66)) | (1 << (SiddhiQLParser.LEFT - 66)) | (1 << (SiddhiQLParser.FULL - 66)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 66)) | (1 << (SiddhiQLParser.YEARS - 66)) | (1 << (SiddhiQLParser.MONTHS - 66)) | (1 << (SiddhiQLParser.WEEKS - 66)) | (1 << (SiddhiQLParser.DAYS - 66)) | (1 << (SiddhiQLParser.HOURS - 66)) | (1 << (SiddhiQLParser.MINUTES - 66)) | (1 << (SiddhiQLParser.SECONDS - 66)) | (1 << (SiddhiQLParser.MILLISECONDS - 66)) | (1 << (SiddhiQLParser.FALSE - 66)) | (1 << (SiddhiQLParser.TRUE - 66)) | (1 << (SiddhiQLParser.STRING - 66)) | (1 << (SiddhiQLParser.INT - 66)) | (1 << (SiddhiQLParser.LONG - 66)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (SiddhiQLParser.FLOAT - 98)) | (1 << (SiddhiQLParser.DOUBLE - 98)) | (1 << (SiddhiQLParser.BOOL - 98)) | (1 << (SiddhiQLParser.OBJECT - 98)) | (1 << (SiddhiQLParser.ID_QUOTES - 98)) | (1 << (SiddhiQLParser.ID - 98)) | (1 << (SiddhiQLParser.STRING_LITERAL - 98)))) !== 0)) {
            this.state = 1345;
            this.attribute_list();
        }

        this.state = 1348;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_list;
    return this;
}

Attribute_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_listContext.prototype.constructor = Attribute_listContext;

Attribute_listContext.prototype.attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AttributeContext);
    } else {
        return this.getTypedRuleContext(AttributeContext,i);
    }
};

Attribute_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_list(this);
	}
};

Attribute_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_list(this);
	}
};




SiddhiQLParser.Attribute_listContext = Attribute_listContext;

SiddhiQLParser.prototype.attribute_list = function() {

    var localctx = new Attribute_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, SiddhiQLParser.RULE_attribute_list);
    var _la = 0; // Token type
    try {
        this.state = 1359;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1350;
            this.attribute();
            this.state = 1355;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 1351;
                this.match(SiddhiQLParser.COMMA);
                this.state = 1352;
                this.attribute();
                this.state = 1357;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case SiddhiQLParser.STAR:
            this.enterOuterAlt(localctx, 2);
            this.state = 1358;
            this.match(SiddhiQLParser.STAR);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Null_checkContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_null_check;
    return this;
}

Null_checkContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_checkContext.prototype.constructor = Null_checkContext;

Null_checkContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

Null_checkContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

Null_checkContext.prototype.stream_reference = function() {
    return this.getTypedRuleContext(Stream_referenceContext,0);
};

Null_checkContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Null_checkContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Null_checkContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNull_check(this);
	}
};

Null_checkContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNull_check(this);
	}
};




SiddhiQLParser.Null_checkContext = Null_checkContext;

SiddhiQLParser.prototype.null_check = function() {

    var localctx = new Null_checkContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, SiddhiQLParser.RULE_null_check);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1364;
        var la_ = this._interp.adaptivePredict(this._input,162,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1361;
            this.stream_reference();
            break;

        case 2:
            this.state = 1362;
            this.attribute_reference();
            break;

        case 3:
            this.state = 1363;
            this.function_operation();
            break;

        }
        this.state = 1366;
        this.match(SiddhiQLParser.IS);
        this.state = 1367;
        this.match(SiddhiQLParser.NULL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_reference;
    this.hash = null; // Token
    return this;
}

Stream_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_referenceContext.prototype.constructor = Stream_referenceContext;

Stream_referenceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_referenceContext.prototype.attribute_index = function() {
    return this.getTypedRuleContext(Attribute_indexContext,0);
};

Stream_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_reference(this);
	}
};

Stream_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_reference(this);
	}
};




SiddhiQLParser.Stream_referenceContext = Stream_referenceContext;

SiddhiQLParser.prototype.stream_reference = function() {

    var localctx = new Stream_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, SiddhiQLParser.RULE_stream_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1370;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 1369;
            localctx.hash = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1372;
        this.name();
        this.state = 1377;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
            this.state = 1373;
            this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
            this.state = 1374;
            this.attribute_index();
            this.state = 1375;
            this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_reference;
    this.hash1 = null; // Token
    this.name1 = null; // NameContext
    this.attribute_index1 = null; // Attribute_indexContext
    this.hash2 = null; // Token
    this.name2 = null; // NameContext
    this.attribute_index2 = null; // Attribute_indexContext
    return this;
}

Attribute_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_referenceContext.prototype.constructor = Attribute_referenceContext;

Attribute_referenceContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Attribute_referenceContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Attribute_referenceContext.prototype.attribute_index = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_indexContext);
    } else {
        return this.getTypedRuleContext(Attribute_indexContext,i);
    }
};

Attribute_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_reference(this);
	}
};

Attribute_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_reference(this);
	}
};




SiddhiQLParser.Attribute_referenceContext = Attribute_referenceContext;

SiddhiQLParser.prototype.attribute_reference = function() {

    var localctx = new Attribute_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, SiddhiQLParser.RULE_attribute_reference);
    var _la = 0; // Token type
    try {
        this.state = 1403;
        var la_ = this._interp.adaptivePredict(this._input,169,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1380;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 1379;
                localctx.hash1 = this.match(SiddhiQLParser.HASH);
            }

            this.state = 1382;
            localctx.name1 = this.name();
            this.state = 1387;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
                this.state = 1383;
                this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
                this.state = 1384;
                localctx.attribute_index1 = this.attribute_index();
                this.state = 1385;
                this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
            }

            this.state = 1397;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 1389;
                localctx.hash2 = this.match(SiddhiQLParser.HASH);
                this.state = 1390;
                localctx.name2 = this.name();
                this.state = 1395;
                _la = this._input.LA(1);
                if(_la===SiddhiQLParser.OPEN_SQUARE_BRACKETS) {
                    this.state = 1391;
                    this.match(SiddhiQLParser.OPEN_SQUARE_BRACKETS);
                    this.state = 1392;
                    localctx.attribute_index2 = this.attribute_index();
                    this.state = 1393;
                    this.match(SiddhiQLParser.CLOSE_SQUARE_BRACKETS);
                }

            }

            this.state = 1399;
            this.match(SiddhiQLParser.DOT);
            this.state = 1400;
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1402;
            this.attribute_name();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_indexContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_index;
    return this;
}

Attribute_indexContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_indexContext.prototype.constructor = Attribute_indexContext;

Attribute_indexContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Attribute_indexContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Attribute_indexContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_index(this);
	}
};

Attribute_indexContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_index(this);
	}
};




SiddhiQLParser.Attribute_indexContext = Attribute_indexContext;

SiddhiQLParser.prototype.attribute_index = function() {

    var localctx = new Attribute_indexContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, SiddhiQLParser.RULE_attribute_index);
    var _la = 0; // Token type
    try {
        this.state = 1411;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 1405;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;
        case SiddhiQLParser.LAST:
            this.enterOuterAlt(localctx, 2);
            this.state = 1406;
            this.match(SiddhiQLParser.LAST);
            this.state = 1409;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.MINUS) {
                this.state = 1407;
                this.match(SiddhiQLParser.MINUS);
                this.state = 1408;
                this.match(SiddhiQLParser.INT_LITERAL);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_id;
    return this;
}

Function_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_idContext.prototype.constructor = Function_idContext;

Function_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_id(this);
	}
};

Function_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_id(this);
	}
};




SiddhiQLParser.Function_idContext = Function_idContext;

SiddhiQLParser.prototype.function_id = function() {

    var localctx = new Function_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, SiddhiQLParser.RULE_function_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1413;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_namespaceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_namespace;
    return this;
}

Function_namespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_namespaceContext.prototype.constructor = Function_namespaceContext;

Function_namespaceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_namespaceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_namespace(this);
	}
};

Function_namespaceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_namespace(this);
	}
};




SiddhiQLParser.Function_namespaceContext = Function_namespaceContext;

SiddhiQLParser.prototype.function_namespace = function() {

    var localctx = new Function_namespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, SiddhiQLParser.RULE_function_namespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1415;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_id;
    return this;
}

Stream_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_idContext.prototype.constructor = Stream_idContext;

Stream_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_id(this);
	}
};

Stream_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_id(this);
	}
};




SiddhiQLParser.Stream_idContext = Stream_idContext;

SiddhiQLParser.prototype.stream_id = function() {

    var localctx = new Stream_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, SiddhiQLParser.RULE_stream_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1417;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Source_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source_id;
    return this;
}

Source_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Source_idContext.prototype.constructor = Source_idContext;

Source_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Source_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource_id(this);
	}
};

Source_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource_id(this);
	}
};




SiddhiQLParser.Source_idContext = Source_idContext;

SiddhiQLParser.prototype.source_id = function() {

    var localctx = new Source_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, SiddhiQLParser.RULE_source_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1419;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AliasContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_alias;
    return this;
}

AliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AliasContext.prototype.constructor = AliasContext;

AliasContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AliasContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAlias(this);
	}
};

AliasContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAlias(this);
	}
};




SiddhiQLParser.AliasContext = AliasContext;

SiddhiQLParser.prototype.alias = function() {

    var localctx = new AliasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 206, SiddhiQLParser.RULE_alias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1421;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_name;
    return this;
}

Property_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_nameContext.prototype.constructor = Property_nameContext;

Property_nameContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Property_nameContext.prototype.property_separator = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Property_separatorContext);
    } else {
        return this.getTypedRuleContext(Property_separatorContext,i);
    }
};

Property_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_name(this);
	}
};

Property_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_name(this);
	}
};




SiddhiQLParser.Property_nameContext = Property_nameContext;

SiddhiQLParser.prototype.property_name = function() {

    var localctx = new Property_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, SiddhiQLParser.RULE_property_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1423;
        this.name();
        this.state = 1429;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0)) {
            this.state = 1424;
            this.property_separator();
            this.state = 1425;
            this.name();
            this.state = 1431;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_name;
    return this;
}

Attribute_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_nameContext.prototype.constructor = Attribute_nameContext;

Attribute_nameContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Attribute_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_name(this);
	}
};

Attribute_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_name(this);
	}
};




SiddhiQLParser.Attribute_nameContext = Attribute_nameContext;

SiddhiQLParser.prototype.attribute_name = function() {

    var localctx = new Attribute_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, SiddhiQLParser.RULE_attribute_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1432;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_type;
    return this;
}

TypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeContext.prototype.constructor = TypeContext;

TypeContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

TypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterType(this);
	}
};

TypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitType(this);
	}
};




SiddhiQLParser.TypeContext = TypeContext;

SiddhiQLParser.prototype.type = function() {

    var localctx = new TypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 212, SiddhiQLParser.RULE_type);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1434;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Property_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_value(this);
	}
};

Property_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_value(this);
	}
};




SiddhiQLParser.Property_valueContext = Property_valueContext;

SiddhiQLParser.prototype.property_value = function() {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 214, SiddhiQLParser.RULE_property_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1436;
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_separatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_separator;
    return this;
}

Property_separatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_separatorContext.prototype.constructor = Property_separatorContext;

Property_separatorContext.prototype.DOT = function() {
    return this.getToken(SiddhiQLParser.DOT, 0);
};

Property_separatorContext.prototype.MINUS = function() {
    return this.getToken(SiddhiQLParser.MINUS, 0);
};

Property_separatorContext.prototype.COL = function() {
    return this.getToken(SiddhiQLParser.COL, 0);
};

Property_separatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_separator(this);
	}
};

Property_separatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_separator(this);
	}
};




SiddhiQLParser.Property_separatorContext = Property_separatorContext;

SiddhiQLParser.prototype.property_separator = function() {

    var localctx = new Property_separatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 216, SiddhiQLParser.RULE_property_separator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1438;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << SiddhiQLParser.COL) | (1 << SiddhiQLParser.DOT) | (1 << SiddhiQLParser.MINUS))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source;
    this.inner = null; // Token
    return this;
}

SourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SourceContext.prototype.constructor = SourceContext;

SourceContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

SourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource(this);
	}
};

SourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource(this);
	}
};




SiddhiQLParser.SourceContext = SourceContext;

SiddhiQLParser.prototype.source = function() {

    var localctx = new SourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 218, SiddhiQLParser.RULE_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1441;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 1440;
            localctx.inner = this.match(SiddhiQLParser.HASH);
        }

        this.state = 1443;
        this.stream_id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TargetContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_target;
    return this;
}

TargetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TargetContext.prototype.constructor = TargetContext;

TargetContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

TargetContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTarget(this);
	}
};

TargetContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTarget(this);
	}
};




SiddhiQLParser.TargetContext = TargetContext;

SiddhiQLParser.prototype.target = function() {

    var localctx = new TargetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 220, SiddhiQLParser.RULE_target);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1445;
        this.source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_event;
    return this;
}

EventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventContext.prototype.constructor = EventContext;

EventContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

EventContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvent(this);
	}
};

EventContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvent(this);
	}
};




SiddhiQLParser.EventContext = EventContext;

SiddhiQLParser.prototype.event = function() {

    var localctx = new EventContext(this, this._ctx, this.state);
    this.enterRule(localctx, 222, SiddhiQLParser.RULE_event);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1447;
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_name;
    return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

NameContext.prototype.keyword = function() {
    return this.getTypedRuleContext(KeywordContext,0);
};

NameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterName(this);
	}
};

NameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitName(this);
	}
};




SiddhiQLParser.NameContext = NameContext;

SiddhiQLParser.prototype.name = function() {

    var localctx = new NameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 224, SiddhiQLParser.RULE_name);
    try {
        this.state = 1451;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.enterOuterAlt(localctx, 1);
            this.state = 1449;
            this.id();
            break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.ORDER:
        case SiddhiQLParser.LIMIT:
        case SiddhiQLParser.ASC:
        case SiddhiQLParser.DESC:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1450;
            this.keyword();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CollectContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_collect;
    this.start = null; // Token
    this.end = null; // Token
    return this;
}

CollectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CollectContext.prototype.constructor = CollectContext;

CollectContext.prototype.INT_LITERAL = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.INT_LITERAL);
    } else {
        return this.getToken(SiddhiQLParser.INT_LITERAL, i);
    }
};


CollectContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCollect(this);
	}
};

CollectContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCollect(this);
	}
};




SiddhiQLParser.CollectContext = CollectContext;

SiddhiQLParser.prototype.collect = function() {

    var localctx = new CollectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 226, SiddhiQLParser.RULE_collect);
    try {
        this.state = 1461;
        var la_ = this._interp.adaptivePredict(this._input,175,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1453;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1454;
            this.match(SiddhiQLParser.COL);
            this.state = 1455;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1456;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 1457;
            this.match(SiddhiQLParser.COL);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1458;
            this.match(SiddhiQLParser.COL);
            this.state = 1459;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1460;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_type;
    return this;
}

Attribute_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_typeContext.prototype.constructor = Attribute_typeContext;

Attribute_typeContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

Attribute_typeContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

Attribute_typeContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

Attribute_typeContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

Attribute_typeContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

Attribute_typeContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

Attribute_typeContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

Attribute_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_type(this);
	}
};

Attribute_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_type(this);
	}
};




SiddhiQLParser.Attribute_typeContext = Attribute_typeContext;

SiddhiQLParser.prototype.attribute_type = function() {

    var localctx = new Attribute_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 228, SiddhiQLParser.RULE_attribute_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1463;
        _la = this._input.LA(1);
        if(!(((((_la - 95)) & ~0x1f) == 0 && ((1 << (_la - 95)) & ((1 << (SiddhiQLParser.STRING - 95)) | (1 << (SiddhiQLParser.INT - 95)) | (1 << (SiddhiQLParser.LONG - 95)) | (1 << (SiddhiQLParser.FLOAT - 95)) | (1 << (SiddhiQLParser.DOUBLE - 95)) | (1 << (SiddhiQLParser.BOOL - 95)) | (1 << (SiddhiQLParser.OBJECT - 95)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JoinContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join;
    return this;
}

JoinContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JoinContext.prototype.constructor = JoinContext;

JoinContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

JoinContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

JoinContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

JoinContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

JoinContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

JoinContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

JoinContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin(this);
	}
};

JoinContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin(this);
	}
};




SiddhiQLParser.JoinContext = JoinContext;

SiddhiQLParser.prototype.join = function() {

    var localctx = new JoinContext(this, this._ctx, this.state);
    this.enterRule(localctx, 230, SiddhiQLParser.RULE_join);
    var _la = 0; // Token type
    try {
        this.state = 1480;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LEFT:
            this.enterOuterAlt(localctx, 1);
            this.state = 1465;
            this.match(SiddhiQLParser.LEFT);
            this.state = 1466;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1467;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.RIGHT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1468;
            this.match(SiddhiQLParser.RIGHT);
            this.state = 1469;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1470;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.FULL:
            this.enterOuterAlt(localctx, 3);
            this.state = 1471;
            this.match(SiddhiQLParser.FULL);
            this.state = 1472;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1473;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.OUTER:
            this.enterOuterAlt(localctx, 4);
            this.state = 1474;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1475;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
            this.enterOuterAlt(localctx, 5);
            this.state = 1477;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.INNER) {
                this.state = 1476;
                this.match(SiddhiQLParser.INNER);
            }

            this.state = 1479;
            this.match(SiddhiQLParser.JOIN);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constant_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_constant_value;
    return this;
}

Constant_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constant_valueContext.prototype.constructor = Constant_valueContext;

Constant_valueContext.prototype.bool_value = function() {
    return this.getTypedRuleContext(Bool_valueContext,0);
};

Constant_valueContext.prototype.signed_double_value = function() {
    return this.getTypedRuleContext(Signed_double_valueContext,0);
};

Constant_valueContext.prototype.signed_float_value = function() {
    return this.getTypedRuleContext(Signed_float_valueContext,0);
};

Constant_valueContext.prototype.signed_long_value = function() {
    return this.getTypedRuleContext(Signed_long_valueContext,0);
};

Constant_valueContext.prototype.signed_int_value = function() {
    return this.getTypedRuleContext(Signed_int_valueContext,0);
};

Constant_valueContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Constant_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Constant_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterConstant_value(this);
	}
};

Constant_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitConstant_value(this);
	}
};




SiddhiQLParser.Constant_valueContext = Constant_valueContext;

SiddhiQLParser.prototype.constant_value = function() {

    var localctx = new Constant_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 232, SiddhiQLParser.RULE_constant_value);
    try {
        this.state = 1489;
        var la_ = this._interp.adaptivePredict(this._input,178,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1482;
            this.bool_value();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1483;
            this.signed_double_value();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1484;
            this.signed_float_value();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1485;
            this.signed_long_value();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1486;
            this.signed_int_value();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1487;
            this.time_value();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1488;
            this.string_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_id;
    return this;
}

IdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdContext.prototype.constructor = IdContext;

IdContext.prototype.ID_QUOTES = function() {
    return this.getToken(SiddhiQLParser.ID_QUOTES, 0);
};

IdContext.prototype.ID = function() {
    return this.getToken(SiddhiQLParser.ID, 0);
};

IdContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterId(this);
	}
};

IdContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitId(this);
	}
};




SiddhiQLParser.IdContext = IdContext;

SiddhiQLParser.prototype.id = function() {

    var localctx = new IdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 234, SiddhiQLParser.RULE_id);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1491;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ID_QUOTES || _la===SiddhiQLParser.ID)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KeywordContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_keyword;
    return this;
}

KeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KeywordContext.prototype.constructor = KeywordContext;

KeywordContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

KeywordContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

KeywordContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

KeywordContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

KeywordContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

KeywordContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

KeywordContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

KeywordContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

KeywordContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

KeywordContext.prototype.ORDER = function() {
    return this.getToken(SiddhiQLParser.ORDER, 0);
};

KeywordContext.prototype.ASC = function() {
    return this.getToken(SiddhiQLParser.ASC, 0);
};

KeywordContext.prototype.DESC = function() {
    return this.getToken(SiddhiQLParser.DESC, 0);
};

KeywordContext.prototype.LIMIT = function() {
    return this.getToken(SiddhiQLParser.LIMIT, 0);
};

KeywordContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

KeywordContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

KeywordContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

KeywordContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

KeywordContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

KeywordContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

KeywordContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

KeywordContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

KeywordContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

KeywordContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

KeywordContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

KeywordContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

KeywordContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

KeywordContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

KeywordContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

KeywordContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

KeywordContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

KeywordContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

KeywordContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

KeywordContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

KeywordContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

KeywordContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

KeywordContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

KeywordContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

KeywordContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

KeywordContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

KeywordContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

KeywordContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

KeywordContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

KeywordContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

KeywordContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

KeywordContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

KeywordContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

KeywordContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

KeywordContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

KeywordContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

KeywordContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

KeywordContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

KeywordContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

KeywordContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

KeywordContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

KeywordContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

KeywordContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

KeywordContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

KeywordContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

KeywordContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

KeywordContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

KeywordContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

KeywordContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

KeywordContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

KeywordContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

KeywordContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

KeywordContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

KeywordContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterKeyword(this);
	}
};

KeywordContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitKeyword(this);
	}
};




SiddhiQLParser.KeywordContext = KeywordContext;

SiddhiQLParser.prototype.keyword = function() {

    var localctx = new KeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 236, SiddhiQLParser.RULE_keyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1493;
        _la = this._input.LA(1);
        if(!(((((_la - 30)) & ~0x1f) == 0 && ((1 << (_la - 30)) & ((1 << (SiddhiQLParser.STREAM - 30)) | (1 << (SiddhiQLParser.DEFINE - 30)) | (1 << (SiddhiQLParser.TABLE - 30)) | (1 << (SiddhiQLParser.FROM - 30)) | (1 << (SiddhiQLParser.PARTITION - 30)) | (1 << (SiddhiQLParser.WINDOW - 30)) | (1 << (SiddhiQLParser.SELECT - 30)) | (1 << (SiddhiQLParser.GROUP - 30)) | (1 << (SiddhiQLParser.BY - 30)) | (1 << (SiddhiQLParser.ORDER - 30)) | (1 << (SiddhiQLParser.LIMIT - 30)) | (1 << (SiddhiQLParser.ASC - 30)) | (1 << (SiddhiQLParser.DESC - 30)) | (1 << (SiddhiQLParser.HAVING - 30)) | (1 << (SiddhiQLParser.INSERT - 30)) | (1 << (SiddhiQLParser.DELETE - 30)) | (1 << (SiddhiQLParser.UPDATE - 30)) | (1 << (SiddhiQLParser.RETURN - 30)) | (1 << (SiddhiQLParser.EVENTS - 30)) | (1 << (SiddhiQLParser.INTO - 30)) | (1 << (SiddhiQLParser.OUTPUT - 30)) | (1 << (SiddhiQLParser.EXPIRED - 30)) | (1 << (SiddhiQLParser.CURRENT - 30)) | (1 << (SiddhiQLParser.SNAPSHOT - 30)) | (1 << (SiddhiQLParser.FOR - 30)) | (1 << (SiddhiQLParser.RAW - 30)) | (1 << (SiddhiQLParser.OF - 30)) | (1 << (SiddhiQLParser.AS - 30)))) !== 0) || ((((_la - 63)) & ~0x1f) == 0 && ((1 << (_la - 63)) & ((1 << (SiddhiQLParser.OR - 63)) | (1 << (SiddhiQLParser.AND - 63)) | (1 << (SiddhiQLParser.ON - 63)) | (1 << (SiddhiQLParser.IS - 63)) | (1 << (SiddhiQLParser.NOT - 63)) | (1 << (SiddhiQLParser.WITHIN - 63)) | (1 << (SiddhiQLParser.WITH - 63)) | (1 << (SiddhiQLParser.BEGIN - 63)) | (1 << (SiddhiQLParser.END - 63)) | (1 << (SiddhiQLParser.NULL - 63)) | (1 << (SiddhiQLParser.EVERY - 63)) | (1 << (SiddhiQLParser.LAST - 63)) | (1 << (SiddhiQLParser.ALL - 63)) | (1 << (SiddhiQLParser.FIRST - 63)) | (1 << (SiddhiQLParser.JOIN - 63)) | (1 << (SiddhiQLParser.INNER - 63)) | (1 << (SiddhiQLParser.OUTER - 63)) | (1 << (SiddhiQLParser.RIGHT - 63)) | (1 << (SiddhiQLParser.LEFT - 63)) | (1 << (SiddhiQLParser.FULL - 63)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 63)) | (1 << (SiddhiQLParser.YEARS - 63)) | (1 << (SiddhiQLParser.MONTHS - 63)) | (1 << (SiddhiQLParser.WEEKS - 63)) | (1 << (SiddhiQLParser.DAYS - 63)) | (1 << (SiddhiQLParser.HOURS - 63)) | (1 << (SiddhiQLParser.MINUTES - 63)) | (1 << (SiddhiQLParser.SECONDS - 63)) | (1 << (SiddhiQLParser.MILLISECONDS - 63)) | (1 << (SiddhiQLParser.FALSE - 63)) | (1 << (SiddhiQLParser.TRUE - 63)))) !== 0) || ((((_la - 95)) & ~0x1f) == 0 && ((1 << (_la - 95)) & ((1 << (SiddhiQLParser.STRING - 95)) | (1 << (SiddhiQLParser.INT - 95)) | (1 << (SiddhiQLParser.LONG - 95)) | (1 << (SiddhiQLParser.FLOAT - 95)) | (1 << (SiddhiQLParser.DOUBLE - 95)) | (1 << (SiddhiQLParser.BOOL - 95)) | (1 << (SiddhiQLParser.OBJECT - 95)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Time_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_time_value;
    return this;
}

Time_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Time_valueContext.prototype.constructor = Time_valueContext;

Time_valueContext.prototype.year_value = function() {
    return this.getTypedRuleContext(Year_valueContext,0);
};

Time_valueContext.prototype.month_value = function() {
    return this.getTypedRuleContext(Month_valueContext,0);
};

Time_valueContext.prototype.week_value = function() {
    return this.getTypedRuleContext(Week_valueContext,0);
};

Time_valueContext.prototype.day_value = function() {
    return this.getTypedRuleContext(Day_valueContext,0);
};

Time_valueContext.prototype.hour_value = function() {
    return this.getTypedRuleContext(Hour_valueContext,0);
};

Time_valueContext.prototype.minute_value = function() {
    return this.getTypedRuleContext(Minute_valueContext,0);
};

Time_valueContext.prototype.second_value = function() {
    return this.getTypedRuleContext(Second_valueContext,0);
};

Time_valueContext.prototype.millisecond_value = function() {
    return this.getTypedRuleContext(Millisecond_valueContext,0);
};

Time_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTime_value(this);
	}
};

Time_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTime_value(this);
	}
};




SiddhiQLParser.Time_valueContext = Time_valueContext;

SiddhiQLParser.prototype.time_value = function() {

    var localctx = new Time_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 238, SiddhiQLParser.RULE_time_value);
    try {
        this.state = 1587;
        var la_ = this._interp.adaptivePredict(this._input,207,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1495;
            this.year_value();
            this.state = 1497;
            var la_ = this._interp.adaptivePredict(this._input,179,this._ctx);
            if(la_===1) {
                this.state = 1496;
                this.month_value();

            }
            this.state = 1500;
            var la_ = this._interp.adaptivePredict(this._input,180,this._ctx);
            if(la_===1) {
                this.state = 1499;
                this.week_value();

            }
            this.state = 1503;
            var la_ = this._interp.adaptivePredict(this._input,181,this._ctx);
            if(la_===1) {
                this.state = 1502;
                this.day_value();

            }
            this.state = 1506;
            var la_ = this._interp.adaptivePredict(this._input,182,this._ctx);
            if(la_===1) {
                this.state = 1505;
                this.hour_value();

            }
            this.state = 1509;
            var la_ = this._interp.adaptivePredict(this._input,183,this._ctx);
            if(la_===1) {
                this.state = 1508;
                this.minute_value();

            }
            this.state = 1512;
            var la_ = this._interp.adaptivePredict(this._input,184,this._ctx);
            if(la_===1) {
                this.state = 1511;
                this.second_value();

            }
            this.state = 1515;
            var la_ = this._interp.adaptivePredict(this._input,185,this._ctx);
            if(la_===1) {
                this.state = 1514;
                this.millisecond_value();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1517;
            this.month_value();
            this.state = 1519;
            var la_ = this._interp.adaptivePredict(this._input,186,this._ctx);
            if(la_===1) {
                this.state = 1518;
                this.week_value();

            }
            this.state = 1522;
            var la_ = this._interp.adaptivePredict(this._input,187,this._ctx);
            if(la_===1) {
                this.state = 1521;
                this.day_value();

            }
            this.state = 1525;
            var la_ = this._interp.adaptivePredict(this._input,188,this._ctx);
            if(la_===1) {
                this.state = 1524;
                this.hour_value();

            }
            this.state = 1528;
            var la_ = this._interp.adaptivePredict(this._input,189,this._ctx);
            if(la_===1) {
                this.state = 1527;
                this.minute_value();

            }
            this.state = 1531;
            var la_ = this._interp.adaptivePredict(this._input,190,this._ctx);
            if(la_===1) {
                this.state = 1530;
                this.second_value();

            }
            this.state = 1534;
            var la_ = this._interp.adaptivePredict(this._input,191,this._ctx);
            if(la_===1) {
                this.state = 1533;
                this.millisecond_value();

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1536;
            this.week_value();
            this.state = 1538;
            var la_ = this._interp.adaptivePredict(this._input,192,this._ctx);
            if(la_===1) {
                this.state = 1537;
                this.day_value();

            }
            this.state = 1541;
            var la_ = this._interp.adaptivePredict(this._input,193,this._ctx);
            if(la_===1) {
                this.state = 1540;
                this.hour_value();

            }
            this.state = 1544;
            var la_ = this._interp.adaptivePredict(this._input,194,this._ctx);
            if(la_===1) {
                this.state = 1543;
                this.minute_value();

            }
            this.state = 1547;
            var la_ = this._interp.adaptivePredict(this._input,195,this._ctx);
            if(la_===1) {
                this.state = 1546;
                this.second_value();

            }
            this.state = 1550;
            var la_ = this._interp.adaptivePredict(this._input,196,this._ctx);
            if(la_===1) {
                this.state = 1549;
                this.millisecond_value();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1552;
            this.day_value();
            this.state = 1554;
            var la_ = this._interp.adaptivePredict(this._input,197,this._ctx);
            if(la_===1) {
                this.state = 1553;
                this.hour_value();

            }
            this.state = 1557;
            var la_ = this._interp.adaptivePredict(this._input,198,this._ctx);
            if(la_===1) {
                this.state = 1556;
                this.minute_value();

            }
            this.state = 1560;
            var la_ = this._interp.adaptivePredict(this._input,199,this._ctx);
            if(la_===1) {
                this.state = 1559;
                this.second_value();

            }
            this.state = 1563;
            var la_ = this._interp.adaptivePredict(this._input,200,this._ctx);
            if(la_===1) {
                this.state = 1562;
                this.millisecond_value();

            }
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1565;
            this.hour_value();
            this.state = 1567;
            var la_ = this._interp.adaptivePredict(this._input,201,this._ctx);
            if(la_===1) {
                this.state = 1566;
                this.minute_value();

            }
            this.state = 1570;
            var la_ = this._interp.adaptivePredict(this._input,202,this._ctx);
            if(la_===1) {
                this.state = 1569;
                this.second_value();

            }
            this.state = 1573;
            var la_ = this._interp.adaptivePredict(this._input,203,this._ctx);
            if(la_===1) {
                this.state = 1572;
                this.millisecond_value();

            }
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1575;
            this.minute_value();
            this.state = 1577;
            var la_ = this._interp.adaptivePredict(this._input,204,this._ctx);
            if(la_===1) {
                this.state = 1576;
                this.second_value();

            }
            this.state = 1580;
            var la_ = this._interp.adaptivePredict(this._input,205,this._ctx);
            if(la_===1) {
                this.state = 1579;
                this.millisecond_value();

            }
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1582;
            this.second_value();
            this.state = 1584;
            var la_ = this._interp.adaptivePredict(this._input,206,this._ctx);
            if(la_===1) {
                this.state = 1583;
                this.millisecond_value();

            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1586;
            this.millisecond_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Year_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_year_value;
    return this;
}

Year_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Year_valueContext.prototype.constructor = Year_valueContext;

Year_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Year_valueContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Year_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterYear_value(this);
	}
};

Year_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitYear_value(this);
	}
};




SiddhiQLParser.Year_valueContext = Year_valueContext;

SiddhiQLParser.prototype.year_value = function() {

    var localctx = new Year_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 240, SiddhiQLParser.RULE_year_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1589;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1590;
        this.match(SiddhiQLParser.YEARS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Month_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_month_value;
    return this;
}

Month_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Month_valueContext.prototype.constructor = Month_valueContext;

Month_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Month_valueContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Month_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMonth_value(this);
	}
};

Month_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMonth_value(this);
	}
};




SiddhiQLParser.Month_valueContext = Month_valueContext;

SiddhiQLParser.prototype.month_value = function() {

    var localctx = new Month_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 242, SiddhiQLParser.RULE_month_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1592;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1593;
        this.match(SiddhiQLParser.MONTHS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Week_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_week_value;
    return this;
}

Week_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Week_valueContext.prototype.constructor = Week_valueContext;

Week_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Week_valueContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Week_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWeek_value(this);
	}
};

Week_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWeek_value(this);
	}
};




SiddhiQLParser.Week_valueContext = Week_valueContext;

SiddhiQLParser.prototype.week_value = function() {

    var localctx = new Week_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 244, SiddhiQLParser.RULE_week_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1595;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1596;
        this.match(SiddhiQLParser.WEEKS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Day_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_day_value;
    return this;
}

Day_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Day_valueContext.prototype.constructor = Day_valueContext;

Day_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Day_valueContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Day_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDay_value(this);
	}
};

Day_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDay_value(this);
	}
};




SiddhiQLParser.Day_valueContext = Day_valueContext;

SiddhiQLParser.prototype.day_value = function() {

    var localctx = new Day_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 246, SiddhiQLParser.RULE_day_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1598;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1599;
        this.match(SiddhiQLParser.DAYS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Hour_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_hour_value;
    return this;
}

Hour_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hour_valueContext.prototype.constructor = Hour_valueContext;

Hour_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Hour_valueContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Hour_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHour_value(this);
	}
};

Hour_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHour_value(this);
	}
};




SiddhiQLParser.Hour_valueContext = Hour_valueContext;

SiddhiQLParser.prototype.hour_value = function() {

    var localctx = new Hour_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 248, SiddhiQLParser.RULE_hour_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1601;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1602;
        this.match(SiddhiQLParser.HOURS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Minute_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_minute_value;
    return this;
}

Minute_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Minute_valueContext.prototype.constructor = Minute_valueContext;

Minute_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Minute_valueContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Minute_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMinute_value(this);
	}
};

Minute_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMinute_value(this);
	}
};




SiddhiQLParser.Minute_valueContext = Minute_valueContext;

SiddhiQLParser.prototype.minute_value = function() {

    var localctx = new Minute_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 250, SiddhiQLParser.RULE_minute_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1604;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1605;
        this.match(SiddhiQLParser.MINUTES);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Second_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_second_value;
    return this;
}

Second_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Second_valueContext.prototype.constructor = Second_valueContext;

Second_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Second_valueContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Second_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSecond_value(this);
	}
};

Second_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSecond_value(this);
	}
};




SiddhiQLParser.Second_valueContext = Second_valueContext;

SiddhiQLParser.prototype.second_value = function() {

    var localctx = new Second_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 252, SiddhiQLParser.RULE_second_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1607;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1608;
        this.match(SiddhiQLParser.SECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Millisecond_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_millisecond_value;
    return this;
}

Millisecond_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Millisecond_valueContext.prototype.constructor = Millisecond_valueContext;

Millisecond_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Millisecond_valueContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

Millisecond_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMillisecond_value(this);
	}
};

Millisecond_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMillisecond_value(this);
	}
};




SiddhiQLParser.Millisecond_valueContext = Millisecond_valueContext;

SiddhiQLParser.prototype.millisecond_value = function() {

    var localctx = new Millisecond_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 254, SiddhiQLParser.RULE_millisecond_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1610;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1611;
        this.match(SiddhiQLParser.MILLISECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_double_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_double_value;
    return this;
}

Signed_double_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_double_valueContext.prototype.constructor = Signed_double_valueContext;

Signed_double_valueContext.prototype.DOUBLE_LITERAL = function() {
    return this.getToken(SiddhiQLParser.DOUBLE_LITERAL, 0);
};

Signed_double_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_double_value(this);
	}
};

Signed_double_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_double_value(this);
	}
};




SiddhiQLParser.Signed_double_valueContext = Signed_double_valueContext;

SiddhiQLParser.prototype.signed_double_value = function() {

    var localctx = new Signed_double_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 256, SiddhiQLParser.RULE_signed_double_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1614;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1613;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1616;
        this.match(SiddhiQLParser.DOUBLE_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_long_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_long_value;
    return this;
}

Signed_long_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_long_valueContext.prototype.constructor = Signed_long_valueContext;

Signed_long_valueContext.prototype.LONG_LITERAL = function() {
    return this.getToken(SiddhiQLParser.LONG_LITERAL, 0);
};

Signed_long_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_long_value(this);
	}
};

Signed_long_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_long_value(this);
	}
};




SiddhiQLParser.Signed_long_valueContext = Signed_long_valueContext;

SiddhiQLParser.prototype.signed_long_value = function() {

    var localctx = new Signed_long_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 258, SiddhiQLParser.RULE_signed_long_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1619;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1618;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1621;
        this.match(SiddhiQLParser.LONG_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_float_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_float_value;
    return this;
}

Signed_float_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_float_valueContext.prototype.constructor = Signed_float_valueContext;

Signed_float_valueContext.prototype.FLOAT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.FLOAT_LITERAL, 0);
};

Signed_float_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_float_value(this);
	}
};

Signed_float_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_float_value(this);
	}
};




SiddhiQLParser.Signed_float_valueContext = Signed_float_valueContext;

SiddhiQLParser.prototype.signed_float_value = function() {

    var localctx = new Signed_float_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 260, SiddhiQLParser.RULE_signed_float_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1624;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1623;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1626;
        this.match(SiddhiQLParser.FLOAT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_int_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_int_value;
    return this;
}

Signed_int_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_int_valueContext.prototype.constructor = Signed_int_valueContext;

Signed_int_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Signed_int_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_int_value(this);
	}
};

Signed_int_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_int_value(this);
	}
};




SiddhiQLParser.Signed_int_valueContext = Signed_int_valueContext;

SiddhiQLParser.prototype.signed_int_value = function() {

    var localctx = new Signed_int_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 262, SiddhiQLParser.RULE_signed_int_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1629;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1628;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
        }

        this.state = 1631;
        this.match(SiddhiQLParser.INT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bool_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_bool_value;
    return this;
}

Bool_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bool_valueContext.prototype.constructor = Bool_valueContext;

Bool_valueContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

Bool_valueContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

Bool_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBool_value(this);
	}
};

Bool_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBool_value(this);
	}
};




SiddhiQLParser.Bool_valueContext = Bool_valueContext;

SiddhiQLParser.prototype.bool_value = function() {

    var localctx = new Bool_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 264, SiddhiQLParser.RULE_bool_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1633;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.FALSE || _la===SiddhiQLParser.TRUE)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function String_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_string_value;
    return this;
}

String_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_valueContext.prototype.constructor = String_valueContext;

String_valueContext.prototype.STRING_LITERAL = function() {
    return this.getToken(SiddhiQLParser.STRING_LITERAL, 0);
};

String_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterString_value(this);
	}
};

String_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitString_value(this);
	}
};




SiddhiQLParser.String_valueContext = String_valueContext;

SiddhiQLParser.prototype.string_value = function() {

    var localctx = new String_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 266, SiddhiQLParser.RULE_string_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1635;
        this.match(SiddhiQLParser.STRING_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


SiddhiQLParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 43:
			return this.every_pattern_source_chain_sempred(localctx, predIndex);
	case 44:
			return this.pattern_source_chain_sempred(localctx, predIndex);
	case 46:
			return this.left_absent_pattern_source_sempred(localctx, predIndex);
	case 47:
			return this.right_absent_pattern_source_sempred(localctx, predIndex);
	case 62:
			return this.left_absent_sequence_source_sempred(localctx, predIndex);
	case 63:
			return this.right_absent_sequence_source_sempred(localctx, predIndex);
	case 64:
			return this.sequence_source_chain_sempred(localctx, predIndex);
	case 92:
			return this.math_operation_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

SiddhiQLParser.prototype.every_pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.left_absent_pattern_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 3);
		case 3:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.right_absent_pattern_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 4:
			return this.precpred(this._ctx, 3);
		case 5:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.left_absent_sequence_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 6:
			return this.precpred(this._ctx, 3);
		case 7:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.right_absent_sequence_source_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 8:
			return this.precpred(this._ctx, 3);
		case 9:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.sequence_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 10:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.math_operation_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 11:
			return this.precpred(this._ctx, 10);
		case 12:
			return this.precpred(this._ctx, 9);
		case 13:
			return this.precpred(this._ctx, 8);
		case 14:
			return this.precpred(this._ctx, 7);
		case 15:
			return this.precpred(this._ctx, 5);
		case 16:
			return this.precpred(this._ctx, 4);
		case 17:
			return this.precpred(this._ctx, 6);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.SiddhiQLParser = SiddhiQLParser;
